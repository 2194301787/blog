{"version":3,"sources":["public/nav/nav.js","../node_modules/wangeditor/release/wangEditor.js","page/addBlog/addBlog.js"],"names":["LinkAntd","antd_lib_anchor__WEBPACK_IMPORTED_MODULE_19___default","a","Link","Nav","props","_this","Object","G_react_react_own_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_12__","this","G_react_react_own_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_14__","G_react_react_own_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_15__","call","state","background","top","urlName","handleMenuClick","bind","G_react_react_own_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_16__","e","parseInt","key","logout","_self","Ajax","post","then","res","data","msg","Logout","username","status","antd_lib_message__WEBPACK_IMPORTED_MODULE_11___default","success","catch","err","console","log","url","location","pathname","setState","window","onscroll","document","documentElement","scrollTop","body","nextProps","nextState","isLogin","getUsername","_this$props","myAvatar","menu","react__WEBPACK_IMPORTED_MODULE_20___default","createElement","antd_lib_menu__WEBPACK_IMPORTED_MODULE_9___default","onClick","Item","react_router_dom__WEBPACK_IMPORTED_MODULE_22__","to","style","className","antd_lib_avatar__WEBPACK_IMPORTED_MODULE_7___default","size","src","concat","icon","title","href","antd_lib_dropdown__WEBPACK_IMPORTED_MODULE_1___default","overlay","antd_lib_button__WEBPACK_IMPORTED_MODULE_3___default","antd_lib_icon__WEBPACK_IMPORTED_MODULE_5___default","type","Component","ProTypes","string","bool","connect","user","withRouter","module","exports","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","html","div","innerHTML","children","createElemByHTML","result","querySelectorAll","length","i","$","prototype","constructor","forEach","fn","elem","clone","deep","cloneList","push","cloneNode","get","index","first","last","on","types","split","addEventListener","target","matches","off","removeEventListener","attr","val","getAttribute","setAttribute","addClass","arr","filter","item","join","removeClass","css","currentStyle","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","content","alt","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","opt","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","name","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","keyCode","pHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","img","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","responseText","JSON","parse","customInsert","errno","beforeResult","prevent","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","assign","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor","factory","AddBlog","G_react_react_own_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__","G_react_react_own_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_8__","G_react_react_own_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_9__","Blog","submit","G_react_react_own_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","inputChange","antd_lib_message__WEBPACK_IMPORTED_MODULE_5___default","info","initEditor","refs","editorElem","E","insert","formData","method","headers","Content-Type","filename","ADDBlogImg","设置标题","字号","文字颜色","设置列表","有序列表","无序列表","对齐方式","靠左","居中","靠右","正文","链接文字","链接","上传图片","网络图片","图片link","插入视频","格式如","上传","创建","react__WEBPACK_IMPORTED_MODULE_12___default","_public_nav_nav__WEBPACK_IMPORTED_MODULE_13__","antd_lib_input__WEBPACK_IMPORTED_MODULE_3___default","onChange","marginLeft","marginBottom","addonBefore","defaultValue","ref","position","textAlign","margin","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","marginTop"],"mappings":"+YAUMA,UAAWC,EAAAC,EAAOC,MAElBC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,WAAY,cACZC,IAAK,MACLC,QAAS,KAEbV,EAAKW,gBAAkBX,EAAKW,gBAAgBC,KAArBX,OAAAY,EAAA,EAAAZ,CAAAD,IAPRA,+EASHc,GAEZ,OADUC,SAASD,EAAEE,MAEjB,KAAK,EACDb,KAAKc,2CAOb,IAAIC,EAAQf,KACZgB,IAAKC,KAAK,WAAWC,KAAK,SAAAC,GACD,MAAjBA,EAAIC,KAAKC,MACTN,EAAMnB,MAAM0B,OAAO,CACfC,SAAU,GACVC,QAAQ,IAEZC,EAAAhC,EAAQiC,QAAQ,2CAErBC,MAAM,SAAAC,GAASC,QAAQC,IAAIF,iDAG9B,IAAIb,EAAQf,KACR+B,EAAMhB,EAAMnB,MAAMoC,SAASC,SAC/BlB,EAAMmB,SAAS,iBAAO,CAClB3B,QAASwB,IACT,WACY,MAARA,GACAhB,EAAMmB,SAAS,iBAAO,CAClB7B,WAAY,qBACZC,IAAK,QAGb6B,OAAOC,SAAW,SAAUzB,IACR0B,SAASC,gBAAgBC,WAAaF,SAASG,KAAKD,WACpD,IAAc,MAARR,EAClBhB,EAAMmB,SAAS,iBAAO,CAClB7B,WAAY,UACZC,IAAK,QAGG,MAARyB,GACAhB,EAAMmB,SAAS,iBAAO,CAClB7B,WAAY,cACZC,IAAK,2DAQzB6B,OAAOC,SAAW,mDAEAK,EAAWC,GAC7B,OAAI1C,KAAKJ,MAAM+C,UAAYF,EAAUE,SAAW3C,KAAKI,MAAMG,UAAYmC,EAAUnC,SAAWP,KAAKJ,MAAMgD,cAAgBH,EAAUG,aAGzHF,EAAUrC,aAAeL,KAAKI,MAAMC,4CAMvC,IAAAwC,EACoC7C,KAAKJ,MAAxCgD,EADDC,EACCD,YAAaD,EADdE,EACcF,QAASG,EADvBD,EACuBC,SACtBC,EACFC,EAAAvD,EAAAwD,cAAAC,EAAAzD,EAAA,CAAM0D,QAASnD,KAAKQ,iBAChBwC,EAAAvD,EAAAwD,cAAAC,EAAAzD,EAAM2D,KAAN,CAAWvC,IAAI,KAAImC,EAAAvD,EAAAwD,cAACI,EAAA,EAAD,CAAMC,GAAG,YAAT,uBACnBN,EAAAvD,EAAAwD,cAAAC,EAAAzD,EAAM2D,KAAN,CAAWvC,IAAI,KAAImC,EAAAvD,EAAAwD,cAACI,EAAA,EAAD,CAAMC,GAAG,YAAT,6BACnBN,EAAAvD,EAAAwD,cAAAC,EAAAzD,EAAM2D,KAAN,CAAWvC,IAAI,KAAf,iBAGR,OACImC,EAAAvD,EAAAwD,cAAA,OAAKM,MAAO,CACRlD,WAAYL,KAAKI,MAAMC,WACvBC,IAAKN,KAAKI,MAAME,KAEhBkD,UAAU,YACVR,EAAAvD,EAAAwD,cAAA,OAAKO,UAAU,YACXR,EAAAvD,EAAAwD,cAAAQ,EAAAhE,EAAA,CAAQiE,KAAK,QAAQC,IAAG,yBAAAC,OAA2Bd,GAAYe,KAAK,SACpEb,EAAAvD,EAAAwD,cAACI,EAAA,EAAD,CAAMC,GAAG,KAAT,WAAsBV,GAA4B,qCAEtDI,EAAAvD,EAAAwD,cAAA,OAAKO,UAAU,aACXR,EAAAvD,EAAAwD,cAAA,OAAKO,UAAU,gBACXR,EAAAvD,EAAAwD,cAAAzD,EAAAC,EAAA,KACIuD,EAAAvD,EAAAwD,cAAC1D,EAAD,CAAUuE,MAAM,gBAAMC,KAAK,2BAC3Bf,EAAAvD,EAAAwD,cAAC1D,EAAD,CAAUuE,MAAM,gBAAMC,KAAK,MAC3Bf,EAAAvD,EAAAwD,cAAC1D,EAAD,CAAUuE,MAAM,gBAAMC,KAAK,QAGnCf,EAAAvD,EAAAwD,cAAA,OAAKO,UAAU,oBACVb,EACGK,EAAAvD,EAAAwD,cAAAe,EAAAvE,EAAA,CAAUwE,QAASlB,GACfC,EAAAvD,EAAAwD,cAAAiB,EAAAzE,EAAA,qBACOuD,EAAAvD,EAAAwD,cAAAkB,EAAA1E,EAAA,CAAM2E,KAAK,WAItBpB,EAAAvD,EAAAwD,cAACI,EAAA,EAAD,CAAMC,GAAG,UAAT,gCA9GVe,aAsHlB1E,EAAI2E,SAAW,CACX1B,YAAa0B,IAASC,OACtB5B,QAAS2B,IAASE,KAClB1B,SAAUwB,IAASC,QAWRE,gBARS,SAACrE,GAAD,MAAY,CAChCwC,YAAaxC,EAAMsE,KAAKnD,SACxBoB,QAASvC,EAAMsE,KAAKlD,OACpBsB,SAAU1C,EAAMsE,KAAK5B,WAKe,CACpCxB,YADWmD,CAEZE,YAAWhF,+CCjJgDiF,EAAAC,QAC7D,WACD,aA6DA,SAAAC,EAAAC,GACA,QAAAA,IAIAA,aAAAC,gBAAAD,aAAAE,UAmBA,IAAAC,EAAA,GAEA,SAAAC,EAAAJ,GACA,GAAAA,EAAA,CAKA,GAAAA,aAAAI,EACA,OAAAJ,EAGA/E,KAAA+E,WACA,IAAAK,EAAAL,EAAAK,SAEAC,EAAA,GAEA,IAAAD,EAEAC,EAAA,CAAAN,GACK,IAAAK,EAELC,EAAA,CAAAN,GACKD,EAAAC,iBAAAO,MAELD,EAAAN,EACK,kBAAAA,IAELA,IAAAQ,QAAA,aAAAC,OAIAH,EAFA,IAAAN,EAAAU,QAAA,KA9DA,SAAAC,GACA,IAAAC,OAAA,EAGA,OAFAA,EAAAtD,SAAAY,cAAA,QACA2C,UAAAF,EACAC,EAAAE,SA4DAC,CAAAf,GA3CA,SAAAA,GACA,IAAAgB,EAAA1D,SAAA2D,iBAAAjB,GAEA,OAAAD,EAAAiB,GACAA,EAEA,CAAAA,GAwCAC,CAAAjB,IAIA,IAAAkB,EAAAZ,EAAAY,OAEA,IAAAA,EAEA,OAAAjG,KAIA,IAAAkG,OAAA,EAEA,IAAAA,EAAA,EAAeA,EAAAD,EAAYC,IAC3BlG,KAAAkG,GAAAb,EAAAa,GAGAlG,KAAAiG,UAkYA,SAAAE,EAAApB,GACA,WAAAI,EAAAJ,GA/XAI,EAAAiB,UAAA,CACAC,YAAAlB,EAEAmB,QAAA,SAAAC,GACA,IAAAL,OAAA,EAEA,IAAAA,EAAA,EAAiBA,EAAAlG,KAAAiG,OAAiBC,IAAA,CAClC,IAAAM,EAAAxG,KAAAkG,GACAH,EAAAQ,EAAApG,KAAAqG,IAAAN,GAEA,QAAAH,EACA,MAIA,OAAA/F,MAGAyG,MAAA,SAAAC,GACA,IAAAC,EAAA,GAIA,OAHA3G,KAAAsG,QAAA,SAAAE,GACAG,EAAAC,KAAAJ,EAAAK,YAAAH,MAEAP,EAAAQ,IAGAG,IAAA,SAAAC,GACA,IAAAd,EAAAjG,KAAAiG,OAMA,OAJAc,GAAAd,IACAc,GAAAd,GAGAE,EAAAnG,KAAA+G,KAGAC,MAAA,WACA,OAAAhH,KAAA8G,IAAA,IAGAG,KAAA,WACA,IAAAhB,EAAAjG,KAAAiG,OACA,OAAAjG,KAAA8G,IAAAb,EAAA,IAGAiB,GAAA,SAAA9C,EAAAW,EAAAwB,GAEAA,IACAA,EAAAxB,EACAA,EAAA,MAIA,IAAAoC,EAAA,GAEA,OADAA,EAAA/C,EAAAgD,MAAA,OACApH,KAAAsG,QAAA,SAAAE,GACAW,EAAAb,QAAA,SAAAlC,GACAA,IAKAc,EAAA0B,KAAA,CACAJ,OACApC,OACAmC,OAGAxB,EAOAyB,EAAAa,iBAAAjD,EAAA,SAAAzD,GACA,IAAA2G,EAAA3G,EAAA2G,OAEAA,EAAAC,QAAAxC,IACAwB,EAAApG,KAAAmH,EAAA3G,KATA6F,EAAAa,iBAAAjD,EAAAmC,SAgBAiB,IAAA,SAAApD,EAAAmC,GACA,OAAAvG,KAAAsG,QAAA,SAAAE,GACAA,EAAAiB,oBAAArD,EAAAmC,MAIAmB,KAAA,SAAA7G,EAAA8G,GACA,aAAAA,EAEA3H,KAAA,GAAA4H,aAAA/G,GAGAb,KAAAsG,QAAA,SAAAE,GACAA,EAAAqB,aAAAhH,EAAA8G,MAKAG,SAAA,SAAAtE,GACA,OAAAA,EAIAxD,KAAAsG,QAAA,SAAAE,GACA,IAAAuB,OAAA,EAEAvB,EAAAhD,YAGAuE,GADAA,EAAAvB,EAAAhD,UAAA4D,MAAA,OACAY,OAAA,SAAAC,GACA,QAAAA,EAAAzC,UAGAC,QAAAjC,GAAA,GACAuE,EAAAnB,KAAApD,GAIAgD,EAAAhD,UAAAuE,EAAAG,KAAA,MAEA1B,EAAAhD,cApBAxD,MAyBAmI,YAAA,SAAA3E,GACA,OAAAA,EAIAxD,KAAAsG,QAAA,SAAAE,GACA,IAAAuB,OAAA,EAEAvB,EAAAhD,YAGAuE,GADAA,EAAAvB,EAAAhD,UAAA4D,MAAA,OACAY,OAAA,SAAAC,GAGA,UAFAA,IAAAzC,SAEAyC,IAAAzE,KAOAgD,EAAAhD,UAAAuE,EAAAG,KAAA,QAnBAlI,MAwBAoI,IAAA,SAAAvH,EAAA8G,GACA,IAAAU,EAAAxH,EAAA,IAAA8G,EAAA,IACA,OAAA3H,KAAAsG,QAAA,SAAAE,GACA,IAAAjD,GAAAiD,EAAAoB,aAAA,cAAApC,OAEA8C,EAAA,GAEA/E,GAEAA,EAAA6D,MAAA,KACAd,QAAA,SAAA2B,GAEA,IAAAF,EAAAE,EAAAb,MAAA,KAAAmB,IAAA,SAAArC,GACA,OAAAA,EAAAV,SAGA,IAAAuC,EAAA9B,QACAqC,EAAA1B,KAAAmB,EAAA,OAAAA,EAAA,OAIAO,IAAAC,IAAA,SAAAN,GACA,WAAAA,EAAAxC,QAAA5E,GACAwH,EAEAJ,KAIAxC,QAAA4C,GAAA,GACAC,EAAA1B,KAAAyB,GAIA7B,EAAAqB,aAAA,QAAAS,EAAAJ,KAAA,QAGA1B,EAAAqB,aAAA,QAAAQ,MAKAG,KAAA,WACA,OAAAxI,KAAAoI,IAAA,oBAGAK,KAAA,WACA,OAAAzI,KAAAoI,IAAA,mBAGAvC,SAAA,WACA,IAAAW,EAAAxG,KAAA,GAEA,OAAAwG,EAIAL,EAAAK,EAAAX,UAHA,MAMA6C,WAAA,WACA,IAAAlC,EAAAxG,KAAA,GAEA,OAAAwG,EAIAL,EAAAK,EAAAkC,YAHA,MAMAC,OAAA,SAAAC,GACA,OAAA5I,KAAAsG,QAAA,SAAAE,GACAoC,EAAAtC,QAAA,SAAAuC,GACArC,EAAAsC,YAAAD,QAKAE,OAAA,WACA,OAAA/I,KAAAsG,QAAA,SAAAE,GACA,GAAAA,EAAAuC,OACAvC,EAAAuC,aACS,CACT,IAAAC,EAAAxC,EAAAyC,cACAD,KAAAE,YAAA1C,OAKA2C,UAAA,SAAAC,GACA,IAAA5C,EAAAxG,KAAA,GACA6I,EAAAO,EAAA,GACA,OAAA5C,EAAA6C,SAAAR,IAGAS,YAAA,WACA,IAAA9C,EAAAxG,KAAA,GACA,OAAAwG,EAAA+C,yBAGAC,YAAA,WACA,IAAAhD,EAAAxG,KAAA,GACA,OAAAwG,EAAAiD,UAGAC,KAAA,SAAA3E,GACA,IAAAyB,EAAAxG,KAAA,GACA,OAAAmG,EAAAK,EAAAR,iBAAAjB,KAGA4E,KAAA,SAAAhC,GACA,GAAAA,EAQA,OAAA3H,KAAAsG,QAAA,SAAAE,GACAA,EAAAZ,UAAA+B,IAPA,IAAAnB,EAAAxG,KAAA,GACA,OAAAwG,EAAAZ,UAAAL,QAAA,oBACA,YAUAG,KAAA,SAAAkE,GACA,IAAApD,EAAAxG,KAAA,GAEA,aAAA4J,EACApD,EAAAZ,WAEAY,EAAAZ,UAAAgE,EACA5J,OAIA2H,IAAA,WACA,IAAAnB,EAAAxG,KAAA,GACA,OAAAwG,EAAAoD,MAAApE,QAGAqE,MAAA,WACA,OAAA7J,KAAAsG,QAAA,SAAAE,GACAA,EAAAqD,WAIAb,OAAA,WACA,IAAAxC,EAAAxG,KAAA,GACA,OAAAmG,EAAAK,EAAAyC,gBAGAa,YAAA,SAAA/E,EAAAgF,GACA,IAAAC,EAAA3H,SAAA2D,iBAAAjB,GACAkB,EAAA+D,EAAA/D,OAEA,IAAAA,EAEA,YAGA,IAAAO,EAAAuD,GAAA/J,KAAA,GAEA,YAAAwG,EAAAiD,SACA,YAGA,IAAAT,EAAAxC,EAAAyC,cACA/C,OAAA,EAEA,IAAAA,EAAA,EAAiBA,EAAAD,EAAYC,IAC7B,GAAA8C,IAAAgB,EAAA9D,GAEA,OAAAC,EAAA6C,GAKA,OAAAhJ,KAAA8J,YAAA/E,EAAAiE,IAGAiB,MAAA,SAAAC,GACA,WAAAA,EAAA9E,SACApF,KAAA,KAAAkK,EAEAlK,KAAA,KAAAkK,EAAA,IAIAC,aAAA,SAAApF,GACA,IAAAqF,EAAAjE,EAAApB,GACAsF,EAAAD,EAAA,GAEA,OAAAC,EAIArK,KAAAsG,QAAA,SAAAE,GACA,IAAAwC,EAAAqB,EAAAC,WACAtB,EAAAmB,aAAA3D,EAAA6D,KALArK,MASAuK,YAAA,SAAAxF,GACA,IAAAqF,EAAAjE,EAAApB,GACAsF,EAAAD,EAAA,GAEA,OAAAC,EAIArK,KAAAsG,QAAA,SAAAE,GACA,IAAAwC,EAAAqB,EAAAC,WAEAtB,EAAAwB,YAAAH,EAEArB,EAAAF,YAAAtC,GAGAwC,EAAAmB,aAAA3D,EAAA6D,EAAAI,eAXAzK,OAsBAmG,EAAAuE,OAAA,WACAxF,EAAAoB,QAAA,SAAA2B,GACA,IAAAzB,EAAAyB,EAAAzB,KACApC,EAAA6D,EAAA7D,KACAmC,EAAA0B,EAAA1B,GAEAC,EAAAiB,oBAAArD,EAAAmC,MAQA,IAAAoE,EAAA,CAEAC,MAAA,2LACAC,UAAA,uEACAC,OAAA,sGAWAC,SAAA,EAEAjH,MAAA,eAEAM,KAAA,QAEA4G,QAAA,EACAC,IAAA,iBACAtH,IAAA,wFACO,CACPsH,IAAA,iBACAtH,IAAA,oFACO,CACPsH,IAAA,WACAtH,IAAA,oFAEK,CAELG,MAAA,eAEAM,KAAA,QAEA4G,QAAA,EACArH,IAAA,uFACAsH,IAAA,wBACO,CACPtH,IAAA,qFACAsH,IAAA,kBACO,CACPtH,IAAA,oFACAsH,IAAA,oBAEK,CAELnH,MAAA,QAEAM,KAAA,QAEA4G,QAAA,yPAAA5D,MAAA,QAGA8D,OAAA,IAEAC,OAAA,EAEAC,UAAA,SAAAzB,EAAA0B,GAGA,UAIAC,aAAA,SAAA3H,GAEA,UAIA4H,kBAAA,EAEAC,gBAAA,EAGAC,gBAAA,SAAAT,GAEA,OAAAA,GAQAU,aAAA,EAEAC,gBAAA,SAAA5J,KAGA6J,iBAAA,QAIAC,qBAAA,EAIAC,eAAA,GAEAC,gBAAA,GAGAC,iBAAA,GAGAC,iBAAA,EAEAC,iBAAA,IAEAC,eAAA,CASAC,OAAA,SAAAC,EAAAC,EAAAC,KAOA7K,QAAA,SAAA2K,EAAAC,EAAAvG,KAEAyG,KAAA,SAAAH,EAAAC,EAAAvG,KAEA0G,MAAA,SAAAJ,EAAAC,KAEAI,QAAA,SAAAL,EAAAC,MAIAK,OAAA,GAOAC,EAAA,CACAC,IAAAC,UAAAC,UAEAC,SAAA,WAEA,MADA,UACAC,KAAAjN,KAAA6M,MAGAK,KAAA,WACA,wBAAA/K,SAIA,SAAAgL,EAAAC,EAAA7G,GACA,IAAA1F,OAAA,EAGA,IAAAA,KAAAuM,EACA,GAAAA,EAAAC,eAAAxM,KAGA,IAFA0F,EAAApG,KAAAiN,EAAAvM,EAAAuM,EAAAvM,IAGA,MAOA,SAAAyM,EAAAC,EAAAhH,GACA,IAAAL,OAAA,EACA+B,OAAA,EAEAhC,EAAAsH,EAAAtH,QAAA,EAEA,IAAAC,EAAA,EAAeA,EAAAD,IACfgC,EAAAsF,EAAArH,IAGA,IAFAK,EAAApG,KAAAoN,EAAAtF,EAAA/B,IAF2BA,MAW3B,SAAAsH,EAAAC,GACA,OAAAA,EAAAC,KAAAC,SAAAC,WAAAC,MAAA,GAIA,SAAAC,EAAApI,GACA,aAAAA,EACA,GAGAA,EAAAH,QAAA,cAAoCA,QAAA,cAAuBA,QAAA,gBAAyBA,QAAA,yBAKpF,SAAAwI,EAAAxH,GACA,0BAAAA,EAQA,SAAAyH,EAAA1B,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,qFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAIAD,EAAA5H,UAAA,CACAC,YAAA2H,EAEA7K,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OACA4B,EAAA5B,EAAA6B,UAAAC,mBAEAF,GAEA5B,EAAA6B,UAAAE,mBAIA/B,EAAAgC,IAAAC,GAAA,QAEAL,IAEA5B,EAAA6B,UAAAK,gBACAlC,EAAA6B,UAAAM,qBAIAC,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAgC,IAAAK,kBAAA,SACA3O,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAQA,IAAAyG,EAAA,SAAAtC,EAAAuC,GACA,IAAAC,EAAAxC,EAAA3B,OAAAmE,UAAA,GACA/I,EAAA8I,EAWA,OAVAC,EAAAxI,QAAA,SAAA2B,GACA,IAAA8G,EAAA9G,EAAA8G,IACApH,EAAAM,EAAAN,IAEAoH,EAAA9B,KAAAlH,KACAA,IAAAR,QAAAwJ,EAAA,WACA,OAAApH,OAIA5B,GAOAiJ,EAAA,aAGA,SAAAC,EAAAlM,EAAAmM,GACA,IAAArP,EAAAG,KAGAsM,EAAAvJ,EAAAuJ,OACAtM,KAAA+C,OACA/C,KAAAkP,MAEA,IAAAC,EAAAhJ,EAAA,oCAEAiJ,EAAAF,EAAAE,OACAC,OAAA,EAEAD,IAEAC,EAAAD,EAAA1J,OACA2J,EAAAT,EAAAtC,EAAA+C,GACAD,EAAA1J,KAAA2J,GACAD,EAAAtH,SAAA,gBACAqH,EAAAxG,OAAAyG,IAGA,IAAAE,EAAAJ,EAAAI,MAAA,GACAlL,EAAA8K,EAAA9K,MAAA,OAEAjB,EAAA+L,EAAA/L,SAAA6L,EAEAO,EAAApJ,EAAA,wBAAA/B,EAAA,mCACA+K,EAAAxG,OAAA4G,GACAD,EAAAhJ,QAAA,SAAA2B,GACA,IAAAiC,EAAAjC,EAAAiC,MAEAsF,EAAAtF,EAAAxE,OACA8J,EAAAZ,EAAAtC,EAAAkD,GACAtF,EAAAxE,KAAA8J,GACA,IAAA5F,EAAA3B,EAAA2B,MACA6F,EAAAtJ,EAAA,8BAEA+D,IACAuF,EAAA9G,OAAAuB,GACAqF,EAAA5G,OAAA8G,GACAA,EAAAvI,GAAA,iBAAAvG,GACAwC,EAAAyG,GAEA/J,EAAA6P,cAAAC,WAAA,WACA9P,EAAA4I,QACW,QAKX0G,EAAAjI,GAAA,sBAAAvG,GACAd,EAAA6P,cAAAC,WAAA,WACA9P,EAAA4I,QACO,KAGPzI,KAAAmP,aAEAnP,KAAA4P,WAAA,EACA5P,KAAA6P,OAAA,EA6DA,SAAAC,EAAAxD,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,+DACAnG,KAAAoE,KAAA,WAEApE,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,mCACA/B,KAAA,OAEAkL,KAAA,EACApF,MAAA/D,EAAA,eACAyD,MAAA,QACO,CACPM,MAAA/D,EAAA,eACAyD,MAAA,QACO,CACPM,MAAA/D,EAAA,eACAyD,MAAA,QACO,CACPM,MAAA/D,EAAA,eACAyD,MAAA,QACO,CACPM,MAAA/D,EAAA,eACAyD,MAAA,QACO,CACPM,MAAA/D,EAAA,uBACAyD,MAAA,QAEAzG,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MA0CA,SAAAsG,EAAA5D,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,mEACAnG,KAAAoE,KAAA,WAEApE,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,uBACA/B,KAAA,OAEAkL,KAAA,EACApF,MAAA/D,EAAA,oDACAyD,MAAA,KACO,CACPM,MAAA/D,EAAA,gDACAyD,MAAA,KACO,CACPM,MAAA/D,EAAA,uBACAyD,MAAA,KACO,CACPM,MAAA/D,EAAA,gDACAyD,MAAA,KACO,CACPM,MAAA/D,EAAA,oDACAyD,MAAA,KACO,CACPM,MAAA/D,EAAA,sDACAyD,MAAA,MAEAzG,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MAmBA,SAAAuG,EAAA7D,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,6DACAnG,KAAAoE,KAAA,WAEApE,KAAAiO,SAAA,EAEA,IAAAtD,EAAA2B,EAAA3B,OACAE,EAAAF,EAAAE,WAAA,GAEA7K,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,uBACA/B,KAAA,OAEAkL,KAAAzE,EAAAtC,IAAA,SAAA6H,GACA,OACAlG,MAAA/D,EAAA,6BAAAiK,EAAA,MAA+DA,EAAA,WAC/DxG,MAAAwG,KAGAjN,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MArNAqF,EAAA7I,UAAA,CACAC,YAAA4I,EAEAzG,KAAA,WACAxI,KAAA0P,eAEAW,aAAArQ,KAAA0P,eAGA,IAAA3M,EAAA/C,KAAA+C,KACAuN,EAAAvN,EAAAmH,MACAiF,EAAAnP,KAAAmP,WAEA,IAAAnP,KAAA6P,MAAA,CAIA,GAAA7P,KAAA4P,UAEAT,EAAA3G,WACO,CAEP,IAAA+H,EAAAD,EAAAhH,cAAAkH,QAAA,EACAR,EAAAhQ,KAAAkP,IAAAc,OAAA,IAEAb,EAAA/G,IAAA,aAAAmI,EAAA,MAAAnI,IAAA,QAAA4H,EAAA,MAEAM,EAAA3H,OAAAwG,GACAnP,KAAA4P,WAAA,EAIA5P,KAAA6P,OAAA,IAGApH,KAAA,WACAzI,KAAAyQ,eAEAJ,aAAArQ,KAAAyQ,eAGA,IAAAtB,EAAAnP,KAAAmP,WAEAnP,KAAA6P,QAKAV,EAAA1G,OACAzI,KAAA6P,OAAA,KAiDAC,EAAA1J,UAAA,CACAC,YAAAyJ,EAEAG,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAoE,EAAApE,EAAA6B,UAAAwC,4BAEArE,EAAAsE,UAAA3G,MAAAyG,IAMApE,EAAAgC,IAAAC,GAAA,cAAA3E,IAGA8E,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEA2G,EAAAvE,EAAAgC,IAAAwC,kBAAA,eADA,MAGA7D,KAAA4D,IACA7Q,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAkDA+H,EAAA9J,UAAA,CACAC,YAAA6J,EAEAD,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,WAAA3E,KAuCAuG,EAAA/J,UAAA,CACAC,YAAA8J,EACAF,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,WAAA3E,KAOA,IAAAmH,EAAA,aAGAC,EAAA,GAEA,SAAAC,EAAAlO,EAAAmM,GACAlP,KAAA+C,OACA/C,KAAAkP,MAmLA,SAAAxP,EAAA4M,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,6DACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAsJA,SAAAiD,EAAA5E,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,uFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA6CA,SAAAkD,EAAA7E,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,qFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAmBA,SAAAmD,EAAA9E,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,8FACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA6CA,SAAAoD,EAAA/E,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,0FACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA6CA,SAAAqD,EAAAhF,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,qFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAmBA,SAAAsD,EAAAjF,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,8DACAnG,KAAAoE,KAAA,WAEApE,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,mCACA/B,KAAA,OAEAkL,KAAA,EACApF,MAAA/D,EAAA,gFACAyD,MAAA,qBACO,CACPM,MAAA/D,EAAA,wEACAyD,MAAA,wBAEAzG,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MAgEA,SAAA4H,EAAAlF,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,uEACAnG,KAAAoE,KAAA,WAEApE,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,mCACA/B,KAAA,OAEAkL,KAAA,EACApF,MAAA/D,EAAA,qEACAyD,MAAA,eACO,CACPM,MAAA/D,EAAA,uEACAyD,MAAA,iBACO,CACPM,MAAA/D,EAAA,sEACAyD,MAAA,iBAEAzG,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MAmBA,SAAA6H,EAAAnF,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,gEACAnG,KAAAoE,KAAA,WAEA,IAAAuG,EAAA2B,EAAA3B,OACAG,EAAAH,EAAAG,QAAA,GAEA9K,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,mCACA/B,KAAA,eAEAkL,KAAAxE,EAAAvC,IAAA,SAAAmJ,GACA,OACAxH,MAAA/D,EAAA,mBAAAuL,EAAA,oCACA9H,MAAA8H,KAGAvO,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MAmBA,SAAA+H,EAAArF,GACA,IAAAzM,EAAAG,KAEAA,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,oEACAnG,KAAAoE,KAAA,WAEA,IAAAuG,EAAA2B,EAAA3B,OACAG,EAAAH,EAAAG,QAAA,GAEA9K,KAAAiO,SAAA,EAEAjO,KAAA+P,SAAA,IAAAd,EAAAjP,KAAA,CACAgQ,MAAA,IACAZ,OAAAjJ,EAAA,6BACA/B,KAAA,eAEAkL,KAAAxE,EAAAvC,IAAA,SAAAmJ,GACA,OACAxH,MAAA/D,EAAA,mBAAAuL,EAAA,wCACA9H,MAAA8H,KAGAvO,QAAA,SAAAyG,GAEA/J,EAAAoQ,SAAArG,MAmBA,SAAAgI,EAAAtF,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,4FACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAgEA,SAAA4D,EAAAvF,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,yFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAiIA,SAAA6D,EAAAxF,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,sFACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA+FA,SAAA8D,EAAAzF,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,+DACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA2VA,SAAA+D,EAAA1F,GACAtM,KAAAsM,SACAtM,KAAAkK,MAAA/D,EAAA,6DACAnG,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EA+DA,SAAAgE,EAAA3F,GACAtM,KAAAsM,SACA,IAAA4F,EAAA1E,EAAA,WACAxN,KAAAkK,MAAA/D,EAAA,6BAAA+L,EAAA,0CACA5F,EAAA4F,YACAlS,KAAAoE,KAAA,QAEApE,KAAAiO,SAAA,EAt8CAgD,EAAA7K,UAAA,CACAC,YAAA4K,EAEAzI,KAAA,WACA,IAAA3I,EAAAG,KAEA+C,EAAA/C,KAAA+C,KAEA,KAAAiO,EAAAvL,QAAA1C,IAAA,IAKA,IAAAuJ,EAAAvJ,EAAAuJ,OACA6F,EAAAhM,EAAA,QACAiM,EAAA9F,EAAA8F,mBACAlD,EAAAlP,KAAAkP,IAEAC,EAAAhJ,EAAA,2CACA6J,EAAAd,EAAAc,OAAA,IAEAb,EAAA/G,IAAA,QAAA4H,EAAA,MAAA5H,IAAA,iBAAA4H,GAAA,QAEA,IAAAqC,EAAAlM,EAAA,kDACAgJ,EAAAxG,OAAA0J,GACAA,EAAAnL,GAAA,mBACArH,EAAA4I,SAGA,IAAA6J,EAAAnM,EAAA,yCACAoM,EAAApM,EAAA,6CACAgJ,EAAAxG,OAAA2J,GAAA3J,OAAA4J,GAEA,IAAA/B,EAAAtB,EAAAsB,OAEAA,GACA+B,EAAAnK,IAAA,SAAAoI,EAAA,MAAApI,IAAA,qBAIA,IAAAoK,EAAAtD,EAAAsD,MAAA,GACAC,EAAA,GACAC,EAAA,GACAF,EAAAlM,QAAA,SAAAqM,EAAAC,GACA,GAAAD,EAAA,CAIA,IAAA7O,EAAA6O,EAAA7O,OAAA,GACA+O,EAAAF,EAAAE,KAAA,GAEA/O,EAAA8K,EAAAtC,EAAAxI,GACA+O,EAAAjE,EAAAtC,EAAAuG,GAEA,IAAAzD,EAAAjJ,EAAA,wBAAArC,EAAA,SACAwO,EAAA3J,OAAAyG,GACA,IAAA0D,EAAA3M,EAAA0M,GACAN,EAAA5J,OAAAmK,GAEA1D,EAAA2D,OAAAH,EACAH,EAAA7L,KAAAwI,GACAsD,EAAA9L,KAAAkM,GAEA,IAAAF,GACAxD,EAAAnB,SAAA,EACAmB,EAAAtH,SAAA,eAEAgL,EAAArK,OAIA2G,EAAAlI,GAAA,iBAAAvG,GACAyO,EAAAnB,UAKAwE,EAAAnM,QAAA,SAAA8I,GACAA,EAAAnB,SAAA,EACAmB,EAAAjH,YAAA,gBAEAuK,EAAApM,QAAA,SAAAwM,GACAA,EAAArK,SAGA2G,EAAAnB,SAAA,EACAmB,EAAAtH,SAAA,cACAgL,EAAAtK,aAIA2G,EAAAjI,GAAA,iBAAAvG,GAEAA,EAAAqS,oBAEAb,EAAAjL,GAAA,iBAAAvG,GACAd,EAAA4I,SAGA2J,EAAAzJ,OAAAwG,GAEAqD,EAAAlM,QAAA,SAAAqM,EAAA5L,GACA,GAAA4L,EAAA,CAIA,IAAAM,EAAAN,EAAAM,QAAA,GACAA,EAAA3M,QAAA,SAAA4M,GACA,IAAAnO,EAAAmO,EAAAnO,SACAX,EAAA8O,EAAA9O,KACAmC,EAAA2M,EAAA3M,IAAAwK,EACA+B,EAAAJ,EAAA3L,GACA+L,EAAApJ,KAAA3E,GAAAmC,GAAA9C,EAAA,SAAAzD,GACAA,EAAAqS,kBACA,IAAAG,EAAA5M,EAAA5F,GAEAwS,GACAtT,EAAA4I,cAMA,IAAA2K,EAAAjE,EAAAzF,KAAA,6BAEA0J,EAAAnN,QACAmN,EAAAtM,IAAA,GAAA+C,QAIA7J,KAAAmP,aAEAnP,KAAAqT,mBAGArC,EAAApK,KAAA7D,KAGA0F,KAAA,WACA,IAAA1F,EAAA/C,KAAA+C,KACAoM,EAAAnP,KAAAmP,WAEAA,GACAA,EAAApG,SAIAiI,IAAAhJ,OAAA,SAAAC,GACA,OAAAA,IAAAlF,KAQAsQ,iBAAA,WACArC,EAAA/K,QAIA+K,EAAA1K,QAAA,SAAAvD,GACA,IAAAuQ,EAAAvQ,EAAAuQ,OAAA,GAEAA,EAAA7K,MACA6K,EAAA7K,WAmBA/I,EAAA0G,UAAA,CACAC,YAAA3G,EAEAyD,QAAA,SAAAxC,GACA,IAAA2L,EAAAtM,KAAAsM,OACAiH,OAAA,EAEA,GAAAvT,KAAAiO,QAAA,CAIA,KAFAsF,EAAAjH,EAAA6B,UAAAwC,6BAGA,OAIArE,EAAA6B,UAAAqF,kBAAAD,GACAjH,EAAA6B,UAAAM,mBAEAzO,KAAAyT,aAAAF,EAAA5J,OAAA4J,EAAA7L,KAAA,cAGA4E,EAAA6B,UAAAC,mBAEApO,KAAAyT,aAAA,OAGAzT,KAAAyT,aAAAnH,EAAA6B,UAAAuF,mBAAA,KAKAD,aAAA,SAAA9J,EAAA0B,GACA,IAAAxL,EAAAG,KAGA2T,EAAAnG,EAAA,cACAoG,EAAApG,EAAA,cACAqG,EAAArG,EAAA,UACAsG,EAAAtG,EAAA,WAEAuG,EAAA/T,KAAAiO,QAAA,sBAEAqF,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IAEAwC,KAAA,EAEA1O,MAAA,eAEA+O,IAAA,iDAAAe,EAAA,sCAAAjK,EAAA,2FAAAgK,EAAA,sCAAAtI,EAAA,kJAAAwI,EAAA,sFAAAC,EAAA,uCAAAC,EAAA,0GAEAd,OAAA,CACA,CACAlO,SAAA,IAAA8O,EACAzP,KAAA,QACAmC,GAAA,WAEA,IAAAyN,EAAA7N,EAAA,IAAAwN,GACAM,EAAA9N,EAAA,IAAAyN,GACAvI,EAAA2I,EAAArM,MACAgC,EAAAsK,EAAAtM,MAKA,OAHA9H,EAAAqU,YAAAvK,EAAA0B,IAGA,IAGA,CACAtG,SAAA,IAAA+O,EACA1P,KAAA,QACAmC,GAAA,WAKA,OAHA1G,EAAAsU,YAGA,SAQAb,EAAA9K,OAEAxI,KAAAsT,SAGAa,SAAA,WACA,GAAAnU,KAAAiO,QAAA,CAIA,IAAA3B,EAAAtM,KAAAsM,OACA8H,EAAA9H,EAAA6B,UAAAwC,4BAEA,GAAAyD,EAAA,CAIA,IAAAC,EAAA/H,EAAA6B,UAAAuF,mBACApH,EAAAgC,IAAAC,GAAA,sBAAA8F,EAAA,cAGAH,YAAA,SAAAvK,EAAA0B,GACA,IAAAiB,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OACAS,EAAAT,EAAAS,UACAkJ,GAAA,EAEAlJ,GAAA,oBAAAA,IACAkJ,EAAAlJ,EAAAzB,EAAA0B,KAGA,IAAAiJ,EACAhI,EAAAgC,IAAAC,GAAA,yBAAAlD,EAAA,qBAAA1B,EAAA,QAEA4K,MAAAD,IAIA5F,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MACAkK,EAAA9H,EAAA6B,UAAAwC,4BAEAyD,IAIA,MAAAA,EAAA5K,eACAxJ,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,kBAkBA+I,EAAA9K,UAAA,CACAC,YAAA6K,EAEA/N,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OACA4B,EAAA5B,EAAA6B,UAAAC,mBAEAF,GAEA5B,EAAA6B,UAAAE,mBAIA/B,EAAAgC,IAAAC,GAAA,UAEAL,IAEA5B,EAAA6B,UAAAK,gBACAlC,EAAA6B,UAAAM,qBAIAC,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAgC,IAAAK,kBAAA,WACA3O,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAkBAgJ,EAAA/K,UAAA,CACAC,YAAA8K,EAEAhO,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OAEAA,EAAAgC,IAAAC,GAAA,UAiBA6C,EAAAhL,UAAA,CACAC,YAAA+K,EAEAjO,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OACA4B,EAAA5B,EAAA6B,UAAAC,mBAEAF,GAEA5B,EAAA6B,UAAAE,mBAIA/B,EAAAgC,IAAAC,GAAA,iBAEAL,IAEA5B,EAAA6B,UAAAK,gBACAlC,EAAA6B,UAAAM,qBAIAC,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAgC,IAAAK,kBAAA,kBACA3O,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAkBAkJ,EAAAjL,UAAA,CACAC,YAAAgL,EAEAlO,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OACA4B,EAAA5B,EAAA6B,UAAAC,mBAEAF,GAEA5B,EAAA6B,UAAAE,mBAIA/B,EAAAgC,IAAAC,GAAA,aAEAL,IAEA5B,EAAA6B,UAAAK,gBACAlC,EAAA6B,UAAAM,qBAIAC,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAgC,IAAAK,kBAAA,cACA3O,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAkBAmJ,EAAAlL,UAAA,CACAC,YAAAiL,EAEAnO,QAAA,SAAAxC,GAEA,IAAA2L,EAAAtM,KAAAsM,OAEAA,EAAAgC,IAAAC,GAAA,UAqCAgD,EAAAnL,UAAA,CACAC,YAAAkL,EAEAtB,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UAGA,GAFAtE,EAAA6B,UAAAM,oBAEAnC,EAAAgC,IAAAK,kBAAA/E,GAAA,CAIA0C,EAAAgC,IAAAC,GAAA3E,GAEA,IAAA8G,EAAApE,EAAA6B,UAAAwC,4BAMA,GAJA,OAAAD,EAAAlH,gBACAkH,IAAA1H,WAGA,eAAAiE,KAAAyD,EAAAlH,iBAIAkH,EAAAzG,MAAA2G,GAAA,CAKA,IAAA4D,EAAA9D,EAAA1H,SAEAwL,EAAAvK,MAAA2G,KAKAF,EAAAnG,YAAAiK,GACAA,EAAAzL,aAGA2F,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAgC,IAAAK,kBAAA,wBAAArC,EAAAgC,IAAAK,kBAAA,sBACA3O,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAyCAqJ,EAAApL,UAAA,CACAC,YAAAmL,EAEAvB,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA3E,KAuCA6H,EAAArL,UAAA,CACAC,YAAAoL,EAEAxB,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,YAAA3E,KAuCA+H,EAAAvL,UAAA,CACAC,YAAAsL,EAEA1B,SAAA,SAAArG,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,YAAA3E,KAiBAgI,EAAAxL,UAAA,CACAC,YAAAuL,EACAzO,QAAA,SAAAxC,GACA,IAAA2L,EAAAtM,KAAAsM,OACAoE,EAAApE,EAAA6B,UAAAwC,4BACAlH,EAAAiH,EAAAlH,cAEA,GAAAoD,EAAAM,OAAA,CAgBA,SAAAzD,EAMA,OAHAtD,EAAA,eADAuK,EAAA/G,OACA,iBACAY,YAAAmG,QACAA,EAAA3H,SAIA,eAAAU,IAGAtD,EAAA,MADAuK,EAAA/G,OACA,QACAY,YAAAmG,GACAA,EAAA3H,cA7BA,eAAAU,EAEA6C,EAAAgC,IAAAC,GAAA,qBAGAjC,EAAAgC,IAAAC,GAAA,+BA2BAG,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEA2G,EAAAvE,EAAAgC,IAAAwC,kBAAA,eADA,gBAGA7D,KAAA4D,IACA7Q,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBAkBA0J,EAAAzL,UAAA,CACAC,YAAAwL,EACA1O,QAAA,SAAAxC,GACA,IAAA2L,EAAAtM,KAAAsM,OACAmI,EAAAnI,EAAA6B,UAAAuG,wBACAC,EAAArI,EAAA6B,UAAAyG,sBACA1G,EAAA5B,EAAA6B,UAAAC,mBACAiG,EAAA/H,EAAA6B,UAAAuF,mBACAmB,OAAA,EAEA,GAAAJ,EAAAxK,MAAA0K,GAMA,OAAAzG,OAUAlO,KAAAiO,QAEAjO,KAAAyT,aAAAgB,EAAA/O,QAGA1F,KAAAyT,iBAbAoB,EAAA1O,EAAA,SAAAkO,EAAA,WACA/H,EAAAgC,IAAAC,GAAA,aAAAsG,GACAvI,EAAA6B,UAAAqF,kBAAAqB,GAAA,QACAvI,EAAA6B,UAAAM,oBATAnC,EAAA6B,UAAAM,oBAsBAgF,aAAA,SAAA7J,GACA,IAAA/J,EAAAG,KAIAoE,GADAwF,KAAA,IACA,aACAkL,EAAAtH,EAAA,SACAuH,EAAAvH,EAAA,OACA8F,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IAEAwC,KAAA,EAEA1O,MAAA,2BAEA+O,IAAA,gDAAAiC,EAAA,4BAAkGlL,EAAA,oHAAAmL,EAAA,mGAElG9B,OAAA,CACA,CACAlO,SAAA,IAAAgQ,EACA3Q,KAAA,QACAmC,GAAA,WACA,IAAA0N,EAAA9N,EAAA,IAAA2O,GACAnL,EAAAsK,EAAAtM,OAAAsM,EAAAvO,OAYA,OAXAiE,EAAAmE,EAAAnE,GAEA,QAAAvF,EAEAvE,EAAAmV,YAAArL,GAGA9J,EAAAoV,YAAAtL,IAIA,SASA2J,EAAA9K,OAEAxI,KAAAsT,SAGA0B,YAAA,SAAApL,GACA,IAAA0C,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,2BAAA3E,EAAA,6BAGAqL,YAAA,SAAArL,GACA,IAAA0C,EAAAtM,KAAAsM,OACA8H,EAAA9H,EAAA6B,UAAAwC,4BAEAyD,IAIAA,EAAA1O,KAAAkE,GACA0C,EAAA6B,UAAAM,qBAGAC,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MACAkK,EAAA9H,EAAA6B,UAAAwC,4BAEA,GAAAyD,EAAA,CAIA,IAAAc,EAAAd,EAAApL,SAEA,SAAAoL,EAAA5K,eAAA,QAAA0L,EAAA1L,eACAxJ,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,kBAkBA2J,EAAA1L,UAAA,CACAC,YAAAyL,EACA3O,QAAA,WACAnD,KAAAyT,gBAEAA,aAAA,WACA,IAAA5T,EAAAG,KAEAsM,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OAEAI,EAAAJ,EAAAI,UAAA,GAEAoK,EAAA,GACApK,EAAAzE,QAAA,SAAA8O,GACA,IAAAC,EAAAD,EAAAhR,KACA4G,EAAAoK,EAAApK,SAAA,GAEAsK,EAAA,GAEA,UAAAD,GACArK,EAAA1E,QAAA,SAAA2B,GACAA,IACAqN,GAAA,0BAAArN,EAAA,aAMA,UAAAoN,GACArK,EAAA1E,QAAA,SAAA2B,GACA,IAAAtE,EAAAsE,EAAAtE,IACAsH,EAAAhD,EAAAgD,IAEAtH,IAEA2R,GAAA,oCAAA3R,EAAA,UAAAsH,EAAA,6BAKAkK,EAAAvO,KAAA,CACA9C,MAAAsR,EAAAtR,MACA+O,IAAA,uCAAAyC,EAAA,SACArC,OAAA,EACAlO,SAAA,gBACAX,KAAA,QACAmC,GAAA,SAAA5F,GACA,IAAA2G,EAAA3G,EAAA2G,OACAiO,EAAApP,EAAAmB,GACAmC,EAAA8L,EAAA/L,cACAgM,OAAA,EAaA,OATAA,EAFA,QAAA/L,EAEA8L,EAAAvM,SAAAtD,OAGA,SAAA6P,EAAA7P,OAAA,UAGA7F,EAAA4V,QAAAD,IAGA,SAKA,IAAAlC,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IACAQ,OAAA,IAEAgC,KAAA2C,IAGA7B,EAAA9K,OAEAxI,KAAAsT,SAGAmC,QAAA,SAAAC,GACA,IAAApJ,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,aAAAmH,KAiBA3D,EAAA3L,UAAA,CACAC,YAAA0L,EACA5O,QAAA,WACAnD,KAAAiO,QAEAjO,KAAA2V,mBAGA3V,KAAA4V,sBAIAA,mBAAA,WACA,IAAA/V,EAAAG,KAGA6V,EAAArI,EAAA,OACAsI,EAAAtI,EAAA,OACAuI,EAAAvI,EAAA,OACA8F,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IAEAwC,KAAA,EAEA1O,MAAA,2BAEA+O,IAAA,gKAAyFiD,EAAA,+IAA2KC,EAAA,4PAAsKF,EAAA,oGAE1a5C,OAAA,EAEAlO,SAAA,IAAA8Q,EACAzR,KAAA,QACAmC,GAAA,WACA,IAAAyP,EAAApV,SAAAuF,EAAA,IAAA2P,GAAAnO,OACAsO,EAAArV,SAAAuF,EAAA,IAAA4P,GAAApO,OAQA,OANAqO,GAAAC,GAAAD,EAAA,GAAAC,EAAA,GAEApW,EAAA4V,QAAAO,EAAAC,IAIA,SASA3C,EAAA9K,OAEAxI,KAAAsT,SAGAmC,QAAA,SAAAO,EAAAC,GAEA,IAAAC,OAAA,EACAC,OAAA,EACAzQ,EAAA,kEAEA,IAAAwQ,EAAA,EAAiBA,EAAAF,EAAYE,IAAA,CAG7B,GAFAxQ,GAAA,OAEA,IAAAwQ,EACA,IAAAC,EAAA,EAAqBA,EAAAF,EAAYE,IACjCzQ,GAAA,uBAGA,IAAAyQ,EAAA,EAAqBA,EAAAF,EAAYE,IACjCzQ,GAAA,kBAIAA,GAAA,QAGAA,GAAA,sBAEA,IAAA4G,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,aAAA7I,GAEA4G,EAAAgC,IAAAC,GAAA,2BACAjC,EAAAgC,IAAAC,GAAA,gCAGAoH,iBAAA,WACA,IAAAS,EAAApW,KAGAqW,EAAA7I,EAAA,WACA8I,EAAA9I,EAAA,WACA+I,EAAA/I,EAAA,WACAgJ,EAAAhJ,EAAA,WACAiJ,EAAAjJ,EAAA,aAEA8F,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IAEAwC,KAAA,EAEA1O,MAAA,2BAEA+O,IAAA,4LAA6JwD,EAAA,uFAAAE,EAAA,2FAAAD,EAAA,uFAAAE,EAAA,uLAAAC,EAAA,mHAE7JxD,OAAA,EAEAlO,SAAA,IAAAsR,EACAjS,KAAA,QACAmC,GAAA,WAIA,OAHA6P,EAAAM,WAGA,IAEW,CAEX3R,SAAA,IAAAuR,EACAlS,KAAA,QACAmC,GAAA,WAIA,OAHA6P,EAAAO,WAGA,IAEW,CAEX5R,SAAA,IAAAwR,EACAnS,KAAA,QACAmC,GAAA,WAIA,OAHA6P,EAAAQ,WAGA,IAEW,CAEX7R,SAAA,IAAAyR,EACApS,KAAA,QACAmC,GAAA,WAIA,OAHA6P,EAAAS,WAGA,IAEW,CAEX9R,SAAA,IAAA0R,EACArS,KAAA,QACAmC,GAAA,WAIA,OAHA6P,EAAAU,aAGA,SAMAxD,EAAA9K,QAGAuO,iBAAA,WACA,IAAAhR,EAAA,GACAuG,EAAAtM,KAAAsM,OACA8H,EAAA9H,EAAA6B,UAAAwC,4BAEA,GAAAyD,EAAA,CAIA,IAAA3K,EAAA2K,EAAA5K,cAEA,UAAAC,GAAA,OAAAA,EAAA,CAKA,IAAAuN,EAAA5C,EAAApL,SACAiO,EAAAD,EAAAnR,WACAqR,EAAAD,EAAAhR,OACAgR,EAAA3Q,QAAA,SAAA6Q,EAAApQ,GACA,GAAAoQ,IAAA/C,EAAA,GAOA,OALArO,EAAAoR,GAAA,CACApQ,QACAP,KAAA2Q,EACAlR,OAAAiR,IAEA,IAIA,IAAAE,EAAAJ,EAAAhO,SACAqO,EAAAD,EAAAvR,WACAyR,EAAAD,EAAApR,OAaA,OAZAoR,EAAA/Q,QAAA,SAAAiR,EAAAxQ,GACA,GAAAwQ,IAAAP,EAAA,GAOA,OALAjR,EAAAwR,GAAA,CACAxQ,QACAP,KAAA+Q,EACAtR,OAAAqR,IAEA,IAIAvR,KAGA2Q,QAAA,WAEA,IAAAc,EAAAxX,KAAA+W,mBAEA,GAAAS,EAAA,CAIA,IAAAC,EAAAD,EAAAD,GACAG,EAAAvR,EAAAsR,EAAAjR,MACAmR,EAAAH,EAAAL,GACAD,EAAAS,EAAA1R,OAEA2R,EAAAvV,SAAAY,cAAA,MACA4P,EAAA,GACA3M,OAAA,EAEA,IAAAA,EAAA,EAAiBA,EAAAgR,EAAchR,IAC/B2M,GAAA,kBAGA+E,EAAAhS,UAAAiN,EAEA1M,EAAAyR,GAAArN,YAAAmN,KAGAf,QAAA,WAEA,IAAAa,EAAAxX,KAAA+W,mBAEA,GAAAS,EAAA,CAIA,IAAAC,EAAAD,EAAAD,GACAI,EAAAH,EAAAL,GACAU,EAAAF,EAAA5Q,MACA2Q,EAAAvR,EAAAsR,EAAAjR,MACAsR,EAAAJ,EAAA1O,SACAqO,EAAAS,EAAAjS,WAEAwR,EAAA/Q,QAAA,SAAAiR,GACA,IAAAP,EAAA7Q,EAAAoR,GACAN,EAAAD,EAAAnR,WACAkS,EAAAd,EAAAnQ,IAAA+Q,GACAG,EAAAD,EAAAvO,cAAAyO,cAEAC,EAAA7V,SAAAY,cAAA+U,GACA7R,EAAA+R,GAAA3N,YAAAwN,OAIAnB,QAAA,WAEA,IAAAY,EAAAxX,KAAA+W,mBAEA,GAAAS,EAAA,CAIA,IAAAC,EAAAD,EAAAD,GACAG,EAAAvR,EAAAsR,EAAAjR,MACAkR,EAAA3O,WAGA8N,QAAA,WAEA,IAAAW,EAAAxX,KAAA+W,mBAEA,GAAAS,EAAA,CAIA,IAAAC,EAAAD,EAAAD,GACAI,EAAAH,EAAAL,GACAU,EAAAF,EAAA5Q,MACA2Q,EAAAvR,EAAAsR,EAAAjR,MACAsR,EAAAJ,EAAA1O,SACAqO,EAAAS,EAAAjS,WAEAwR,EAAA/Q,QAAA,SAAAiR,GACA,IAAAP,EAAA7Q,EAAAoR,GACAN,EAAAD,EAAAnR,WACAkS,EAAAd,EAAAnQ,IAAA+Q,GAEAE,EAAAhP,aAIA+N,UAAA,WACA,IAAAxK,EAAAtM,KAAAsM,OACA8H,EAAA9H,EAAA6B,UAAAwC,4BAEA,GAAAyD,EAAA,CAIA,IAAA+D,EAAA/D,EAAAtK,YAAA,SAEAqO,GAIAA,EAAApP,WAGA2F,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MACAkK,EAAA9H,EAAA6B,UAAAwC,4BAEA,GAAAyD,EAAA,CAIA,IAAA3K,EAAA2K,EAAA5K,cAEA,OAAAC,GAAA,OAAAA,GACAzJ,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,kBAkBA6J,EAAA5L,UAAA,CACAC,YAAA2L,EACA7O,QAAA,WACAnD,KAAAyT,gBAEAA,aAAA,WACA,IAAA5T,EAAAG,KAGAoY,EAAA5K,EAAA,YACAuH,EAAAvH,EAAA,OAEA8F,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IAEAwC,KAAA,EAEA1O,MAAA,2BAEA+O,IAAA,6CAAAuF,EAAA,uMAAArD,EAAA,oGAEA9B,OAAA,EACAlO,SAAA,IAAAgQ,EACA3Q,KAAA,QACAmC,GAAA,WACA,IAAA0N,EAAA9N,EAAA,IAAAiS,GACAzQ,EAAAsM,EAAAtM,MAAAnC,OASA,OANAmC,GAEA9H,EAAA4V,QAAA9N,IAIA,SASA2L,EAAA9K,OAEAxI,KAAAsT,SAGAmC,QAAA,SAAA9N,GACA,IAAA2E,EAAAtM,KAAAsM,OACAA,EAAAgC,IAAAC,GAAA,aAAA5G,EAAA,iBAmBAsK,EAAA7L,UAAA,CACAC,YAAA4L,EACA9O,QAAA,WACA,IAAAmJ,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OAEAA,EAAAgC,QAIA3M,KAAAiO,QACAjO,KAAA2V,mBAEA3V,KAAA4V,uBAGAD,iBAAA,WACA,IAAArJ,EAAAtM,KAAAsM,OAEA+L,EAAA7K,EAAA,YACA8K,EAAA9K,EAAA,YACA+K,EAAA/K,EAAA,aACAgL,EAAAhL,EAAA,WAEAiL,EAAA,EACA3U,MAAA,2BACA+O,IAAA,4TAA+PwF,EAAA,oEAAAC,EAAA,oEAAAC,EAAA,yJAAAC,EAAA,2GAC/PvF,OAAA,EACAlO,SAAA,IAAAsT,EACAjU,KAAA,QACAmC,GAAA,WACA,IAAAmS,EAAApM,EAAAqM,aAOA,OALAD,GACAA,EAAAtQ,IAAA,oBAIA,IAES,CACTrD,SAAA,IAAAuT,EACAlU,KAAA,QACAmC,GAAA,WACA,IAAAmS,EAAApM,EAAAqM,aAOA,OALAD,GACAA,EAAAtQ,IAAA,oBAIA,IAES,CACTrD,SAAA,IAAAwT,EACAnU,KAAA,QACAmC,GAAA,WACA,IAAAmS,EAAApM,EAAAqM,aAOA,OALAD,GACAA,EAAAtQ,IAAA,qBAIA,IAES,CACTrD,SAAA,IAAAyT,EACApU,KAAA,QACAmC,GAAA,WACA,IAAAmS,EAAApM,EAAAqM,aAOA,OALAD,GACAA,EAAA3P,UAIA,OAKAuK,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IACAwC,KAAAiG,IAEAnF,EAAA9K,OAEAxI,KAAAsT,SAEAsC,mBAAA,WACA,IAAAtJ,EAAAtM,KAAAsM,OACAsM,EAAAtM,EAAAsM,UACAjO,EAAA2B,EAAA3B,OAEAkO,EAAArL,EAAA,cACAsL,EAAAtL,EAAA,WACAuL,EAAAvL,EAAA,YACAwL,EAAAxL,EAAA,YAEAiL,EAAA,EACA3U,MAAA,2BACA+O,IAAA,oEAAAgG,EAAA,oMAA4PC,EAAA,sJAC5P7F,OAAA,EAEAlO,SAAA,IAAA8T,EACAzU,KAAA,QACAmC,GAAA,WACA,IAAA0S,EAAA9S,EAAA,IAAA2S,GACAI,EAAAD,EAAA,GAEA,IAAAC,EAIA,SAHAA,EAAAC,UAMS,CAETpU,SAAA,IAAA+T,EACA1U,KAAA,SACAmC,GAAA,WACA,IAAA0S,EAAA9S,EAAA,IAAA2S,GACAI,EAAAD,EAAA,GAEA,IAAAC,EAEA,SAIA,IAAAE,EAAAF,EAAA3M,MAOA,OALA6M,EAAAnT,QACA2S,YAAAQ,IAIA,MAIA,CACAtV,MAAA,2BACA+O,IAAA,yCAAAkG,EAAA,0KAAAC,EAAA,4FACA/F,OAAA,EACAlO,SAAA,IAAAiU,EACA5U,KAAA,QACAmC,GAAA,WACA,IAAA8S,EAAAlT,EAAA,IAAA4S,GACAhX,EAAAsX,EAAA1R,MAAAnC,OAOA,OALAzD,GACA6W,EAAAU,cAAAvX,IAIA,OAOAwX,EAAA,IAEA5O,EAAAkB,qBAAAlB,EAAA6O,iBAAA7O,EAAA8O,kBAAAtX,OAAAuX,YAEAH,EAAA3S,KAAA6R,EAAA,IAGA9N,EAAAe,aAEA6N,EAAA3S,KAAA6R,EAAA,IAIA,IAAAnF,EAAA,IAAArC,EAAAjR,KAAA,CACAgQ,MAAA,IACAwC,KAAA+G,IAEAjG,EAAA9K,OAEAxI,KAAAsT,SAGA5E,gBAAA,SAAA/N,GACA,IAAA2L,EAAAtM,KAAAsM,OACApC,EAAAlK,KAAAkK,MAEAoC,EAAAqM,cACA3Y,KAAAiO,SAAA,EACA/D,EAAApC,SAAA,gBAEA9H,KAAAiO,SAAA,EACA/D,EAAA/B,YAAA,iBASA,IAAAwR,EAAA,GA0BA,SAAAC,EAAAtN,GACAtM,KAAAsM,SACAtM,KAAA4K,MAAA,GA2HA,SAAAiP,EAAAlZ,GACA,IAAAmZ,EAAAnZ,EAAAmZ,eAAAnZ,EAAAoZ,eAAApZ,EAAAoZ,cAAAD,cASA,OAAAhM,EANA,MAAAgM,EACA3X,OAAA2X,eAAA3X,OAAA2X,cAAAE,QAAA,QAEAF,EAAAE,QAAA,eAmIA,SAAAC,EAAA3N,GACAtM,KAAAsM,SAmfA,SAAA4N,EAAA5N,GACAtM,KAAAsM,SA0FA,SAAA6N,EAAA7N,GACAtM,KAAAsM,SACAtM,KAAAoa,cAAA,KAoLA,SAAAC,EAAA/N,GACAtM,KAAAsM,SACAtM,KAAAsa,MAAA,EACAta,KAAAua,SAAA,EACAva,KAAAwa,WAAA,EACAxa,KAAAya,WAAA,EACAza,KAAA0a,eAAApO,EAAA8F,mBACApS,KAAA2a,KAAAxU,EAAA,oCA5iCAwT,EAAAiB,KAAA5M,EACA2L,EAAAkB,KAAA/K,EACA6J,EAAAmB,SAAA5K,EACAyJ,EAAAvJ,SAAAD,EACAwJ,EAAAtO,KAAA3L,EACAia,EAAAoB,OAAA7J,EACAyI,EAAAqB,KAAA7J,EACAwI,EAAAsB,cAAA7J,EACAuI,EAAAuB,UAAA7J,EACAsI,EAAAwB,KAAA7J,EACAqI,EAAArK,KAAAiC,EACAoI,EAAAyB,QAAA5J,EACAmI,EAAA0B,UAAA5J,EACAkI,EAAA2B,UAAA3J,EACAgI,EAAA4B,MAAA3J,EACA+H,EAAA6B,KAAA3J,EACA8H,EAAA8B,SAAA3J,EACA6H,EAAA+B,MAAA3J,EACA4H,EAAAgC,MAAA3J,EACA2H,EAAAiC,MAAA3J,EAYA2H,EAAAxT,UAAA,CACAC,YAAAuT,EAEAiC,KAAA,WACA,IAAAhc,EAAAG,KAEAsM,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,QAAA,GACAmR,EAAAnR,EAAAC,OAAA,GAGAkR,EAAAxV,QAAA,SAAAyV,GACA,IAAAC,EAAArC,EAAAoC,GAEAC,GAAA,oBAAAA,IAEAnc,EAAA+K,MAAAmR,GAAA,IAAAC,EAAA1P,MAIAtM,KAAAic,gBAGAjc,KAAAkc,cAGAD,cAAA,WACA,IAAA3P,EAAAtM,KAAAsM,OACA6P,EAAA7P,EAAA6P,aACAvR,EAAA5K,KAAA4K,MACAD,EAAA2B,EAAA3B,OAEAO,EAAAP,EAAAO,OAAA,EACAiC,EAAAvC,EAAA,SAAA/J,EAAAkC,GACA,IAAAmH,EAAAnH,EAAAmH,MAEAA,IAEAA,EAAA9B,IAAA,UAAA8C,GACAiR,EAAAxT,OAAAuB,OAKAgS,WAAA,WACA,IAAAtR,EAAA5K,KAAA4K,MACA0B,EAAAtM,KAAAsM,OACAa,EAAAvC,EAAA,SAAA/J,EAAAkC,GACA,IAAAqB,EAAArB,EAAAqB,KAEA,GAAAA,EAAA,CAIA,IAAA8F,EAAAnH,EAAAmH,MACA6F,EAAAhN,EAAAgN,SACAhN,EAAAuQ,MAEA,UAAAlP,GAAArB,EAAAI,SACA+G,EAAAhD,GAAA,iBAAAvG,GACA,MAAA2L,EAAA6B,UAAAiO,YAIArZ,EAAAI,QAAAxC,KAKA,aAAAyD,GAAA2L,GACA7F,EAAAhD,GAAA,sBAAAvG,GACA,MAAA2L,EAAA6B,UAAAiO,aAKArM,EAAAU,cAAAd,WAAA,WACAI,EAAAvH,QACa,QACFtB,GAAA,sBAAAvG,GAEXoP,EAAAL,cAAAC,WAAA,WACAI,EAAAtH,QACa,KAKb,UAAArE,GAAArB,EAAAI,SACA+G,EAAAhD,GAAA,iBAAAvG,GACAA,EAAAqS,kBAEA,MAAA1G,EAAA6B,UAAAiO,YAKArZ,EAAAI,QAAAxC,SAMA0b,aAAA,WACA,IAAAzR,EAAA5K,KAAA4K,MACAuC,EAAAvC,EAAA,SAAA/J,EAAAkC,GACAA,EAAA2L,iBACAiB,WAAA,WACA5M,EAAA2L,mBACW,SAyJXuL,EAAA7T,UAAA,CACAC,YAAA4T,EAEA4B,KAAA,WAEA7b,KAAAkc,cAGAI,MAAA,WACAtc,KAAA0F,KAAA,gBAGAA,KAAA,SAAAiC,GACA,IAAA2E,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACAlL,OAAA,EAEA,SAAAiC,EAIA,OAHAjC,EAAAkL,EAAAlL,OAEAA,IAAAH,QAAA,eACAG,EAEAkL,EAAAlL,KAAAiC,GAEA2E,EAAAiQ,iBAIAC,QAAA,WACA,IAAAlQ,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACA,OA/EA,SAAA6L,EAAAvS,GACA,IAAAnE,EAAA,GACA6C,EAAAsB,EAAAxB,cAAA,GAoCA,OAlCAE,EAAAtC,QAAA,SAAAoW,GACA,IAAAC,OAAA,EACAvX,EAAAsX,EAAAtX,SAQA,GANA,IAAAA,IAEAuX,EAAA7O,EADA6O,EAAAD,EAAAE,cAKA,IAAAxX,EAAA,EACAuX,EAAA,IAEAE,IAAAH,EAAAjT,SAAAwO,cAMA,IAJA,IAAA6E,EAAA,GACAC,EAAAL,EAAAM,YAAA,GACAC,EAAAF,EAAA9W,QAAA,EAEAC,EAAA,EAAuBA,EAAA+W,EAAoB/W,IAAA,CAC3C,IAAAwB,EAAAqV,EAAA7W,GACA4W,EAAAlW,KAAA,CACAoR,KAAAtQ,EAAAsQ,KACApO,MAAAlC,EAAAkC,QAIA+S,EAAAO,MAAAJ,EAEAH,EAAA9W,SAAA4W,EAAAtW,EAAAuW,IAGA3W,EAAAa,KAAA+V,KAEA5W,EAyCA0W,CAAA7L,IAGAjH,KAAA,SAAAhC,GACA,IAAA2E,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACAjH,OAAA,EAEA,SAAAhC,EAIA,OAHAgC,EAAAiH,EAAAjH,OAEAA,IAAApE,QAAA,eACAoE,EAEAiH,EAAAjH,KAAA,MAAAhC,EAAA,QAEA2E,EAAAiQ,iBAIA5T,OAAA,SAAAjD,GACA,IAAA4G,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACAA,EAAAjI,OAAAxC,EAAAT,IAEA4G,EAAAiQ,iBAGAL,WAAA,WAEAlc,KAAAmd,qBAGAnd,KAAAod,kBAGApd,KAAAqd,eAGArd,KAAAsd,eAGAtd,KAAAud,aAGAvd,KAAAwd,aAGAxd,KAAAyd,eAGAN,mBAAA,WACA,IAAA7Q,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UAEA,SAAA8M,EAAA/c,GAEA2L,EAAA6B,UAAAuP,YAEApR,EAAA1B,MAAAyR,eAIAzL,EAAA1J,GAAA,QAAAwW,GACA9M,EAAA1J,GAAA,qBAAAvG,GAEAiQ,EAAA1J,GAAA,aAAAwW,KAEA9M,EAAA1J,GAAA,mBAAAvG,GACA+c,IAEA9M,EAAApJ,IAAA,aAAAkW,MAIAN,gBAAA,WACA,IAAA9Q,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UAEA,SAAA+M,EAAAjN,GACA,IAAAkN,EAAAzX,EAAA,eACAyX,EAAAzT,aAAAuG,GACApE,EAAA6B,UAAAqF,kBAAAoK,GAAA,GACAtR,EAAA6B,UAAAM,mBACAiC,EAAA3H,SAoCA6H,EAAA1J,GAAA,iBAAAvG,GACA,KAAAA,EAAAkd,SAjCA,SAAAld,GACA,IAAA+P,EAAApE,EAAA6B,UAAAwC,4BACAuE,EAAAxE,EAAA1H,SAEA,sBAAAkM,EAAAxP,OAOAwP,EAAAjL,MAAA2G,IAOA,MAFAF,EAAAlH,gBAOAkH,EAAA/G,QAMAgU,EAAAjN,IAtBAiN,EAAAjN,GAgCAoN,KA4DAlN,EAAA1J,GAAA,mBAAAvG,GACA,KAAAA,EAAAkd,QA1DA,SAAAld,GACA,IAAA+P,EAAApE,EAAA6B,UAAAwC,4BAEA,GAAAD,EAAA,CAIA,IAAAwE,EAAAxE,EAAA1H,SACA+U,EAAArN,EAAAlH,cACAwU,EAAA9I,EAAA1L,cAEA,YAAAuU,GAAA,QAAAC,GAKA1R,EAAAgC,IAAA2P,sBAAA,eAMA,QAAA3R,EAAA4R,eAAA,CAGA,IAAAN,EAAAzX,EAAA,eAOA,OANAyX,EAAArT,YAAA2K,GACA5I,EAAA6B,UAAAqF,kBAAAoK,GAAA,GACAtR,EAAA6B,UAAAM,mBAEAnC,EAAA4R,gBAAA,OACAvd,EAAAwd,iBAIA,IAAAC,EAAA9R,EAAA6B,UAAAiO,WAAAiC,YAEA/R,EAAAgC,IAAAC,GAAA,mBACAjC,EAAA6B,UAAAuP,YAEApR,EAAA6B,UAAAiO,WAAAiC,cAAAD,GAEA9R,EAAAgC,IAAAC,GAAA,mBAGA,IAAA+P,EAAA5N,EAAAhL,OAAAO,OAEAqG,EAAA6B,UAAAiO,WAAAiC,YAAA,IAAAC,IAGAhS,EAAA4R,gBAAA,GAIAvd,EAAAwd,mBAYAI,CAAA5d,GALA2L,EAAA4R,gBAAA,KASAb,aAAA,WACA,IAAA/Q,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACAA,EAAA1J,GAAA,mBAAAvG,GACA,OAAAA,EAAAkd,QAAA,CAIA,IAAAW,EAAA5N,EAAAlL,OAAAuS,cAAAzS,OAEA,gBAAAgZ,GAEA7d,EAAAwd,oBAIAvN,EAAA1J,GAAA,iBAAAvG,GACA,OAAAA,EAAAkd,QAAA,CAIA,IAAAD,OAAA,EACAY,EAAA5N,EAAAlL,OAAAuS,cAAAzS,OAEAgZ,GAAA,SAAAA,IAEAZ,EAAAzX,EAAA,gBACAyK,EAAAlL,KAAA,IAEAkL,EAAAjI,OAAAiV,GACAtR,EAAA6B,UAAAqF,kBAAAoK,GAAA,MACAtR,EAAA6B,UAAAM,wBAKA6O,aAAA,WACA,IAAAhR,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OACAY,EAAAZ,EAAAY,iBACAE,EAAAd,EAAAc,gBACAgT,EAAA9T,EAAAa,eACAoF,EAAAtE,EAAAsE,UAGA8N,EAAA,EAEA,SAAAC,IACA,IAAAC,EAAAC,KAAAD,MACAE,GAAA,EAQA,OANAF,EAAAF,GAAA,MAEAI,GAAA,GAGAJ,EAAAE,EACAE,EAQAlO,EAAA1J,GAAA,iBAAAvG,GACA,IAAAiM,EAAAM,SAIAvM,EAAAwd,iBAIAQ,KAAA,CAKA,IAAAI,EAxbA,SAAApe,EAAAqe,EAAAP,GACA,IAAA3E,EAAAnZ,EAAAmZ,eAAAnZ,EAAAoZ,eAAApZ,EAAAoZ,cAAAD,cACAmF,OAAA,EACAF,OAAA,EAaA,GAXA,MAAAjF,EACAmF,EAAA9c,OAAA2X,eAAA3X,OAAA2X,cAAAE,QAAA,SAEAiF,EAAAnF,EAAAE,QAAA,cACA+E,EAAAjF,EAAAE,QAAA,eAGA+E,GAAAE,IACAF,EAAA,MAAAjR,EAAAmR,GAAA,QAGAF,EAAA,CAKA,IAAAG,EAAAH,EAAA3X,MAAA,WA0BA,OAxBA,IAAA8X,EAAAjZ,SACA8Y,EAAAG,EAAA,IAQAH,GAFAA,GAFAA,IAAAxZ,QAAA,kCAEAA,QAAA,oBAEAA,QAAA,mCAEAkZ,IAEAM,IAAAxZ,QAAA,mBAKAwZ,EAFAC,EAEAD,EAAAxZ,QAAA,wCAGAwZ,EAAAxZ,QAAA,iCA4YA4Z,CAAAxe,EAAA4K,EAAAkT,GACAQ,EAAApF,EAAAlZ,GACAse,IAAA1Z,QAAA,eACA,IAAAmL,EAAApE,EAAA6B,UAAAwC,4BAEA,GAAAD,EAAA,CAIA,IAAAjH,EAAAiH,EAAAlH,cAEA,YAAAC,GAAA,QAAAA,EAOA,OANAgC,GAAAsC,EAAAtC,KAEAwT,EAAA,IAAAxT,EAAAwT,IAAA,UAGA3S,EAAAgC,IAAAC,GAAA,mBAAA0Q,EAAA,QASA,GAAAF,EAMA,IAGAtT,GAAAsC,EAAAtC,KAEAsT,EAAA,IAAAtT,EAAAsT,IAAA,KAGAzS,EAAAgC,IAAAC,GAAA,aAAAwQ,GACS,MAAAK,GAET3T,GAAAsC,EAAAtC,KAEAwT,EAAA,IAAAxT,EAAAwT,IAAA,KAGA3S,EAAAgC,IAAAC,GAAA,mBAAA0Q,EAAA,aAlEAP,EAAA,MAsEA9N,EAAA1J,GAAA,iBAAAvG,GACA,IAAAiM,EAAAM,SAGAvM,EAAAwd,iBAIAQ,KAAA,CAKA,IAAAU,EAtcA,SAAA1e,GACA,IAAAoF,EAAA,GAGA,GAFA8T,EAAAlZ,GAIA,OAAAoF,EAGA,IACAuZ,GADA3e,EAAAmZ,eAAAnZ,EAAAoZ,eAAApZ,EAAAoZ,cAAAD,eAAA,IACAwF,MAEA,OAAAA,GAIAnS,EAAAmS,EAAA,SAAAze,EAAA+I,GACA,IAAAxF,EAAAwF,EAAAxF,KAEA,SAAA6I,KAAA7I,IACA2B,EAAAa,KAAAgD,EAAA2V,eAGAxZ,GAVAA,EAybAyZ,CAAA7e,GAEA,GAAA0e,KAAApZ,OAAA,CAKA,IAAAyK,EAAApE,EAAA6B,UAAAwC,4BAEA,GAAAD,EAAA,CAIA,IAAAjH,EAAAiH,EAAAlH,cAEA,YAAAC,GAAA,QAAAA,EAAA,CAKA,IAAAmP,EAAAtM,EAAAsM,UACAA,YAAAyG,UAIA9B,WAAA,WACA,IAAAjR,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UACAA,EAAA1J,GAAA,mBAAAvG,GACA,OAAAA,EAAAkd,SAIAvR,EAAAgC,IAAA2P,sBAAA,eAKA,IAAAvN,EAAApE,EAAA6B,UAAAwC,4BAEA,GAAAD,EAAA,CAIA,IAAAwE,EAAAxE,EAAA1H,SACA+U,EAAArN,EAAAlH,cACAwU,EAAA9I,EAAA1L,cAEA,SAAAuU,GAAA,QAAAC,EAEA1R,EAAAgC,IAAAC,GAAA,qBAGAjC,EAAAgC,IAAAC,GAAA,yCAGA5N,EAAAwd,sBAIAX,WAAA,WACA,IAAAlR,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UAEAA,EAAA1J,GAAA,uBAAAvG,GACA,IACA+X,EAAAvS,EADAnG,MAGA,MAAA0Y,EAAAhR,KAAA,cAMA4E,EAAAqM,aAAAD,EAEApM,EAAA6B,UAAAqF,kBAAAkF,GACApM,EAAA6B,UAAAM,sBAGAmC,EAAA1J,GAAA,wBAAAvG,GACAA,EAAA2G,OAAAC,QAAA,SAMA+E,EAAAqM,aAAA,SAIA8E,YAAA,WACA,IAAAnR,EAAAtM,KAAAsM,OAEAmT,EAAAtZ,EAAA9D,UACAod,EAAAvY,GAAA,6CAAAvG,GACAA,EAAAwd,mBAGA,IAAAvN,EAAAtE,EAAAsE,UACAA,EAAA1J,GAAA,gBAAAvG,GACAA,EAAAwd,iBACA,IAAA5R,EAAA5L,EAAA+e,cAAA/e,EAAA+e,aAAAnT,MAEA,GAAAA,KAAAtG,OAAA,CAKA,IAAA2S,EAAAtM,EAAAsM,UACAA,YAAArM,QAcA2N,EAAA9T,UAAA,CACAC,YAAA6T,EAEA3L,GAAA,SAAAyJ,EAAApO,GACA,IAAA0C,EAAAtM,KAAAsM,OAQA,GANAA,EAAAqT,mBACAtd,SAAAud,YAAA,wBACAtT,EAAAqT,kBAAA,GAIArT,EAAA6B,UAAAiO,WAAA,CAKA9P,EAAA6B,UAAAM,mBAEA,IAAAoR,EAAA,IAAA7H,EAEAhY,KAAA6f,GAEA7f,KAAA6f,GAAAjW,GAGA5J,KAAA8f,aAAA9H,EAAApO,GAIA0C,EAAA1B,MAAAyR,eAEA/P,EAAA6B,UAAAuP,YACApR,EAAA6B,UAAAM,mBAEAnC,EAAAyT,QAAAzT,EAAAyT,WAGAC,YAAA,SAAAta,GACA,IAAA4G,EAAAtM,KAAAsM,OACA2T,EAAA3T,EAAA6B,UAAAiO,WAEApc,KAAAie,sBAAA,cAEAje,KAAA8f,aAAA,aAAApa,GACOua,EAAAC,YAEPD,EAAAE,iBACAF,EAAAC,WAAA/Z,EAAAT,GAAA,KACOua,EAAAG,WAEPH,EAAAG,UAAA1a,IAIA2a,YAAA,SAAAnW,GACA,IAAAoC,EAAAtM,KAAAsM,OACA2T,EAAA3T,EAAA6B,UAAAiO,WAEA6D,EAAAC,aACAD,EAAAE,iBACAF,EAAAC,WAAAhW,EAAA,MAIA4V,aAAA,SAAA9H,EAAApO,GACAvH,SAAAud,YAAA5H,GAAA,EAAApO,IAGAkH,kBAAA,SAAAkH,GACA,OAAA3V,SAAAyO,kBAAAkH,IAGArJ,kBAAA,SAAAqJ,GACA,OAAA3V,SAAAsM,kBAAAqJ,IAGAiG,sBAAA,SAAAjG,GACA,OAAA3V,SAAA4b,sBAAAjG,KAcAmC,EAAA/T,UAAA,CACAC,YAAA8T,EAEAiC,SAAA,WACA,OAAApc,KAAAoa,eAGAsD,UAAA,SAAA4C,GACA,GAAAA,EAEAtgB,KAAAoa,cAAAkG,MAFA,CAOA,IAAAnS,EAAAhM,OAAAoe,eAEA,OAAApS,EAAAqS,WAAA,CAIA,IAAAP,EAAA9R,EAAAsS,WAAA,GAEAC,EAAA1gB,KAAA2Q,0BAAAsP,GAEA,GAAAS,GAKA,UAAAA,EAAAhZ,KAAA,qBAAAgZ,EAAA5W,YAAA,4BAIA,IAAAwC,EAAAtM,KAAAsM,OACAsE,EAAAtE,EAAAsE,UAEAA,EAAAzH,UAAAuX,KAEA1gB,KAAAoa,cAAA6F,OAIAzR,cAAA,SAAAmS,GACA,MAAAA,IAEAA,GAAA,GAGA,IAAAV,EAAAjgB,KAAAoa,cAEA6F,GACAA,EAAAW,SAAAD,IAIAjN,iBAAA,WACA,IAAAuM,EAAAjgB,KAAAoa,cAEA,OAAA6F,EACAjgB,KAAAoa,cAAAxM,WAEA,IAIA+C,0BAAA,SAAAsP,GACAA,KAAAjgB,KAAAoa,cACA,IAAA5T,OAAA,EAEA,GAAAyZ,EAEA,OAAA9Z,EAAA,KADAK,EAAAyZ,EAAAY,yBACAzb,SAAAoB,IAAA8D,aAGAoK,sBAAA,SAAAuL,GACAA,KAAAjgB,KAAAoa,cACA,IAAA5T,OAAA,EAEA,GAAAyZ,EAEA,OAAA9Z,EAAA,KADAK,EAAAyZ,EAAAa,gBACA1b,SAAAoB,IAAA8D,aAGAsK,oBAAA,SAAAqL,GACAA,KAAAjgB,KAAAoa,cACA,IAAA5T,OAAA,EAEA,GAAAyZ,EAEA,OAAA9Z,EAAA,KADAK,EAAAyZ,EAAAc,cACA3b,SAAAoB,IAAA8D,aAIA8D,iBAAA,WACA,IAAA6R,EAAAjgB,KAAAoa,cAEA,SAAA6F,MAAAa,gBACAb,EAAAa,iBAAAb,EAAAc,cACAd,EAAA5B,cAAA4B,EAAAe,YASAvS,iBAAA,WACA,IAAAN,EAAAhM,OAAAoe,eACApS,EAAA8S,kBACA9S,EAAA+S,SAAAlhB,KAAAoa,gBAGA/L,iBAAA,WACA,IAAA/B,EAAAtM,KAAAsM,OACA2T,EAAAjgB,KAAAoc,WACAlS,OAAA,EAEA,GAAA+V,GAKAjgB,KAAAoO,mBAKA,IAEAxB,EAAAI,YAEAV,EAAAgC,IAAAC,GAAA,wBAEA0R,EAAAkB,OAAAlB,EAAAc,aAAAd,EAAAe,UAAA,GAEAhhB,KAAA0d,UAAAuC,KAEA/V,EAAA/D,EAAA,4BACAmG,EAAAgC,IAAAC,GAAA,aAAArE,GACAlK,KAAAwT,kBAAAtJ,GAAA,IAEO,MAAAkV,MAIP5L,kBAAA,SAAAtJ,EAAAyW,EAAAS,GAIA,GAAAlX,EAAAjE,OAAA,CAIA,IAAAO,EAAA0D,EAAA,GACA+V,EAAA5d,SAAAgf,cAEAD,EACAnB,EAAAqB,mBAAA9a,GAEAyZ,EAAAsB,WAAA/a,GAGA,mBAAAma,GACAV,EAAAW,SAAAD,GAIA3gB,KAAA0d,UAAAuC,MAiBA5F,EAAAjU,UAAA,CACAC,YAAAgU,EACA7R,KAAA,SAAAgZ,GACA,IAAA3hB,EAAAG,KAGA,IAAAA,KAAAua,QAAA,CAIAva,KAAAua,SAAA,EAEA,IAAAI,EAAA3a,KAAA2a,KAEA,GAAA3a,KAAAwa,UAIAxa,KAAAwa,WAAA,MAJA,CACA,IAAAE,EAAA1a,KAAA0a,eACAA,EAAA/R,OAAAgS,GAMAkE,KAAAD,MAAA5e,KAAAsa,MAAA,KACAkH,GAAA,IACA7G,EAAAvS,IAAA,YAAAoZ,EAAA,KACAxhB,KAAAsa,MAAAuE,KAAAD,OAKA,IAAA6C,EAAAzhB,KAAAya,WAEAgH,GACApR,aAAAoR,GAGAA,EAAA9R,WAAA,WACA9P,EAAA6hB,SACO,OAEPA,MAAA,WACA,IAAA/G,EAAA3a,KAAA2a,KACAA,EAAA5R,SAEA/I,KAAAsa,MAAA,EACAta,KAAAua,SAAA,EACAva,KAAAwa,WAAA,IAIA,IAAAmH,EAAA,oBAAAC,QAAA,kBAAAA,OAAAC,SAAA,SAAAzU,GACA,cAAAA,GACG,SAAAA,GACH,OAAAA,GAAA,oBAAAwU,QAAAxU,EAAA/G,cAAAub,QAAAxU,IAAAwU,OAAAxb,UAAA,gBAAAgH,GAQA,SAAA0U,EAAAxV,GACAtM,KAAAsM,SAIAwV,EAAA1b,UAAA,CACAC,YAAAyb,EAEAC,OAAA,SAAAC,EAAAC,GACA,IAAA3V,EAAAtM,KAAAsM,OACAnB,EAAAmB,EAAA3B,OAAAQ,MACA+W,EAAA5V,EAAA3B,OAAAuX,YAEA,GAAA/W,EACA,UAAAgX,MAAA,gBAAAF,GAAAD,IAEAE,GAAA,oBAAAA,EACAA,EAAAF,GAEAzN,MAAAyN,IAKA1I,cAAA,SAAAjO,GACA,IAAA+K,EAAApW,KAEA,GAAAqL,EAAA,CAIA,IAAAiB,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OAEAW,EAAAX,EAAAW,aACAgJ,OAAA,EAEA,GAAAhJ,GAAA,oBAAAA,GAGA,kBAFAgJ,EAAAhJ,EAAAD,IAIAkJ,MAAAD,OALA,CAUAhI,EAAAgC,IAAAC,GAAA,0BAAAlD,EAAA,+BAEA,IAAA+W,EAAA/f,SAAAY,cAAA,OAEAmf,EAAAC,OAAA,WACA,IAAAC,EAAA3X,EAAAgB,gBAEA2W,GAAA,oBAAAA,GACAA,EAAAjX,GAGA+W,EAAA,MAGAA,EAAAG,QAAA,WACAH,EAAA,KAEAhM,EAAA2L,OAAA,gIAAA1W,EAAA,sDAKA+W,EAAAI,QAAA,WACAJ,EAAA,MAGAA,EAAAze,IAAA0H,KAGAuN,UAAA,SAAArM,GACA,IAAAkW,EAAAziB,KAEA,GAAAuM,KAAAtG,OAAA,CAKA,IAAAqG,EAAAtM,KAAAsM,OACA3B,EAAA2B,EAAA3B,OACA6O,EAAA7O,EAAA6O,gBACA3N,EAAAlB,EAAAkB,oBACA6W,EAAA/X,EAAAiB,iBACA+W,EAAAD,EAAA,UACAE,EAAAjY,EAAAkY,oBAAA,IACA/W,EAAAnB,EAAAmB,gBAAA,GACAC,EAAApB,EAAAoB,iBAAA,GACA+W,EAAAnY,EAAAmY,uBACA9W,EAAArB,EAAAqB,kBAAA,GACA+W,EAAApY,EAAAwB,gBAAA,GACAO,EAAA/B,EAAAuB,kBAAA,IACAD,EAAAtB,EAAAsB,gBAEA,MAAAA,IACAA,GAAA,GAGA,IAAAwN,EAAA9O,EAAA8O,gBAEA,GAAAA,GAEAD,GAAA3N,EAFA,CAQA,IAAAmX,EAAA,GACAC,EAAA,GAyBA,GAxBA3V,EAAAf,EAAA,SAAA2W,GACA,IAAAlL,EAAAkL,EAAAlL,KACAtU,EAAAwf,EAAAxf,KAEAsU,GAAAtU,KAIA,sCAAAuJ,KAAA+K,GAMA0K,EAAAhf,EAEAuf,EAAArc,KAAA,SAAAoR,EAAA,sBAAA2K,EAAA,KAKAK,EAAApc,KAAAsc,GAXAD,EAAArc,KAAA,SAAAoR,EAAA,qCAcAiL,EAAAhd,OACAjG,KAAA+hB,OAAA,iDAAAkB,EAAA/a,KAAA,YAKA,GAAA8a,EAAA/c,OAAA2c,EACA5iB,KAAA+hB,OAAA,uCAAAa,EAAA,2BAMA,GAAAnJ,GAAA,oBAAAA,EACAA,EAAAuJ,EAAAhjB,KAAAsZ,cAAA7Y,KAAAT,WADA,CAOA,IAAAmjB,EAAA,IAAAC,SAMA,GALA9V,EAAA0V,EAAA,SAAAE,GACA,IAAAlL,EAAAlM,GAAAoX,EAAAlL,KACAmL,EAAAxa,OAAAqP,EAAAkL,KAGA1J,GAAA,kBAAAA,EAAA,CAEA,IAAA6J,EAAA7J,EAAApS,MAAA,KACAoS,EAAA6J,EAAA,GACA,IAAAC,EAAAD,EAAA,OACAlW,EAAApB,EAAA,SAAAlL,EAAA8G,GAIAmb,IACAtJ,EAAA/T,QAAA,OACA+T,GAAA,IAEAA,GAAA,IAGAA,IAAA3Y,EAAA,IAAA8G,GAIAwb,EAAAxa,OAAA9H,EAAA8G,KAGA2b,IACA9J,GAAA,IAAA8J,GAIA,IAAAjX,EAAA,IAAAkX,eA2FA,GA1FAlX,EAAAmX,KAAA,OAAAhK,GAEAnN,EAAAK,UAEAL,EAAAoX,UAAA,WAEAV,EAAArW,SAAA,oBAAAqW,EAAArW,SACAqW,EAAArW,QAAAL,EAAAC,GAGAmW,EAAAV,OAAA,yCAIA1V,EAAAqX,SACArX,EAAAqX,OAAAC,WAAA,SAAAhjB,GACA,IAAAijB,OAAA,EAEAC,EAAA,IAAAxJ,EAAA/N,GAEA3L,EAAAmjB,mBACAF,EAAAjjB,EAAAojB,OAAApjB,EAAAqjB,MACAH,EAAArb,KAAAob,MAMAvX,EAAA4X,mBAAA,WACA,IAAAle,OAAA,EAEA,OAAAsG,EAAA6X,WAAA,CACA,GAAA7X,EAAA7K,OAAA,KAAA6K,EAAA7K,QAAA,IASA,OAPAuhB,EAAAtW,OAAA,oBAAAsW,EAAAtW,OACAsW,EAAAtW,MAAAJ,EAAAC,QAIAmW,EAAAV,OAAA,6JAAA1V,EAAA7K,QAOA,oCAFAuE,EAAAsG,EAAA8X,cAEA,YAAAxC,EAAA5b,IACA,IACAA,EAAAqe,KAAAC,MAAAte,GACe,MAAAqZ,GAQf,OANA2D,EAAAvW,MAAA,oBAAAuW,EAAAvW,MACAuW,EAAAvW,KAAAH,EAAAC,EAAAvG,QAGA0c,EAAAV,OAAA,4IAAAhc,GAMA,GAAAgd,EAAAuB,cAAA,KAAAve,EAAAwe,MAQa,CACb,GAAAxB,EAAAuB,cAAA,oBAAAvB,EAAAuB,aAEAvB,EAAAuB,aAAA7B,EAAAnJ,cAAA7Y,KAAAgiB,GAAA1c,EAAAuG,OACe,CAEf,IAAAlL,EAAA2E,EAAA3E,MAAA,GACAA,EAAAkF,QAAA,SAAA+E,GACAoX,EAAAnJ,cAAAjO,KAKA0X,EAAArhB,SAAA,oBAAAqhB,EAAArhB,SACAqhB,EAAArhB,QAAA2K,EAAAC,EAAAvG,QApBAgd,EAAAvW,MAAA,oBAAAuW,EAAAvW,MACAuW,EAAAvW,KAAAH,EAAAC,EAAAvG,GAIA0c,EAAAV,OAAA,2IAAAhc,EAAAwe,SAsBAxB,EAAA3W,QAAA,oBAAA2W,EAAA3W,OAAA,CACA,IAAAoY,EAAAzB,EAAA3W,OAAAC,EAAAC,EAAA0W,GAEA,GAAAwB,GAAA,iCAAAA,EAAA,YAAA7C,EAAA6C,KACAA,EAAAC,QAIA,YAFAzkB,KAAA+hB,OAAAyC,EAAAnjB,KAgBA,OARA8L,EAAAnB,EAAA,SAAAnL,EAAA8G,GACA0E,EAAAqY,iBAAA7jB,EAAA8G,KAGA0E,EAAAJ,uBAEAI,EAAAsY,KAAAxB,GAMAtX,GACAyB,EAAAf,EAAA,SAAA2W,GACA,IAAArjB,EAAA4iB,EACAmC,EAAA,IAAAlL,WACAkL,EAAAC,cAAA3B,GAEA0B,EAAAvC,OAAA,WACAxiB,EAAAyZ,cAAAtZ,KAAA+F,gBAWA,IAAA+e,EAAA,EAEA,SAAAC,EAAAC,EAAAC,GACA,SAAAD,EAEA,UAAA7C,MAAA,oJAIAniB,KAAAklB,GAAA,cAAAJ,IACA9kB,KAAAglB,kBACAhlB,KAAAilB,eAEAjlB,KAAAmlB,aAAA,GAIAJ,EAAA3e,UAAA,CACAC,YAAA0e,EAEAK,YAAA,WAGAplB,KAAA2K,OAAA7K,OAAAulB,OADA,GACA1a,EAAA3K,KAAAmlB,cAEA,IAAAG,EAAAtlB,KAAA2K,OAAA4a,MAAA,GACAzW,EAAA,GACA3B,EAAAmY,EAAA,SAAAzkB,EAAA8G,GAGAmH,EAAAlI,KAAA,CACAmI,IAAA,IAAAyW,OAAA3kB,EAAA,OACA8G,UAGA3H,KAAA2K,OAAAmE,YAGA2W,SAAA,WACA,IAAA5lB,EAAAG,KAEAglB,EAAAhlB,KAAAglB,gBACAU,EAAAvf,EAAA6e,GACAC,EAAAjlB,KAAAilB,aACAU,EAAA3lB,KAAA2K,OACAO,EAAAya,EAAAza,OAEAiR,OAAA,EACA/J,OAAA,EACAxB,OAAA,EACAhI,OAAA,EAEA,MAAAqc,GAEA9I,EAAAhW,EAAA,eACAiM,EAAAjM,EAAA,eAEAyC,EAAA8c,EAAA7f,WAEA6f,EAAA/c,OAAAwT,GAAAxT,OAAAyJ,GAEA+J,EAAA/T,IAAA,8BAAAA,IAAA,2BACAgK,EAAAhK,IAAA,2BAAAA,IAAA,qBAAAA,IAAA,oBAGA+T,EAAAuJ,EACAtT,EAAAjM,EAAA8e,GAEArc,EAAAwJ,EAAAvM,aAIA+K,EAAAzK,EAAA,gBACAuB,KAAA,0BAAAU,IAAA,gBAAAA,IAAA,iBAEAQ,KAAA3C,OACA2K,EAAAjI,OAAAC,GAEAgI,EAAAjI,OAAAxC,EAAA,gBAIAiM,EAAAzJ,OAAAiI,GAEAuL,EAAArU,SAAA,eACAsK,EAAAtK,SAAA,sBACAsK,EAAAhK,IAAA,UAAA8C,GACA0F,EAAA9I,SAAA,YAEA,IAAA8d,EAAApY,EAAA,gBACA2O,EAAAzU,KAAA,KAAAke,GACA,IAAAC,EAAArY,EAAA,aACAoD,EAAAlJ,KAAA,KAAAme,GAEA7lB,KAAAmc,eACAnc,KAAAoS,qBACApS,KAAA4Q,YACA5Q,KAAA4lB,gBACA5lB,KAAA6lB,aAEA,IAAAC,GAAA,EACA1T,EAAAlL,GAAA,8BAEA4e,GAAA,IAEA1T,EAAAlL,GAAA,4BAEA4e,GAAA,IAGA1T,EAAAlL,GAAA,yBAEA4e,GAAAjmB,EAAAkgB,QAAAlgB,EAAAkgB,WAEA5D,EAAAjV,GAAA,mBACAlH,KAAA+f,QAAA/f,KAAA+f,YAGA4F,EAAAI,SAAAJ,EAAAK,UAEAhmB,KAAAimB,SAAA,EACA9f,EAAA9D,UAAA6E,GAAA,iBAAAvG,GAEA,IAAAulB,EAAAtV,EAAAzH,UAAAhD,EAAAxF,EAAA2G,SAEA6e,EAAAhK,EAAAhT,UAAAhD,EAAAxF,EAAA2G,SACA8e,EAAAjK,EAAA,IAAAxb,EAAA2G,OAEA,GAAA4e,EAYArmB,EAAAomB,SACApmB,EAAAkmB,SAAAlmB,EAAAkmB,UAGAlmB,EAAAomB,SAAA,MAhBA,CAEA,GAAAE,IAAAC,EACA,OAGAvmB,EAAAomB,SACApmB,EAAAmmB,QAAAnmB,EAAAmmB,SAGAnmB,EAAAomB,SAAA,OAYAI,aAAA,WACArmB,KAAAsO,IAAA,IAAA4L,EAAAla,OAGAsmB,kBAAA,WACAtmB,KAAAmO,UAAA,IAAAgM,EAAAna,OAGAumB,eAAA,WACAvmB,KAAA4Y,UAAA,IAAAkJ,EAAA9hB,OAGAwmB,WAAA,WACAxmB,KAAA4K,MAAA,IAAAgP,EAAA5Z,MACAA,KAAA4K,MAAAiR,QAGA4K,UAAA,WACAzmB,KAAA0mB,IAAA,IAAAzM,EAAAja,MACAA,KAAA0mB,IAAA7K,QAGAU,cAAA,SAAAoK,GACA,IAAA/V,EAAA5Q,KAAA4Q,UACAhI,EAAAgI,EAAA/K,WAEA,IAAA+C,EAAA3C,OAIA,OAFA2K,EAAAjI,OAAAxC,EAAA,qBACAnG,KAAAuc,gBAIA,IAAAqK,EAAAhe,EAAA3B,OAEA,GAAA0f,EAAA,CAEA,IAAAjhB,EAAAkhB,EAAAlhB,OAAAuS,cACAxO,EAAAmd,EAAApd,cAEA,YAAA9D,GAAA,UAAAA,GAAA,MAAA+D,EAIA,OAFAmH,EAAAjI,OAAAxC,EAAA,qBACAnG,KAAAuc,gBAKAvc,KAAAmO,UAAAqF,kBAAAoT,GAAA,MACA5mB,KAAAmO,UAAAM,oBAGAyN,WAAA,WAEA,IAAA2K,EAAA,EACAC,EAAA9mB,KAAA0mB,IAAAhhB,OACAigB,EAAA3lB,KAAA2K,OAEAoc,EAAApB,EAAAoB,mBACAA,EAAAnmB,SAAAmmB,EAAA,MAEAA,GAAA,KACAA,EAAA,KAGA,IAAAC,EAAArB,EAAAqB,SAEAA,GAAA,oBAAAA,IAKAhnB,KAAA+f,OAAA,WAEA,IAAAkH,EAAAjnB,KAAA0mB,IAAAhhB,OAEAuhB,EAAAhhB,SAAA6gB,EAAA7gB,QAEAghB,IAAAH,IAMAD,GACAxW,aAAAwW,GAGAA,EAAAlX,WAAA,WAEAqX,EAAAC,GACAH,EAAAG,GACWF,MAKX,IAAAf,EAAAL,EAAAK,OAEAA,GAAA,oBAAAA,IACAhmB,KAAAgmB,OAAA,WACA,IAAAiB,EAAAjnB,KAAA0mB,IAAAhhB,OACAsgB,EAAAiB,KAKA,IAAAlB,EAAAJ,EAAAI,QAEAA,GAAA,oBAAAA,IACA/lB,KAAA+lB,QAAA,WACAA,OAKAmB,OAAA,WAEAlnB,KAAAolB,cAGAplB,KAAAylB,WAGAzlB,KAAAqmB,eAGArmB,KAAAsmB,oBAGAtmB,KAAAymB,YAGAzmB,KAAAwmB,aAGAxmB,KAAAumB,iBAGAvmB,KAAAuc,eAAA,GAEAvc,KAAAkc,cAGAiL,aAAA,WACAhhB,EAAAuE,WA59IA,mBAAA5K,OAAAulB,SACAvlB,OAAAulB,OAAA,SAAA/d,EAAA8f,GAEA,SAAA9f,EAEA,UAAA+f,UAAA,8CAKA,IAFA,IAAA/jB,EAAAxD,OAAAwH,GAEAP,EAAA,EAA2BA,EAAAugB,UAAArhB,OAA0Bc,IAAA,CACrD,IAAAwgB,EAAAD,UAAAvgB,GAEA,SAAAwgB,EAEA,QAAAC,KAAAD,EAEAznB,OAAAsG,UAAAiH,eAAAlN,KAAAonB,EAAAC,KACAlkB,EAAAkkB,GAAAD,EAAAC,IAMA,OAAAlkB,IAKAmkB,QAAArhB,UAAAmB,UACAkgB,QAAArhB,UAAAmB,QAAAkgB,QAAArhB,UAAAshB,iBAAAD,QAAArhB,UAAAuhB,oBAAAF,QAAArhB,UAAAwhB,mBAAAH,QAAArhB,UAAAyhB,kBAAAJ,QAAArhB,UAAA0hB,uBAAA,SAAAC,GAIA,IAHA,IAAAxgB,GAAAvH,KAAAqC,UAAArC,KAAAgoB,eAAAhiB,iBAAA+hB,GACA7hB,EAAAqB,EAAAtB,SAEAC,GAAA,GAAAqB,EAAAU,KAAA/B,KAAAlG,OAEA,OAAAkG,GAAA,IAq8IA,IAEA3C,EAAAlB,SAAAY,cAAA,SAMA,OALAM,EAAAa,KAAA,WACAb,EAAAqC,UAJA,mmhBAKAvD,SAAA4lB,qBAAA,QAAAhgB,KAAA,GAAAa,YAAAvF,GAEApB,OAAA+lB,YAAAnD,EAz/I8DoD,+QCQxDC,cACF,SAAAA,EAAYxoB,GAAO,IAAAC,EAAA,OAAAC,OAAAuoB,EAAA,EAAAvoB,CAAAE,KAAAooB,IACfvoB,EAAAC,OAAAwoB,EAAA,EAAAxoB,CAAAE,KAAAF,OAAAyoB,EAAA,EAAAzoB,CAAAsoB,GAAAjoB,KAAAH,KAAMJ,KACDQ,MAAQ,CACTooB,KAAM,GACN1kB,MAAO,IAEXjE,EAAK4oB,OAAS5oB,EAAK4oB,OAAOhoB,KAAZX,OAAA4oB,EAAA,EAAA5oB,CAAAD,IACdA,EAAK8oB,YAAc9oB,EAAK8oB,YAAYloB,KAAjBX,OAAA4oB,EAAA,EAAA5oB,CAAAD,IAPJA,sEASZc,GAEHkB,QAAQC,IAAI9B,KAAKI,MAAM0D,MAAQ,KAAO9D,KAAKI,MAAMooB,MAC7CxoB,KAAKI,MAAM0D,MACX9C,IAAKC,KAAK,WAAY,CAClB6C,MAJI9D,KAISI,MAAM0D,MACnBkH,QALIhL,KAKWI,MAAMooB,OACtBtnB,KAAK,SAAAC,GACiB,MAAjBA,EAAIC,KAAKC,IACTunB,EAAAnpB,EAAQiC,QAAQP,EAAIC,KAAKA,MAEzBwnB,EAAAnpB,EAAQopB,KAAK1nB,EAAIC,KAAKA,QAE3BO,MAAM,SAAAC,GAASC,QAAQC,IAAIF,KAE9BgnB,EAAAnpB,EAAQopB,KAAK,kFAGTloB,GACR,IAAIgH,EAAMhH,EAAE2G,OAAOsC,MACnB5J,KAAKkC,SAAS,iBAAO,CACjB4B,MAAO6D,iDAIX3H,KAAK8oB,kDAGL,IAAMtiB,EAAOxG,KAAK+oB,KAAKC,WACjB1c,EAAS,IAAI2c,IAAEziB,GACjBzF,EAAQf,KAEZA,KAAKsM,OAASA,EAEdA,EAAO6Y,aAAaja,OAAS,IAE7BoB,EAAO6Y,aAAatC,mBAAqB,EACzCvW,EAAO6Y,aAAa3L,gBAAkB,sCAEtClN,EAAO6Y,aAAa1L,gBAAkB,SAAUlN,EAAO2c,GACnD,GAAI3c,EAAM,GAAI,CACV,IAAM4c,EAAW,IAAIhnB,OAAOihB,SAC5B+F,EAASxgB,OAAO,SAAU4D,EAAM,IAChCvL,YAAK,CACDooB,OAAQ,OACRrnB,IAAK,iBACLX,KAAM+nB,EACNE,QAAS,CAAEC,eAAgB,yBAC5BpoB,KAAK,SAAAC,GACJ,GAAqB,MAAjBA,EAAIC,KAAKC,IAAa,CACtB,IAAIsC,EAAM,gCAAkCxC,EAAIC,KAAKmoB,SACrDL,EAAOvlB,GACP5C,EAAMnB,MAAM4pB,WAAW7lB,QAEvBilB,EAAAnpB,EAAQgN,MAAM,0CAEnB9K,MAAM,SAAAC,GAASC,QAAQC,IAAIF,OAGtC0K,EAAO6Y,aAAava,MAAQ,CACxB,OACA,OACA,WAEA,SACA,YACA,gBACA,YAEA,OACA,OACA,UACA,QAEA,QAGA,OACA,OACA,QAEJ0B,EAAO6Y,aAAaI,KAAO,CACvBkE,2BAAQ,QACRC,eAAM,OACNC,2BAAQ,QACRC,2BAAQ,OACRC,2BAAQ,GACRC,2BAAQ,GACRC,2BAAQ,QACRC,eAAM,GACNC,eAAM,GACNC,eAAM,GACNC,eAAM,IACNC,2BAAQ,YACRC,eAAM,OACNC,2BAAQ,SACRC,2BAAQ,MACRC,mBAAU,YACVC,2BAAQ,QACRC,qBAAO,SACPC,eAAM,SACNC,eAAM,QAEVte,EAAO6Y,aAAa6B,SAAW,SAAUthB,GAErC3E,EAAMmB,SAAS,iBAAO,CAClBsmB,KAAM9iB,MAGd4G,EAAO4a,0CAGP,OACI2D,EAAAprB,EAAAwD,cAAA,OAAKO,UAAU,gBACXqnB,EAAAprB,EAAAwD,cAAC6nB,EAAA,EAAD,MACAD,EAAAprB,EAAAwD,cAAA,MAAIO,UAAU,iBAAd,4BACAqnB,EAAAprB,EAAAwD,cAAA8nB,EAAAtrB,EAAA,CAAOurB,SAAUhrB,KAAK2oB,YAAaplB,MAAO,CACtC0nB,WAAY,OACZC,aAAc,GACdlb,MAAO,OACRmb,YAAY,4BAAQC,aAAa,KACpCP,EAAAprB,EAAAwD,cAAA,OAAKooB,IAAI,aAAa9nB,MAAO,CACzB+nB,SAAU,WACVtb,MAAO,MACPub,UAAW,OACXC,OAAQ,UAEZX,EAAAprB,EAAAwD,cAAAwoB,EAAAhsB,EAAA,CAAQ0D,QAASnD,KAAKyoB,OAAQllB,MAAO,CACjC0nB,WAAY,OACZS,UAAW,GACX1b,MAAO,KACRtM,KAAK,QAAQU,KAAK,WAJrB,wBAzIMC,aAmJPI,sBAAQ,KAAM,CACzB+kB,gBADW/kB,CAEZ2jB","file":"static/js/14.b225b3c4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Anchor, Dropdown, Menu, Icon, message, Avatar } from 'antd';\r\nimport ProTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { Logout } from '../../store/action';\r\nimport Ajax from '../../component/ajax';\r\n\r\nimport './nav.css';\r\n\r\nconst LinkAntd = Anchor.Link;\r\n\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            background: 'transparent',\r\n            top: '15%',\r\n            urlName: '/'\r\n        }\r\n        this.handleMenuClick = this.handleMenuClick.bind(this);\r\n    }\r\n    handleMenuClick(e) {\r\n        let key = parseInt(e.key);\r\n        switch (key) {\r\n            case 3:\r\n                this.logout();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    logout() {\r\n        let _self = this;\r\n        Ajax.post('/logout').then(res => {\r\n            if (res.data.msg === 200) {\r\n                _self.props.Logout({\r\n                    username: '',\r\n                    status: false\r\n                });\r\n                message.success('欢迎再次登陆');\r\n            }\r\n        }).catch(err => { console.log(err) });\r\n    }\r\n    componentDidMount() {\r\n        let _self = this;\r\n        let url = _self.props.location.pathname;\r\n        _self.setState(() => ({\r\n            urlName: url\r\n        }), () => {\r\n            if (url !== \"/\") {\r\n                _self.setState(() => ({\r\n                    background: 'rgba(72,60,50,0.8)',\r\n                    top: '0%'\r\n                }));\r\n            }\r\n            window.onscroll = function (e) {\r\n                let scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\r\n                if (scrollTop > 50 && url === \"/\") {\r\n                    _self.setState(() => ({\r\n                        background: '#252a33',\r\n                        top: '0%'\r\n                    }));\r\n                } else {\r\n                    if (url === \"/\") {\r\n                        _self.setState(() => ({\r\n                            background: 'transparent',\r\n                            top: '15%'\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        window.onscroll = null;\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.props.isLogin !== nextProps.isLogin || this.state.urlName !== nextState.urlName || this.props.getUsername !== nextProps.getUsername) {\r\n            return true;\r\n        } else {\r\n            if (nextState.background === this.state.background) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    render() {\r\n        let { getUsername, isLogin, myAvatar } = this.props;\r\n        const menu = (\r\n            <Menu onClick={this.handleMenuClick}>\r\n                <Menu.Item key=\"1\"><Link to=\"/aboutMe\">关于我</Link></Menu.Item>\r\n                <Menu.Item key=\"2\"><Link to=\"/myBasic\">个人设置</Link></Menu.Item>\r\n                <Menu.Item key=\"3\">注销</Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div style={{\r\n                background: this.state.background,\r\n                top: this.state.top\r\n            }}\r\n                className=\"Nav-page\">\r\n                <div className=\"nav-left\">\r\n                    <Avatar size='large' src={`http://localhost:8080/${myAvatar}`} icon=\"user\" />\r\n                    <Link to='/'>Welcome {getUsername ? getUsername : \", 您还未登陆\"}</Link>\r\n                </div>\r\n                <div className='nav-right'>\r\n                    <div className='nav-right-ul'>\r\n                        <Anchor>\r\n                            <LinkAntd title='内容1' href='#Summarize-index-title' />\r\n                            <LinkAntd title='内容2' href='#' />\r\n                            <LinkAntd title='内容3' href='#' />\r\n                        </Anchor>\r\n                    </div>\r\n                    <div className=\"nav-right-regist\">\r\n                        {isLogin ?\r\n                            <Dropdown overlay={menu}>\r\n                                <Button>\r\n                                    功能 <Icon type=\"down\" />\r\n                                </Button>\r\n                            </Dropdown>\r\n                            :\r\n                            <Link to='/login'>去登陆</Link>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nNav.ProTypes = {\r\n    getUsername: ProTypes.string,\r\n    isLogin: ProTypes.bool,\r\n    myAvatar: ProTypes.string\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    getUsername: state.user.username,\r\n    isLogin: state.user.status,\r\n    myAvatar: state.user.myAvatar\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    Logout\r\n})(withRouter(Nav));","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.wangEditor = factory();\n})(this, function () {\n  'use strict';\n  /*\n      poly-fill\n  */\n\n  var polyfill = function polyfill() {\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n      Object.assign = function (target, varArgs) {\n        // .length of function is 2\n        if (target == null) {\n          // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      };\n    } // IE 中兼容 Element.prototype.matches\n\n\n    if (!Element.prototype.matches) {\n      Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n        var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n            i = matches.length;\n\n        while (--i >= 0 && matches.item(i) !== this) {}\n\n        return i > -1;\n      };\n    }\n  };\n  /*\n      DOM 操作 API\n  */\n  // 根据 html 代码片段创建 dom 对象\n\n\n  function createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n  } // 是否是 DOM List\n\n\n  function isDOMList(selector) {\n    if (!selector) {\n      return false;\n    }\n\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n      return true;\n    }\n\n    return false;\n  } // 封装 document.querySelectorAll\n\n\n  function querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n\n    if (isDOMList(result)) {\n      return result;\n    } else {\n      return [result];\n    }\n  } // 记录所有的事件绑定\n\n\n  var eventList = []; // 创建构造函数\n\n  function DomElement(selector) {\n    if (!selector) {\n      return;\n    } // selector 本来就是 DomElement 对象，直接返回\n\n\n    if (selector instanceof DomElement) {\n      return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType; // 根据 selector 得出的结果（如 DOM，DOM List）\n\n    var selectorResult = [];\n\n    if (nodeType === 9) {\n      // document 节点\n      selectorResult = [selector];\n    } else if (nodeType === 1) {\n      // 单个 DOM 节点\n      selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n      // DOM List 或者数组\n      selectorResult = selector;\n    } else if (typeof selector === 'string') {\n      // 字符串\n      selector = selector.replace('/\\n/mg', '').trim();\n\n      if (selector.indexOf('<') === 0) {\n        // 如 <div>\n        selectorResult = createElemByHTML(selector);\n      } else {\n        // 如 #id .class\n        selectorResult = querySelectorAll(selector);\n      }\n    }\n\n    var length = selectorResult.length;\n\n    if (!length) {\n      // 空数组\n      return this;\n    } // 加入 DOM 节点\n\n\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      this[i] = selectorResult[i];\n    }\n\n    this.length = length;\n  } // 修改原型\n\n\n  DomElement.prototype = {\n    constructor: DomElement,\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n      var i = void 0;\n\n      for (i = 0; i < this.length; i++) {\n        var elem = this[i];\n        var result = fn.call(elem, elem, i);\n\n        if (result === false) {\n          break;\n        }\n      }\n\n      return this;\n    },\n    // clone\n    clone: function clone(deep) {\n      var cloneList = [];\n      this.forEach(function (elem) {\n        cloneList.push(elem.cloneNode(!!deep));\n      });\n      return $(cloneList);\n    },\n    // 获取第几个元素\n    get: function get(index) {\n      var length = this.length;\n\n      if (index >= length) {\n        index = index % length;\n      }\n\n      return $(this[index]);\n    },\n    // 第一个\n    first: function first() {\n      return this.get(0);\n    },\n    // 最后一个\n    last: function last() {\n      var length = this.length;\n      return this.get(length - 1);\n    },\n    // 绑定事件\n    on: function on(type, selector, fn) {\n      // selector 不为空，证明绑定事件要加代理\n      if (!fn) {\n        fn = selector;\n        selector = null;\n      } // type 是否有多个\n\n\n      var types = [];\n      types = type.split(/\\s+/);\n      return this.forEach(function (elem) {\n        types.forEach(function (type) {\n          if (!type) {\n            return;\n          } // 记录下，方便后面解绑\n\n\n          eventList.push({\n            elem: elem,\n            type: type,\n            fn: fn\n          });\n\n          if (!selector) {\n            // 无代理\n            elem.addEventListener(type, fn);\n            return;\n          } // 有代理\n\n\n          elem.addEventListener(type, function (e) {\n            var target = e.target;\n\n            if (target.matches(selector)) {\n              fn.call(target, e);\n            }\n          });\n        });\n      });\n    },\n    // 取消事件绑定\n    off: function off(type, fn) {\n      return this.forEach(function (elem) {\n        elem.removeEventListener(type, fn);\n      });\n    },\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n      if (val == null) {\n        // 获取值\n        return this[0].getAttribute(key);\n      } else {\n        // 设置值\n        return this.forEach(function (elem) {\n          elem.setAttribute(key, val);\n        });\n      }\n    },\n    // 添加 class\n    addClass: function addClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            return !!item.trim();\n          }); // 添加 class\n\n          if (arr.indexOf(className) < 0) {\n            arr.push(className);\n          } // 修改 elem.class\n\n\n          elem.className = arr.join(' ');\n        } else {\n          elem.className = className;\n        }\n      });\n    },\n    // 删除 class\n    removeClass: function removeClass(className) {\n      if (!className) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var arr = void 0;\n\n        if (elem.className) {\n          // 解析当前 className 转换为数组\n          arr = elem.className.split(/\\s/);\n          arr = arr.filter(function (item) {\n            item = item.trim(); // 删除 class\n\n            if (!item || item === className) {\n              return false;\n            }\n\n            return true;\n          }); // 修改 elem.class\n\n          elem.className = arr.join(' ');\n        }\n      });\n    },\n    // 修改 css\n    css: function css(key, val) {\n      var currentStyle = key + ':' + val + ';';\n      return this.forEach(function (elem) {\n        var style = (elem.getAttribute('style') || '').trim();\n        var styleArr = void 0,\n            resultArr = [];\n\n        if (style) {\n          // 将 style 按照 ; 拆分为数组\n          styleArr = style.split(';');\n          styleArr.forEach(function (item) {\n            // 对每项样式，按照 : 拆分为 key 和 value\n            var arr = item.split(':').map(function (i) {\n              return i.trim();\n            });\n\n            if (arr.length === 2) {\n              resultArr.push(arr[0] + ':' + arr[1]);\n            }\n          }); // 替换或者新增\n\n          resultArr = resultArr.map(function (item) {\n            if (item.indexOf(key) === 0) {\n              return currentStyle;\n            } else {\n              return item;\n            }\n          });\n\n          if (resultArr.indexOf(currentStyle) < 0) {\n            resultArr.push(currentStyle);\n          } // 结果\n\n\n          elem.setAttribute('style', resultArr.join('; '));\n        } else {\n          // style 无值\n          elem.setAttribute('style', currentStyle);\n        }\n      });\n    },\n    // 显示\n    show: function show() {\n      return this.css('display', 'block');\n    },\n    // 隐藏\n    hide: function hide() {\n      return this.css('display', 'none');\n    },\n    // 获取子节点\n    children: function children() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.children);\n    },\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n      var elem = this[0];\n\n      if (!elem) {\n        return null;\n      }\n\n      return $(elem.childNodes);\n    },\n    // 增加子节点\n    append: function append($children) {\n      return this.forEach(function (elem) {\n        $children.forEach(function (child) {\n          elem.appendChild(child);\n        });\n      });\n    },\n    // 移除当前节点\n    remove: function remove() {\n      return this.forEach(function (elem) {\n        if (elem.remove) {\n          elem.remove();\n        } else {\n          var parent = elem.parentElement;\n          parent && parent.removeChild(elem);\n        }\n      });\n    },\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n      var elem = this[0];\n      var child = $child[0];\n      return elem.contains(child);\n    },\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n      var elem = this[0];\n      return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n      var elem = this[0];\n      return elem.nodeName;\n    },\n    // 从当前元素查找\n    find: function find(selector) {\n      var elem = this[0];\n      return $(elem.querySelectorAll(selector));\n    },\n    // 获取当前元素的 text\n    text: function text(val) {\n      if (!val) {\n        // 获取 text\n        var elem = this[0];\n        return elem.innerHTML.replace(/<.*?>/g, function () {\n          return '';\n        });\n      } else {\n        // 设置 text\n        return this.forEach(function (elem) {\n          elem.innerHTML = val;\n        });\n      }\n    },\n    // 获取 html\n    html: function html(value) {\n      var elem = this[0];\n\n      if (value == null) {\n        return elem.innerHTML;\n      } else {\n        elem.innerHTML = value;\n        return this;\n      }\n    },\n    // 获取 value\n    val: function val() {\n      var elem = this[0];\n      return elem.value.trim();\n    },\n    // focus\n    focus: function focus() {\n      return this.forEach(function (elem) {\n        elem.focus();\n      });\n    },\n    // parent\n    parent: function parent() {\n      var elem = this[0];\n      return $(elem.parentElement);\n    },\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n      var results = document.querySelectorAll(selector);\n      var length = results.length;\n\n      if (!length) {\n        // 传入的 selector 无效\n        return null;\n      }\n\n      var elem = _currentElem || this[0];\n\n      if (elem.nodeName === 'BODY') {\n        return null;\n      }\n\n      var parent = elem.parentElement;\n      var i = void 0;\n\n      for (i = 0; i < length; i++) {\n        if (parent === results[i]) {\n          // 找到，并返回\n          return $(parent);\n        }\n      } // 继续查找\n\n\n      return this.parentUntil(selector, parent);\n    },\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n      if ($elem.nodeType === 1) {\n        return this[0] === $elem;\n      } else {\n        return this[0] === $elem[0];\n      }\n    },\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n        parent.insertBefore(elem, referenceNode);\n      });\n    },\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n      var $referenceNode = $(selector);\n      var referenceNode = $referenceNode[0];\n\n      if (!referenceNode) {\n        return this;\n      }\n\n      return this.forEach(function (elem) {\n        var parent = referenceNode.parentNode;\n\n        if (parent.lastChild === referenceNode) {\n          // 最后一个元素\n          parent.appendChild(elem);\n        } else {\n          // 不是最后一个元素\n          parent.insertBefore(elem, referenceNode.nextSibling);\n        }\n      });\n    }\n  }; // new 一个对象\n\n  function $(selector) {\n    return new DomElement(selector);\n  } // 解绑所有事件，用于销毁编辑器\n\n\n  $.offAll = function () {\n    eventList.forEach(function (item) {\n      var elem = item.elem;\n      var type = item.type;\n      var fn = item.fn; // 解绑\n\n      elem.removeEventListener(type, fn);\n    });\n  };\n  /*\n      配置信息\n  */\n\n\n  var config = {\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n    // 表情\n    emotions: [{\n      // tab 的标题\n      title: '默认',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        alt: '[坏笑]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n      }, {\n        alt: '[舔屏]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n      }, {\n        alt: '[污]',\n        src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n      }]\n    }, {\n      // tab 的标题\n      title: '新浪',\n      // type -> 'emoji' / 'image'\n      type: 'image',\n      // content -> 数组\n      content: [{\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n        alt: '[草泥马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n        alt: '[神马]'\n      }, {\n        src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n        alt: '[浮云]'\n      }]\n    }, {\n      // tab 的标题\n      title: 'emoji',\n      // type -> 'emoji' / 'image'\n      type: 'emoji',\n      // content -> 数组\n      content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n    // 编辑区域的 z-index\n    zIndex: 10000,\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n      // text 是插入的文字\n      // link 是插入的链接\n      return true; // 返回 true 即表示成功\n      // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n      // src 即图片的地址\n      return true; // 返回 true 即表示成功\n      // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n      // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      return content;\n    },\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {// console.log(url)  // url 即插入图片的地址\n    },\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n    // 自定义配置 filename\n    uploadFileName: '',\n    // 上传图片的自定义参数\n    uploadImgParams: {// token: 'abcdef12345'\n    },\n    // 上传图片的自定义header\n    uploadImgHeaders: {// 'Accept': 'text/x-json'\n    },\n    // 配置 XHR withCredentials\n    withCredentials: false,\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n    // 上传图片 hook \n    uploadImgHooks: {\n      // customInsert: function (insertLinkImg, result, editor) {\n      //     console.log('customInsert')\n      //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n      //     const data = result.data1 || []\n      //     data.forEach(link => {\n      //         insertLinkImg(link)\n      //     })\n      // },\n      before: function before(xhr, editor, files) {// 图片上传之前触发\n        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n        // return {\n        //     prevent: true,\n        //     msg: '放弃上传'\n        // }\n      },\n      success: function success(xhr, editor, result) {// 图片上传并返回结果，图片插入成功之后触发\n      },\n      fail: function fail(xhr, editor, result) {// 图片上传并返回结果，但图片插入错误时触发\n      },\n      error: function error(xhr, editor) {// 图片上传出错时触发\n      },\n      timeout: function timeout(xhr, editor) {// 图片上传超时时触发\n      }\n    },\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n  };\n  /*\n      工具\n  */\n  // 和 UA 相关的属性\n\n  var UA = {\n    _ua: navigator.userAgent,\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n      var reg = /webkit/i;\n      return reg.test(this._ua);\n    },\n    // 是否 IE\n    isIE: function isIE() {\n      return 'ActiveXObject' in window;\n    }\n  }; // 遍历对象\n\n  function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n\n    for (key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        result = fn.call(obj, key, obj[key]);\n\n        if (result === false) {\n          break;\n        }\n      }\n    }\n  } // 遍历类数组\n\n\n  function arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n\n    for (i = 0; i < length; i++) {\n      item = fakeArr[i];\n      result = fn.call(fakeArr, item, i);\n\n      if (result === false) {\n        break;\n      }\n    }\n  } // 获取随机数\n\n\n  function getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n  } // 替换 html 特殊字符\n\n\n  function replaceHtmlSymbol(html) {\n    if (html == null) {\n      return '';\n    }\n\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n  } // 返回百分比的格式\n  // 判断是不是 function\n\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n  /*\n      bold-menu\n  */\n  // 构造函数\n\n\n  function Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Bold.prototype = {\n    constructor: Bold,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 bold 命令\n\n\n      editor.cmd.do('bold');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('bold')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      替换多语言\n   */\n\n  var replaceLang = function replaceLang(editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n    langArgs.forEach(function (item) {\n      var reg = item.reg;\n      var val = item.val;\n\n      if (reg.test(result)) {\n        result = result.replace(reg, function () {\n          return val;\n        });\n      }\n    });\n    return result;\n  };\n  /*\n      droplist\n  */\n\n\n  var _emptyFn = function _emptyFn() {}; // 构造函数\n\n\n  function DropList(menu, opt) {\n    var _this = this; // droplist 所依附的菜单\n\n\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt; // 容器\n\n    var $container = $('<div class=\"w-e-droplist\"></div>'); // 标题\n\n    var $title = opt.$title;\n    var titleHtml = void 0;\n\n    if ($title) {\n      // 替换多语言\n      titleHtml = $title.html();\n      titleHtml = replaceLang(editor, titleHtml);\n      $title.html(titleHtml);\n      $title.addClass('w-e-dp-title');\n      $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n\n    var onClick = opt.onClick || _emptyFn; // 加入 DOM 并绑定事件\n\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n      var $elem = item.$elem; // 替换多语言\n\n      var elemHtml = $elem.html();\n      elemHtml = replaceLang(editor, elemHtml);\n      $elem.html(elemHtml);\n      var value = item.value;\n      var $li = $('<li class=\"w-e-item\"></li>');\n\n      if ($elem) {\n        $li.append($elem);\n        $list.append($li);\n        $li.on('click', function (e) {\n          onClick(value); // 隐藏\n\n          _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n          }, 0);\n        });\n      }\n    }); // 绑定隐藏事件\n\n    $container.on('mouseleave', function (e) {\n      _this.hideTimeoutId = setTimeout(function () {\n        _this.hide();\n      }, 0);\n    }); // 记录属性\n\n    this.$container = $container; // 基本属性\n\n    this._rendered = false;\n    this._show = false;\n  } // 原型\n\n\n  DropList.prototype = {\n    constructor: DropList,\n    // 显示（插入DOM）\n    show: function show() {\n      if (this.hideTimeoutId) {\n        // 清除之前的定时隐藏\n        clearTimeout(this.hideTimeoutId);\n      }\n\n      var menu = this.menu;\n      var $menuELem = menu.$elem;\n      var $container = this.$container;\n\n      if (this._show) {\n        return;\n      }\n\n      if (this._rendered) {\n        // 显示\n        $container.show();\n      } else {\n        // 加入 DOM 之前先定位位置\n        var menuHeight = $menuELem.getSizeData().height || 0;\n        var width = this.opt.width || 100; // 默认为 100\n\n        $container.css('margin-top', menuHeight + 'px').css('width', width + 'px'); // 加入到 DOM\n\n        $menuELem.append($container);\n        this._rendered = true;\n      } // 修改属性\n\n\n      this._show = true;\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      if (this.showTimeoutId) {\n        // 清除之前的定时显示\n        clearTimeout(this.showTimeoutId);\n      }\n\n      var $container = this.$container;\n\n      if (!this._show) {\n        return;\n      } // 隐藏并需改属性\n\n\n      $container.hide();\n      this._show = false;\n    }\n  };\n  /*\n      menu - header\n  */\n  // 构造函数\n\n  function Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>设置标题</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<h1>H1</h1>'),\n        value: '<h1>'\n      }, {\n        $elem: $('<h2>H2</h2>'),\n        value: '<h2>'\n      }, {\n        $elem: $('<h3>H3</h3>'),\n        value: '<h3>'\n      }, {\n        $elem: $('<h4>H4</h4>'),\n        value: '<h4>'\n      }, {\n        $elem: $('<h5>H5</h5>'),\n        value: '<h5>'\n      }, {\n        $elem: $('<p>正文</p>'),\n        value: '<p>'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 Head 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Head.prototype = {\n    constructor: Head,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if (editor.$textElem.equal($selectionElem)) {\n        // 不能选中多行来设置标题，否则会出现问题\n        // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n        return;\n      }\n\n      editor.cmd.do('formatBlock', value);\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^h/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - fontSize\n  */\n  // 构造函数\n\n  function FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 160,\n      $title: $('<p>字号</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span style=\"font-size: x-small;\">x-small</span>'),\n        value: '1'\n      }, {\n        $elem: $('<span style=\"font-size: small;\">small</span>'),\n        value: '2'\n      }, {\n        $elem: $('<span>normal</span>'),\n        value: '3'\n      }, {\n        $elem: $('<span style=\"font-size: large;\">large</span>'),\n        value: '4'\n      }, {\n        $elem: $('<span style=\"font-size: x-large;\">x-large</span>'),\n        value: '5'\n      }, {\n        $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'),\n        value: '6'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontSize 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontSize.prototype = {\n    constructor: FontSize,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontSize', value);\n    }\n  };\n  /*\n      menu - fontName\n  */\n  // 构造函数\n\n  function FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 获取配置的字体\n\n    var config = editor.config;\n    var fontNames = config.fontNames || []; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>字体</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: fontNames.map(function (fontName) {\n        return {\n          $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'),\n          value: fontName\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 FontName 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  FontName.prototype = {\n    constructor: FontName,\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('fontName', value);\n    }\n  };\n  /*\n      panel\n  */\n\n  var emptyFn = function emptyFn() {}; // 记录已经显示 panel 的菜单\n\n\n  var _isCreatedPanelMenus = []; // 构造函数\n\n  function Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n  } // 原型\n\n\n  Panel.prototype = {\n    constructor: Panel,\n    // 显示（插入DOM）\n    show: function show() {\n      var _this = this;\n\n      var menu = this.menu;\n\n      if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n        // 该菜单已经创建了 panel 不能再创建\n        return;\n      }\n\n      var editor = menu.editor;\n      var $body = $('body');\n      var $textContainerElem = editor.$textContainerElem;\n      var opt = this.opt; // panel 的容器\n\n      var $container = $('<div class=\"w-e-panel-container\"></div>');\n      var width = opt.width || 300; // 默认 300px\n\n      $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px'); // 添加关闭按钮\n\n      var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n      $container.append($closeBtn);\n      $closeBtn.on('click', function () {\n        _this.hide();\n      }); // 准备 tabs 容器\n\n      var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n      var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n      $container.append($tabTitleContainer).append($tabContentContainer); // 设置高度\n\n      var height = opt.height;\n\n      if (height) {\n        $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n      } // tabs\n\n\n      var tabs = opt.tabs || [];\n      var tabTitleArr = [];\n      var tabContentArr = [];\n      tabs.forEach(function (tab, tabIndex) {\n        if (!tab) {\n          return;\n        }\n\n        var title = tab.title || '';\n        var tpl = tab.tpl || ''; // 替换多语言\n\n        title = replaceLang(editor, title);\n        tpl = replaceLang(editor, tpl); // 添加到 DOM\n\n        var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n        $tabTitleContainer.append($title);\n        var $content = $(tpl);\n        $tabContentContainer.append($content); // 记录到内存\n\n        $title._index = tabIndex;\n        tabTitleArr.push($title);\n        tabContentArr.push($content); // 设置 active 项\n\n        if (tabIndex === 0) {\n          $title._active = true;\n          $title.addClass('w-e-active');\n        } else {\n          $content.hide();\n        } // 绑定 tab 的事件\n\n\n        $title.on('click', function (e) {\n          if ($title._active) {\n            return;\n          } // 隐藏所有的 tab\n\n\n          tabTitleArr.forEach(function ($title) {\n            $title._active = false;\n            $title.removeClass('w-e-active');\n          });\n          tabContentArr.forEach(function ($content) {\n            $content.hide();\n          }); // 显示当前的 tab\n\n          $title._active = true;\n          $title.addClass('w-e-active');\n          $content.show();\n        });\n      }); // 绑定关闭事件\n\n      $container.on('click', function (e) {\n        // 点击时阻止冒泡\n        e.stopPropagation();\n      });\n      $body.on('click', function (e) {\n        _this.hide();\n      }); // 添加到 DOM\n\n      $textContainerElem.append($container); // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n\n      tabs.forEach(function (tab, index) {\n        if (!tab) {\n          return;\n        }\n\n        var events = tab.events || [];\n        events.forEach(function (event) {\n          var selector = event.selector;\n          var type = event.type;\n          var fn = event.fn || emptyFn;\n          var $content = tabContentArr[index];\n          $content.find(selector).on(type, function (e) {\n            e.stopPropagation();\n            var needToHide = fn(e); // 执行完事件之后，是否要关闭 panel\n\n            if (needToHide) {\n              _this.hide();\n            }\n          });\n        });\n      }); // focus 第一个 elem\n\n      var $inputs = $container.find('input[type=text],textarea');\n\n      if ($inputs.length) {\n        $inputs.get(0).focus();\n      } // 添加到属性\n\n\n      this.$container = $container; // 隐藏其他 panel\n\n      this._hideOtherPanels(); // 记录该 menu 已经创建了 panel\n\n\n      _isCreatedPanelMenus.push(menu);\n    },\n    // 隐藏（移除DOM）\n    hide: function hide() {\n      var menu = this.menu;\n      var $container = this.$container;\n\n      if ($container) {\n        $container.remove();\n      } // 将该 menu 记录中移除\n\n\n      _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n        if (item === menu) {\n          return false;\n        } else {\n          return true;\n        }\n      });\n    },\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n      if (!_isCreatedPanelMenus.length) {\n        return;\n      }\n\n      _isCreatedPanelMenus.forEach(function (menu) {\n        var panel = menu.panel || {};\n\n        if (panel.hide) {\n          panel.hide();\n        }\n      });\n    }\n  };\n  /*\n      menu - link\n  */\n  // 构造函数\n\n  function Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Link.prototype = {\n    constructor: Link,\n    // 点击事件\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $linkelem = void 0;\n\n      if (this._active) {\n        // 当前选区在链接里面\n        $linkelem = editor.selection.getSelectionContainerElem();\n\n        if (!$linkelem) {\n          return;\n        } // 将该元素都包含在选取之内，以便后面整体替换\n\n\n        editor.selection.createRangeByElem($linkelem);\n        editor.selection.restoreSelection(); // 显示 panel\n\n        this._createPanel($linkelem.text(), $linkelem.attr('href'));\n      } else {\n        // 当前选区不在链接里面\n        if (editor.selection.isSelectionEmpty()) {\n          // 选区是空的，未选中内容\n          this._createPanel('', '');\n        } else {\n          // 选中内容了\n          this._createPanel(editor.selection.getSelectionText(), '');\n        }\n      }\n    },\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n      var _this = this; // panel 中需要用到的id\n\n\n      var inputLinkId = getRandom('input-link');\n      var inputTextId = getRandom('input-text');\n      var btnOkId = getRandom('btn-ok');\n      var btnDelId = getRandom('btn-del'); // 是否显示“删除链接”\n\n      var delBtnDisplay = this._active ? 'inline-block' : 'none'; // 初始化并显示 panel\n\n      var panel = new Panel(this, {\n        width: 300,\n        // panel 中可包含多个 tab\n        tabs: [{\n          // tab 的标题\n          title: '链接',\n          // 模板\n          tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + \"\\\" placeholder=\\\"\\u94FE\\u63A5\\u6587\\u5B57\\\"/></td>\\n                            <input id=\\\"\" + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                                <button id=\\\"\" + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + \"\\\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>\",\n          // 事件绑定\n          events: [// 插入链接\n          {\n            selector: '#' + btnOkId,\n            type: 'click',\n            fn: function fn() {\n              // 执行插入链接\n              var $link = $('#' + inputLinkId);\n              var $text = $('#' + inputTextId);\n              var link = $link.val();\n              var text = $text.val();\n\n              _this._insertLink(text, link); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, // 删除链接\n          {\n            selector: '#' + btnDelId,\n            type: 'click',\n            fn: function fn() {\n              // 执行删除链接\n              _this._delLink(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // tab end\n\n        }] // tabs end\n\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 删除当前链接\n    _delLink: function _delLink() {\n      if (!this._active) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var selectionText = editor.selection.getSelectionText();\n      editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n      var editor = this.editor;\n      var config = editor.config;\n      var linkCheck = config.linkCheck;\n      var checkResult = true; // 默认为 true\n\n      if (linkCheck && typeof linkCheck === 'function') {\n        checkResult = linkCheck(text, link);\n      }\n\n      if (checkResult === true) {\n        editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n      } else {\n        alert(checkResult);\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      if ($selectionELem.getNodeName() === 'A') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      italic-menu\n  */\n  // 构造函数\n\n  function Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Italic.prototype = {\n    constructor: Italic,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 italic 命令\n\n\n      editor.cmd.do('italic');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('italic')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      redo-menu\n  */\n  // 构造函数\n\n  function Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Redo.prototype = {\n    constructor: Redo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 redo 命令\n\n      editor.cmd.do('redo');\n    }\n  };\n  /*\n      strikeThrough-menu\n  */\n  // 构造函数\n\n  function StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  StrikeThrough.prototype = {\n    constructor: StrikeThrough,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 strikeThrough 命令\n\n\n      editor.cmd.do('strikeThrough');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('strikeThrough')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      underline-menu\n  */\n  // 构造函数\n\n  function Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Underline.prototype = {\n    constructor: Underline,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor;\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n      if (isSeleEmpty) {\n        // 选区是空的，插入并选中一个“空白”\n        editor.selection.createEmptyRange();\n      } // 执行 underline 命令\n\n\n      editor.cmd.do('underline');\n\n      if (isSeleEmpty) {\n        // 需要将选取折叠起来\n        editor.selection.collapseRange();\n        editor.selection.restoreSelection();\n      }\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('underline')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      undo-menu\n  */\n  // 构造函数\n\n  function Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Undo.prototype = {\n    constructor: Undo,\n    // 点击事件\n    onClick: function onClick(e) {\n      // 点击菜单将触发这里\n      var editor = this.editor; // 执行 undo 命令\n\n      editor.cmd.do('undo');\n    }\n  };\n  /*\n      menu - list\n  */\n  // 构造函数\n\n  function List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>设置列表</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'),\n        value: 'insertOrderedList'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'),\n        value: 'insertUnorderedList'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  List.prototype = {\n    constructor: List,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      editor.selection.restoreSelection();\n\n      if (editor.cmd.queryCommandState(value)) {\n        return;\n      }\n\n      editor.cmd.do(value); // 验证列表是否被包裹在 <p> 之内\n\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n\n      if ($selectionElem.getNodeName() === 'LI') {\n        $selectionElem = $selectionElem.parent();\n      }\n\n      if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n        return;\n      }\n\n      if ($selectionElem.equal($textElem)) {\n        // 证明是顶级标签，没有被 <p> 包裹\n        return;\n      }\n\n      var $parent = $selectionElem.parent();\n\n      if ($parent.equal($textElem)) {\n        // $parent 是顶级标签，不能删除\n        return;\n      }\n\n      $selectionElem.insertAfter($parent);\n      $parent.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - justify\n  */\n  // 构造函数\n\n  function Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist'; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 100,\n      $title: $('<p>对齐方式</p>'),\n      type: 'list',\n      // droplist 以列表形式展示\n      list: [{\n        $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'),\n        value: 'justifyLeft'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'),\n        value: 'justifyCenter'\n      }, {\n        $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'),\n        value: 'justifyRight'\n      }],\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 List 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  Justify.prototype = {\n    constructor: Justify,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do(value);\n    }\n  };\n  /*\n      menu - Forecolor\n  */\n  // 构造函数\n\n  function ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>文字颜色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 ForeColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  ForeColor.prototype = {\n    constructor: ForeColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('foreColor', value);\n    }\n  };\n  /*\n      menu - BackColor\n  */\n  // 构造函数\n\n  function BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist'; // 获取配置的颜色\n\n    var config = editor.config;\n    var colors = config.colors || []; // 当前是否 active 状态\n\n    this._active = false; // 初始化 droplist\n\n    this.droplist = new DropList(this, {\n      width: 120,\n      $title: $('<p>背景色</p>'),\n      type: 'inline-block',\n      // droplist 内容以 block 形式展示\n      list: colors.map(function (color) {\n        return {\n          $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'),\n          value: color\n        };\n      }),\n      onClick: function onClick(value) {\n        // 注意 this 是指向当前的 BackColor 对象\n        _this._command(value);\n      }\n    });\n  } // 原型\n\n\n  BackColor.prototype = {\n    constructor: BackColor,\n    // 执行命令\n    _command: function _command(value) {\n      var editor = this.editor;\n      editor.cmd.do('backColor', value);\n    }\n  };\n  /*\n      menu - quote\n  */\n  // 构造函数\n\n  function Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Quote.prototype = {\n    constructor: Quote,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $selectionElem = editor.selection.getSelectionContainerElem();\n      var nodeName = $selectionElem.getNodeName();\n\n      if (!UA.isIE()) {\n        if (nodeName === 'BLOCKQUOTE') {\n          // 撤销 quote\n          editor.cmd.do('formatBlock', '<P>');\n        } else {\n          // 转换为 quote\n          editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n        }\n\n        return;\n      } // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n\n\n      var content = void 0,\n          $targetELem = void 0;\n\n      if (nodeName === 'P') {\n        // 将 P 转换为 quote\n        content = $selectionElem.text();\n        $targetELem = $('<blockquote>' + content + '</blockquote>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n        return;\n      }\n\n      if (nodeName === 'BLOCKQUOTE') {\n        // 撤销 quote\n        content = $selectionElem.text();\n        $targetELem = $('<p>' + content + '</p>');\n        $targetELem.insertAfter($selectionElem);\n        $selectionElem.remove();\n      }\n    },\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var reg = /^BLOCKQUOTE$/i;\n      var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n\n      if (reg.test(cmdValue)) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - code\n  */\n  // 构造函数\n\n  function Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Code.prototype = {\n    constructor: Code,\n    onClick: function onClick(e) {\n      var editor = this.editor;\n      var $startElem = editor.selection.getSelectionStartElem();\n      var $endElem = editor.selection.getSelectionEndElem();\n      var isSeleEmpty = editor.selection.isSelectionEmpty();\n      var selectionText = editor.selection.getSelectionText();\n      var $code = void 0;\n\n      if (!$startElem.equal($endElem)) {\n        // 跨元素选择，不做处理\n        editor.selection.restoreSelection();\n        return;\n      }\n\n      if (!isSeleEmpty) {\n        // 选取不是空，用 <code> 包裹即可\n        $code = $('<code>' + selectionText + '</code>');\n        editor.cmd.do('insertElem', $code);\n        editor.selection.createRangeByElem($code, false);\n        editor.selection.restoreSelection();\n        return;\n      } // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n\n\n      if (this._active) {\n        // 选中状态，将编辑内容\n        this._createPanel($startElem.html());\n      } else {\n        // 未选中状态，将创建内容\n        this._createPanel();\n      }\n    },\n    _createPanel: function _createPanel(value) {\n      var _this = this; // value - 要编辑的内容\n\n\n      value = value || '';\n      var type = !value ? 'new' : 'edit';\n      var textId = getRandom('texxt');\n      var btnId = getRandom('btn');\n      var panel = new Panel(this, {\n        width: 500,\n        // 一个 Panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入代码',\n          // 模板\n          tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>\",\n          // 事件绑定\n          events: [// 插入代码\n          {\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textId);\n              var text = $text.val() || $text.html();\n              text = replaceHtmlSymbol(text);\n\n              if (type === 'new') {\n                // 新插入\n                _this._insertCode(text);\n              } else {\n                // 编辑更新\n                _this._updateCode(text);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // new Panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      $selectionELem.html(value);\n      editor.selection.restoreSelection();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $parentElem = $selectionELem.parent();\n\n      if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - emoticon\n  */\n  // 构造函数\n\n  function Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Emoticon.prototype = {\n    constructor: Emoticon,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config; // 获取表情配置\n\n      var emotions = config.emotions || []; // 创建表情 dropPanel 的配置\n\n      var tabConfig = [];\n      emotions.forEach(function (emotData) {\n        var emotType = emotData.type;\n        var content = emotData.content || []; // 这一组表情最终拼接出来的 html\n\n        var faceHtml = ''; // emoji 表情\n\n        if (emotType === 'emoji') {\n          content.forEach(function (item) {\n            if (item) {\n              faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n            }\n          });\n        } // 图片表情\n\n\n        if (emotType === 'image') {\n          content.forEach(function (item) {\n            var src = item.src;\n            var alt = item.alt;\n\n            if (src) {\n              // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n              faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n            }\n          });\n        }\n\n        tabConfig.push({\n          title: emotData.title,\n          tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n          events: [{\n            selector: 'span.w-e-item',\n            type: 'click',\n            fn: function fn(e) {\n              var target = e.target;\n              var $target = $(target);\n              var nodeName = $target.getNodeName();\n              var insertHtml = void 0;\n\n              if (nodeName === 'IMG') {\n                // 插入图片\n                insertHtml = $target.parent().html();\n              } else {\n                // 插入 emoji\n                insertHtml = '<span>' + $target.html() + '</span>';\n              }\n\n              _this._insert(insertHtml); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        });\n      });\n      var panel = new Panel(this, {\n        width: 300,\n        height: 200,\n        // 一个 Panel 包含多个 tab\n        tabs: tabConfig\n      }); // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', emotHtml);\n    }\n  };\n  /*\n      menu - table\n  */\n  // 构造函数\n\n  function Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Table.prototype = {\n    constructor: Table,\n    onClick: function onClick() {\n      if (this._active) {\n        // 编辑现有表格\n        this._createEditPanel();\n      } else {\n        // 插入新表格\n        this._createInsertPanel();\n      }\n    },\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n      var _this = this; // 用到的 id\n\n\n      var btnInsertId = getRandom('btn');\n      var textRowNum = getRandom('row');\n      var textColNum = getRandom('col');\n      var panel = new Panel(this, {\n        width: 250,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '插入表格',\n          // 模板\n          tpl: \"<div>\\n                        <p style=\\\"text-align:left; padding:5px 0;\\\">\\n                            \\u521B\\u5EFA\\n                            <input id=\\\"\" + textRowNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u884C\\n                            <input id=\\\"\" + textColNum + \"\\\" type=\\\"text\\\" value=\\\"5\\\" style=\\\"width:40px;text-align:center;\\\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnInsertId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 点击按钮，插入表格\n            selector: '#' + btnInsertId,\n            type: 'click',\n            fn: function fn() {\n              var rowNum = parseInt($('#' + textRowNum).val());\n              var colNum = parseInt($('#' + textColNum).val());\n\n              if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                // form 数据有效\n                _this._insert(rowNum, colNum);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 展示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n      // 拼接 table 模板\n      var r = void 0,\n          c = void 0;\n      var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n\n      for (r = 0; r < rowNum; r++) {\n        html += '<tr>';\n\n        if (r === 0) {\n          for (c = 0; c < colNum; c++) {\n            html += '<th>&nbsp;</th>';\n          }\n        } else {\n          for (c = 0; c < colNum; c++) {\n            html += '<td>&nbsp;</td>';\n          }\n        }\n\n        html += '</tr>';\n      }\n\n      html += '</table><p><br></p>'; // 执行命令\n\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', html); // 防止 firefox 下出现 resize 的控制点\n\n      editor.cmd.do('enableObjectResizing', false);\n      editor.cmd.do('enableInlineTableEditing', false);\n    },\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n      var _this2 = this; // 可用的 id\n\n\n      var addRowBtnId = getRandom('add-row');\n      var addColBtnId = getRandom('add-col');\n      var delRowBtnId = getRandom('del-row');\n      var delColBtnId = getRandom('del-col');\n      var delTableBtnId = getRandom('del-table'); // 创建 panel 对象\n\n      var panel = new Panel(this, {\n        width: 320,\n        // panel 包含多个 tab\n        tabs: [{\n          // 标题\n          title: '编辑表格',\n          // 模板\n          tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\\\"\" + delRowBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\\\"\" + addColBtnId + \"\\\" class=\\\"left\\\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\\\"\" + delColBtnId + \"\\\" class=\\\"red left\\\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + delTableBtnId + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            // 增加行\n            selector: '#' + addRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 增加列\n            selector: '#' + addColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._addCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除行\n            selector: '#' + delRowBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delRow(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除列\n            selector: '#' + delColBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delCol(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }, {\n            // 删除表格\n            selector: '#' + delTableBtnId,\n            type: 'click',\n            fn: function fn() {\n              _this2._delTable(); // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }]\n        }]\n      }); // 显示 panel\n\n      panel.show();\n    },\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n      var result = {};\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName !== 'TD' && nodeName !== 'TH') {\n        return;\n      } // 获取 td index\n\n\n      var $tr = $selectionELem.parent();\n      var $tds = $tr.children();\n      var tdLength = $tds.length;\n      $tds.forEach(function (td, index) {\n        if (td === $selectionELem[0]) {\n          // 记录并跳出循环\n          result.td = {\n            index: index,\n            elem: td,\n            length: tdLength\n          };\n          return false;\n        }\n      }); // 获取 tr index\n\n      var $tbody = $tr.parent();\n      var $trs = $tbody.children();\n      var trLength = $trs.length;\n      $trs.forEach(function (tr, index) {\n        if (tr === $tr[0]) {\n          // 记录并跳出循环\n          result.tr = {\n            index: index,\n            elem: tr,\n            length: trLength\n          };\n          return false;\n        }\n      }); // 返回结果\n\n      return result;\n    },\n    // 增加行\n    _addRow: function _addRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      var tdData = locationData.td;\n      var tdLength = tdData.length; // 拼接即将插入的字符串\n\n      var newTr = document.createElement('tr');\n      var tpl = '',\n          i = void 0;\n\n      for (i = 0; i < tdLength; i++) {\n        tpl += '<td>&nbsp;</td>';\n      }\n\n      newTr.innerHTML = tpl; // 插入\n\n      $(newTr).insertAfter($currentTr);\n    },\n    // 增加列\n    _addCol: function _addCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex);\n        var name = $currentTd.getNodeName().toLowerCase(); // new 一个 td，并插入\n\n        var newTd = document.createElement(name);\n        $(newTd).insertAfter($currentTd);\n      });\n    },\n    // 删除行\n    _delRow: function _delRow() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var $currentTr = $(trData.elem);\n      $currentTr.remove();\n    },\n    // 删除列\n    _delCol: function _delCol() {\n      // 获取当前单元格的位置信息\n      var locationData = this._getLocationData();\n\n      if (!locationData) {\n        return;\n      }\n\n      var trData = locationData.tr;\n      var tdData = locationData.td;\n      var tdIndex = tdData.index;\n      var $currentTr = $(trData.elem);\n      var $trParent = $currentTr.parent();\n      var $trs = $trParent.children(); // 遍历所有行\n\n      $trs.forEach(function (tr) {\n        var $tr = $(tr);\n        var $tds = $tr.children();\n        var $currentTd = $tds.get(tdIndex); // 删除\n\n        $currentTd.remove();\n      });\n    },\n    // 删除表格\n    _delTable: function _delTable() {\n      var editor = this.editor;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var $table = $selectionELem.parentUntil('table');\n\n      if (!$table) {\n        return;\n      }\n\n      $table.remove();\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n      var $selectionELem = editor.selection.getSelectionContainerElem();\n\n      if (!$selectionELem) {\n        return;\n      }\n\n      var nodeName = $selectionELem.getNodeName();\n\n      if (nodeName === 'TD' || nodeName === 'TH') {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      menu - video\n  */\n  // 构造函数\n\n  function Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Video.prototype = {\n    constructor: Video,\n    onClick: function onClick() {\n      this._createPanel();\n    },\n    _createPanel: function _createPanel() {\n      var _this = this; // 创建 id\n\n\n      var textValId = getRandom('text-val');\n      var btnId = getRandom('btn'); // 创建 panel\n\n      var panel = new Panel(this, {\n        width: 350,\n        // 一个 panel 多个 tab\n        tabs: [{\n          // 标题\n          title: '插入视频',\n          // 模板\n          tpl: '<div>\\n                        <input id=\"' + textValId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\\\"/>\\n                        <div class=\\\"w-e-button-container\\\">\\n                            <button id=\\\"\" + btnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>\",\n          // 事件绑定\n          events: [{\n            selector: '#' + btnId,\n            type: 'click',\n            fn: function fn() {\n              var $text = $('#' + textValId);\n              var val = $text.val().trim(); // 测试用视频地址\n              // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n              if (val) {\n                // 插入视频\n                _this._insert(val);\n              } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n              return true;\n            }\n          }] // first tab end\n\n        }] // tabs end\n\n      }); // panel end\n      // 显示 panel\n\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 插入视频\n    _insert: function _insert(val) {\n      var editor = this.editor;\n      editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n  };\n  /*\n      menu - img\n  */\n  // 构造函数\n\n  function Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel'; // 当前是否 active 状态\n\n    this._active = false;\n  } // 原型\n\n\n  Image.prototype = {\n    constructor: Image,\n    onClick: function onClick() {\n      var editor = this.editor;\n      var config = editor.config;\n\n      if (config.qiniu) {\n        return;\n      }\n\n      if (this._active) {\n        this._createEditPanel();\n      } else {\n        this._createInsertPanel();\n      }\n    },\n    _createEditPanel: function _createEditPanel() {\n      var editor = this.editor; // id\n\n      var width30 = getRandom('width-30');\n      var width50 = getRandom('width-50');\n      var width100 = getRandom('width-100');\n      var delBtn = getRandom('del-btn'); // tab 配置\n\n      var tabsConfig = [{\n        title: '编辑图片',\n        tpl: \"<div>\\n                    <div class=\\\"w-e-button-container\\\" style=\\\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\\\">\\n                        <span style=\\\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\\\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\\\"\" + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + \"\\\" class=\\\"gray left\\\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>\",\n        events: [{\n          selector: '#' + width30,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '30%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width50,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '50%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + width100,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.css('max-width', '100%');\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }, {\n          selector: '#' + delBtn,\n          type: 'click',\n          fn: function fn() {\n            var $img = editor._selectedImg;\n\n            if ($img) {\n              $img.remove();\n            } // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n\n\n            return true;\n          }\n        }]\n      }]; // 创建 panel 并显示\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfig\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    _createInsertPanel: function _createInsertPanel() {\n      var editor = this.editor;\n      var uploadImg = editor.uploadImg;\n      var config = editor.config; // id\n\n      var upTriggerId = getRandom('up-trigger');\n      var upFileId = getRandom('up-file');\n      var linkUrlId = getRandom('link-url');\n      var linkBtnId = getRandom('link-btn'); // tabs 的配置\n\n      var tabsConfig = [{\n        title: '上传图片',\n        tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n        events: [{\n          // 触发选择图片\n          selector: '#' + upTriggerId,\n          type: 'click',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (fileElem) {\n              fileElem.click();\n            } else {\n              // 返回 true 可关闭 panel\n              return true;\n            }\n          }\n        }, {\n          // 选择图片完毕\n          selector: '#' + upFileId,\n          type: 'change',\n          fn: function fn() {\n            var $file = $('#' + upFileId);\n            var fileElem = $file[0];\n\n            if (!fileElem) {\n              // 返回 true 可关闭 panel\n              return true;\n            } // 获取选中的 file 对象列表\n\n\n            var fileList = fileElem.files;\n\n            if (fileList.length) {\n              uploadImg.uploadImg(fileList);\n            } // 返回 true 可关闭 panel\n\n\n            return true;\n          }\n        }]\n      }, // first tab end\n      {\n        title: '网络图片',\n        tpl: '<div>\\n                    <input id=\"' + linkUrlId + \"\\\" type=\\\"text\\\" class=\\\"block\\\" placeholder=\\\"\\u56FE\\u7247\\u94FE\\u63A5\\\"/></td>\\n                    <div class=\\\"w-e-button-container\\\">\\n                        <button id=\\\"\" + linkBtnId + \"\\\" class=\\\"right\\\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>\",\n        events: [{\n          selector: '#' + linkBtnId,\n          type: 'click',\n          fn: function fn() {\n            var $linkUrl = $('#' + linkUrlId);\n            var url = $linkUrl.val().trim();\n\n            if (url) {\n              uploadImg.insertLinkImg(url);\n            } // 返回 true 表示函数执行结束之后关闭 panel\n\n\n            return true;\n          }\n        }] // second tab end\n\n      }]; // tabs end\n      // 判断 tabs 的显示\n\n      var tabsConfigResult = [];\n\n      if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n        // 显示“上传图片”\n        tabsConfigResult.push(tabsConfig[0]);\n      }\n\n      if (config.showLinkImg) {\n        // 显示“网络图片”\n        tabsConfigResult.push(tabsConfig[1]);\n      } // 创建 panel 并显示\n\n\n      var panel = new Panel(this, {\n        width: 300,\n        tabs: tabsConfigResult\n      });\n      panel.show(); // 记录属性\n\n      this.panel = panel;\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n      var editor = this.editor;\n      var $elem = this.$elem;\n\n      if (editor._selectedImg) {\n        this._active = true;\n        $elem.addClass('w-e-active');\n      } else {\n        this._active = false;\n        $elem.removeClass('w-e-active');\n      }\n    }\n  };\n  /*\n      所有菜单的汇总\n  */\n  // 存储菜单的构造函数\n\n  var MenuConstructors = {};\n  MenuConstructors.bold = Bold;\n  MenuConstructors.head = Head;\n  MenuConstructors.fontSize = FontSize;\n  MenuConstructors.fontName = FontName;\n  MenuConstructors.link = Link;\n  MenuConstructors.italic = Italic;\n  MenuConstructors.redo = Redo;\n  MenuConstructors.strikeThrough = StrikeThrough;\n  MenuConstructors.underline = Underline;\n  MenuConstructors.undo = Undo;\n  MenuConstructors.list = List;\n  MenuConstructors.justify = Justify;\n  MenuConstructors.foreColor = ForeColor;\n  MenuConstructors.backColor = BackColor;\n  MenuConstructors.quote = Quote;\n  MenuConstructors.code = Code;\n  MenuConstructors.emoticon = Emoticon;\n  MenuConstructors.table = Table;\n  MenuConstructors.video = Video;\n  MenuConstructors.image = Image;\n  /*\n      菜单集合\n  */\n  // 构造函数\n\n  function Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n  } // 修改原型\n\n\n  Menus.prototype = {\n    constructor: Menus,\n    // 初始化菜单\n    init: function init() {\n      var _this = this;\n\n      var editor = this.editor;\n      var config = editor.config || {};\n      var configMenus = config.menus || []; // 获取配置中的菜单\n      // 根据配置信息，创建菜单\n\n      configMenus.forEach(function (menuKey) {\n        var MenuConstructor = MenuConstructors[menuKey];\n\n        if (MenuConstructor && typeof MenuConstructor === 'function') {\n          // 创建单个菜单\n          _this.menus[menuKey] = new MenuConstructor(editor);\n        }\n      }); // 添加到菜单栏\n\n      this._addToToolbar(); // 绑定事件\n\n\n      this._bindEvent();\n    },\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n      var editor = this.editor;\n      var $toolbarElem = editor.$toolbarElem;\n      var menus = this.menus;\n      var config = editor.config; // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n\n      var zIndex = config.zIndex + 1;\n      objForEach(menus, function (key, menu) {\n        var $elem = menu.$elem;\n\n        if ($elem) {\n          // 设置 z-index\n          $elem.css('z-index', zIndex);\n          $toolbarElem.append($elem);\n        }\n      });\n    },\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n      var menus = this.menus;\n      var editor = this.editor;\n      objForEach(menus, function (key, menu) {\n        var type = menu.type;\n\n        if (!type) {\n          return;\n        }\n\n        var $elem = menu.$elem;\n        var droplist = menu.droplist;\n        var panel = menu.panel; // 点击类型，例如 bold\n\n        if (type === 'click' && menu.onClick) {\n          $elem.on('click', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            }\n\n            menu.onClick(e);\n          });\n        } // 下拉框，例如 head\n\n\n        if (type === 'droplist' && droplist) {\n          $elem.on('mouseenter', function (e) {\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 显示\n\n\n            droplist.showTimeoutId = setTimeout(function () {\n              droplist.show();\n            }, 200);\n          }).on('mouseleave', function (e) {\n            // 隐藏\n            droplist.hideTimeoutId = setTimeout(function () {\n              droplist.hide();\n            }, 0);\n          });\n        } // 弹框类型，例如 link\n\n\n        if (type === 'panel' && menu.onClick) {\n          $elem.on('click', function (e) {\n            e.stopPropagation();\n\n            if (editor.selection.getRange() == null) {\n              return;\n            } // 在自定义事件中显示 panel\n\n\n            menu.onClick(e);\n          });\n        }\n      });\n    },\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n      var menus = this.menus;\n      objForEach(menus, function (key, menu) {\n        if (menu.tryChangeActive) {\n          setTimeout(function () {\n            menu.tryChangeActive();\n          }, 100);\n        }\n      });\n    }\n  };\n  /*\n      粘贴信息的处理\n  */\n  // 获取粘贴的纯文本\n\n  function getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n  } // 获取粘贴的html\n\n\n  function getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n\n    if (clipboardData == null) {\n      pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n      pasteText = clipboardData.getData('text/plain');\n      pasteHtml = clipboardData.getData('text/html');\n    }\n\n    if (!pasteHtml && pasteText) {\n      pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n\n    if (!pasteHtml) {\n      return;\n    } // 过滤word中状态过来的无用字符\n\n\n    var docSplitHtml = pasteHtml.split('</html>');\n\n    if (docSplitHtml.length === 2) {\n      pasteHtml = docSplitHtml[0];\n    } // 过滤无用标签\n\n\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, ''); // 去掉注释\n\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, ''); // 过滤 data-xxx 属性\n\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n      // 忽略图片\n      pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n      // 过滤样式\n      pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n      // 保留样式\n      pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n  } // 获取粘贴的图片文件\n\n\n  function getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n\n    if (txt) {\n      // 有文字，就忽略图片\n      return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n\n    if (!items) {\n      return result;\n    }\n\n    objForEach(items, function (key, value) {\n      var type = value.type;\n\n      if (/image/i.test(type)) {\n        result.push(value.getAsFile());\n      }\n    });\n    return result;\n  }\n  /*\n      编辑区域\n  */\n  // 获取一个 elem.childNodes 的 JSON 数据\n\n\n  function getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n\n    $children.forEach(function (curElem) {\n      var elemResult = void 0;\n      var nodeType = curElem.nodeType; // 文本节点\n\n      if (nodeType === 3) {\n        elemResult = curElem.textContent;\n        elemResult = replaceHtmlSymbol(elemResult);\n      } // 普通 DOM 节点\n\n\n      if (nodeType === 1) {\n        elemResult = {}; // tag\n\n        elemResult.tag = curElem.nodeName.toLowerCase(); // attr\n\n        var attrData = [];\n        var attrList = curElem.attributes || {};\n        var attrListLength = attrList.length || 0;\n\n        for (var i = 0; i < attrListLength; i++) {\n          var attr = attrList[i];\n          attrData.push({\n            name: attr.name,\n            value: attr.value\n          });\n        }\n\n        elemResult.attrs = attrData; // children（递归）\n\n        elemResult.children = getChildrenJSON($(curElem));\n      }\n\n      result.push(elemResult);\n    });\n    return result;\n  } // 构造函数\n\n\n  function Text(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Text.prototype = {\n    constructor: Text,\n    // 初始化\n    init: function init() {\n      // 绑定事件\n      this._bindEvent();\n    },\n    // 清空内容\n    clear: function clear() {\n      this.html('<p><br></p>');\n    },\n    // 获取 设置 html\n    html: function html(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var html = void 0;\n\n      if (val == null) {\n        html = $textElem.html(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        html = html.replace(/\\u200b/gm, '');\n        return html;\n      } else {\n        $textElem.html(val); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 获取 JSON\n    getJSON: function getJSON() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      return getChildrenJSON($textElem);\n    },\n    // 获取 设置 text\n    text: function text(val) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      var text = void 0;\n\n      if (val == null) {\n        text = $textElem.text(); // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n\n        text = text.replace(/\\u200b/gm, '');\n        return text;\n      } else {\n        $textElem.text('<p>' + val + '</p>'); // 初始化选取，将光标定位到内容尾部\n\n        editor.initSelection();\n      }\n    },\n    // 追加内容\n    append: function append(html) {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.append($(html)); // 初始化选取，将光标定位到内容尾部\n\n      editor.initSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // 实时保存选取\n      this._saveRangeRealTime(); // 按回车建时的特殊处理\n\n\n      this._enterKeyHandle(); // 清空时保留 <p><br></p>\n\n\n      this._clearHandle(); // 粘贴事件（粘贴文字，粘贴图片）\n\n\n      this._pasteHandle(); // tab 特殊处理\n\n\n      this._tabHandle(); // img 点击\n\n\n      this._imgHandle(); // 拖拽事件\n\n\n      this._dragHandle();\n    },\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 保存当前的选区\n\n      function saveRange(e) {\n        // 随时保存选区\n        editor.selection.saveRange(); // 更新按钮 ative 状态\n\n        editor.menus.changeActive();\n      } // 按键后保存\n\n\n      $textElem.on('keyup', saveRange);\n      $textElem.on('mousedown', function (e) {\n        // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n        $textElem.on('mouseleave', saveRange);\n      });\n      $textElem.on('mouseup', function (e) {\n        saveRange(); // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n\n        $textElem.off('mouseleave', saveRange);\n      });\n    },\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      function insertEmptyP($selectionElem) {\n        var $p = $('<p><br></p>');\n        $p.insertBefore($selectionElem);\n        editor.selection.createRangeByElem($p, true);\n        editor.selection.restoreSelection();\n        $selectionElem.remove();\n      } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n      function pHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var $parentElem = $selectionElem.parent();\n\n        if ($parentElem.html() === '<code><br></code>') {\n          // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n          // 而且继续回车跳不出去，因此只能特殊处理\n          insertEmptyP($selectionElem);\n          return;\n        }\n\n        if (!$parentElem.equal($textElem)) {\n          // 不是顶级标签\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName();\n\n        if (nodeName === 'P') {\n          // 当前的标签是 P ，不用做处理\n          return;\n        }\n\n        if ($selectionElem.text()) {\n          // 有内容，不做处理\n          return;\n        } // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n\n\n        insertEmptyP($selectionElem);\n      }\n\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          return;\n        } // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n\n\n        pHandle(e);\n      }); // <pre><code></code></pre> 回车时 特殊处理\n\n      function codeHandle(e) {\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n          // 不符合要求 忽略\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        } // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n\n\n        if (editor._willBreakCode === true) {\n          // 此时可以跳出代码块\n          // 插入 <p> ，并将选取定位到 <p>\n          var $p = $('<p><br></p>');\n          $p.insertAfter($parentElem);\n          editor.selection.createRangeByElem($p, true);\n          editor.selection.restoreSelection(); // 修改状态\n\n          editor._willBreakCode = false;\n          e.preventDefault();\n          return;\n        }\n\n        var _startOffset = editor.selection.getRange().startOffset; // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n\n        editor.cmd.do('insertHTML', '\\n');\n        editor.selection.saveRange();\n\n        if (editor.selection.getRange().startOffset === _startOffset) {\n          // 没起作用，再来一遍\n          editor.cmd.do('insertHTML', '\\n');\n        }\n\n        var codeLength = $selectionElem.html().length;\n\n        if (editor.selection.getRange().startOffset + 1 === codeLength) {\n          // 说明光标在代码最后的位置，执行了回车操作\n          // 记录下来，以便下次回车时候跳出 code\n          editor._willBreakCode = true;\n        } // 阻止默认行为\n\n\n        e.preventDefault();\n      }\n\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 13) {\n          // 不是回车键\n          // 取消即将跳转代码块的记录\n          editor._willBreakCode = false;\n          return;\n        } // <pre><code></code></pre> 回车时 特殊处理\n\n\n        codeHandle(e);\n      });\n    },\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var txtHtml = $textElem.html().toLowerCase().trim();\n\n        if (txtHtml === '<p><br></p>') {\n          // 最后剩下一个空行，就不再删除了\n          e.preventDefault();\n          return;\n        }\n      });\n      $textElem.on('keyup', function (e) {\n        if (e.keyCode !== 8) {\n          return;\n        }\n\n        var $p = void 0;\n        var txtHtml = $textElem.html().toLowerCase().trim(); // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n\n        if (!txtHtml || txtHtml === '<br>') {\n          // 内容空了\n          $p = $('<p><br/></p>');\n          $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n\n          $textElem.append($p);\n          editor.selection.createRangeByElem($p, false, true);\n          editor.selection.restoreSelection();\n        }\n      });\n    },\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n      var editor = this.editor;\n      var config = editor.config;\n      var pasteFilterStyle = config.pasteFilterStyle;\n      var pasteTextHandle = config.pasteTextHandle;\n      var ignoreImg = config.pasteIgnoreImg;\n      var $textElem = editor.$textElem; // 粘贴图片、文本的事件，每次只能执行一个\n      // 判断该次粘贴事件是否可以执行\n\n      var pasteTime = 0;\n\n      function canDo() {\n        var now = Date.now();\n        var flag = false;\n\n        if (now - pasteTime >= 100) {\n          // 间隔大于 100 ms ，可以执行\n          flag = true;\n        }\n\n        pasteTime = now;\n        return flag;\n      }\n\n      function resetTime() {\n        pasteTime = 0;\n      } // 粘贴文字\n\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          // 阻止默认行为，使用 execCommand 的粘贴命令\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的文字\n\n\n        var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n        var pasteText = getPasteText(e);\n        pasteText = pasteText.replace(/\\n/gm, '<br>');\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中只能粘贴纯文本\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n          return;\n        } // 先放开注释，有问题再追查 ————\n        // // 表格中忽略，可能会出现异常问题\n        // if (nodeName === 'TD' || nodeName === 'TH') {\n        //     return\n        // }\n\n\n        if (!pasteHtml) {\n          // 没有内容，可继续执行下面的图片粘贴\n          resetTime();\n          return;\n        }\n\n        try {\n          // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n          // 因此执行 insertHTML 会报错\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n          }\n\n          editor.cmd.do('insertHTML', pasteHtml);\n        } catch (ex) {\n          // 此时使用 pasteText 来兼容一下\n          if (pasteTextHandle && isFunction(pasteTextHandle)) {\n            // 用户自定义过滤处理粘贴内容\n            pasteText = '' + (pasteTextHandle(pasteText) || '');\n          }\n\n          editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n        }\n      }); // 粘贴图片\n\n      $textElem.on('paste', function (e) {\n        if (UA.isIE()) {\n          return;\n        } else {\n          e.preventDefault();\n        } // 粘贴图片和文本，只能同时使用一个\n\n\n        if (!canDo()) {\n          return;\n        } // 获取粘贴的图片\n\n\n        var pasteFiles = getPasteImgs(e);\n\n        if (!pasteFiles || !pasteFiles.length) {\n          return;\n        } // 获取当前的元素\n\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var nodeName = $selectionElem.getNodeName(); // code 中粘贴忽略\n\n        if (nodeName === 'CODE' || nodeName === 'PRE') {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(pasteFiles);\n      });\n    },\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n      $textElem.on('keydown', function (e) {\n        if (e.keyCode !== 9) {\n          return;\n        }\n\n        if (!editor.cmd.queryCommandSupported('insertHTML')) {\n          // 必须原生支持 insertHTML 命令\n          return;\n        }\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n\n        if (!$selectionElem) {\n          return;\n        }\n\n        var $parentElem = $selectionElem.parent();\n        var selectionNodeName = $selectionElem.getNodeName();\n        var parentNodeName = $parentElem.getNodeName();\n\n        if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n          // <pre><code> 里面\n          editor.cmd.do('insertHTML', '    ');\n        } else {\n          // 普通文字\n          editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n        }\n\n        e.preventDefault();\n      });\n    },\n    // img 点击\n    _imgHandle: function _imgHandle() {\n      var editor = this.editor;\n      var $textElem = editor.$textElem; // 为图片增加 selected 样式\n\n      $textElem.on('click', 'img', function (e) {\n        var img = this;\n        var $img = $(img);\n\n        if ($img.attr('data-w-e') === '1') {\n          // 是表情图片，忽略\n          return;\n        } // 记录当前点击过的图片\n\n\n        editor._selectedImg = $img; // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n\n        editor.selection.createRangeByElem($img);\n        editor.selection.restoreSelection();\n      }); // 去掉图片的 selected 样式\n\n      $textElem.on('click  keyup', function (e) {\n        if (e.target.matches('img')) {\n          // 点击的是图片，忽略\n          return;\n        } // 删除记录\n\n\n        editor._selectedImg = null;\n      });\n    },\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n      var editor = this.editor; // 禁用 document 拖拽事件\n\n      var $document = $(document);\n      $document.on('dragleave drop dragenter dragover', function (e) {\n        e.preventDefault();\n      }); // 添加编辑区域拖拽事件\n\n      var $textElem = editor.$textElem;\n      $textElem.on('drop', function (e) {\n        e.preventDefault();\n        var files = e.dataTransfer && e.dataTransfer.files;\n\n        if (!files || !files.length) {\n          return;\n        } // 上传图片\n\n\n        var uploadImg = editor.uploadImg;\n        uploadImg.uploadImg(files);\n      });\n    }\n  };\n  /*\n      命令，封装 document.execCommand\n  */\n  // 构造函数\n\n  function Command(editor) {\n    this.editor = editor;\n  } // 修改原型\n\n\n  Command.prototype = {\n    constructor: Command,\n    // 执行命令\n    do: function _do(name, value) {\n      var editor = this.editor; // 使用 styleWithCSS\n\n      if (!editor._useStyleWithCSS) {\n        document.execCommand('styleWithCSS', null, true);\n        editor._useStyleWithCSS = true;\n      } // 如果无选区，忽略\n\n\n      if (!editor.selection.getRange()) {\n        return;\n      } // 恢复选取\n\n\n      editor.selection.restoreSelection(); // 执行\n\n      var _name = '_' + name;\n\n      if (this[_name]) {\n        // 有自定义事件\n        this[_name](value);\n      } else {\n        // 默认 command\n        this._execCommand(name, value);\n      } // 修改菜单状态\n\n\n      editor.menus.changeActive(); // 最后，恢复选取保证光标在原来的位置闪烁\n\n      editor.selection.saveRange();\n      editor.selection.restoreSelection(); // 触发 onchange\n\n      editor.change && editor.change();\n    },\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (this.queryCommandSupported('insertHTML')) {\n        // W3C\n        this._execCommand('insertHTML', html);\n      } else if (range.insertNode) {\n        // IE\n        range.deleteContents();\n        range.insertNode($(html)[0]);\n      } else if (range.pasteHTML) {\n        // IE <= 10\n        range.pasteHTML(html);\n      }\n    },\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n      var editor = this.editor;\n      var range = editor.selection.getRange();\n\n      if (range.insertNode) {\n        range.deleteContents();\n        range.insertNode($elem[0]);\n      }\n    },\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n      document.execCommand(name, false, value);\n    },\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n      return document.queryCommandValue(name);\n    },\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n      return document.queryCommandState(name);\n    },\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n      return document.queryCommandSupported(name);\n    }\n  };\n  /*\n      selection range API\n  */\n  // 构造函数\n\n  function API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n  } // 修改原型\n\n\n  API.prototype = {\n    constructor: API,\n    // 获取 range 对象\n    getRange: function getRange() {\n      return this._currentRange;\n    },\n    // 保存选区\n    saveRange: function saveRange(_range) {\n      if (_range) {\n        // 保存已有选区\n        this._currentRange = _range;\n        return;\n      } // 获取当前的选区\n\n\n      var selection = window.getSelection();\n\n      if (selection.rangeCount === 0) {\n        return;\n      }\n\n      var range = selection.getRangeAt(0); // 判断选区内容是否在编辑内容之内\n\n      var $containerElem = this.getSelectionContainerElem(range);\n\n      if (!$containerElem) {\n        return;\n      } // 判断选区内容是否在不可编辑区域之内\n\n\n      if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n        return;\n      }\n\n      var editor = this.editor;\n      var $textElem = editor.$textElem;\n\n      if ($textElem.isContain($containerElem)) {\n        // 是编辑内容之内的\n        this._currentRange = range;\n      }\n    },\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n      if (toStart == null) {\n        // 默认为 false\n        toStart = false;\n      }\n\n      var range = this._currentRange;\n\n      if (range) {\n        range.collapse(toStart);\n      }\n    },\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n      var range = this._currentRange;\n\n      if (range) {\n        return this._currentRange.toString();\n      } else {\n        return '';\n      }\n    },\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.commonAncestorContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.startContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n      range = range || this._currentRange;\n      var elem = void 0;\n\n      if (range) {\n        elem = range.endContainer;\n        return $(elem.nodeType === 1 ? elem : elem.parentNode);\n      }\n    },\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n      var range = this._currentRange;\n\n      if (range && range.startContainer) {\n        if (range.startContainer === range.endContainer) {\n          if (range.startOffset === range.endOffset) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n      var selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(this._currentRange);\n    },\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n      var editor = this.editor;\n      var range = this.getRange();\n      var $elem = void 0;\n\n      if (!range) {\n        // 当前无 range\n        return;\n      }\n\n      if (!this.isSelectionEmpty()) {\n        // 当前选区必须没有内容才可以\n        return;\n      }\n\n      try {\n        // 目前只支持 webkit 内核\n        if (UA.isWebkit()) {\n          // 插入 &#8203\n          editor.cmd.do('insertHTML', '&#8203;'); // 修改 offset 位置\n\n          range.setEnd(range.endContainer, range.endOffset + 1); // 存储\n\n          this.saveRange(range);\n        } else {\n          $elem = $('<strong>&#8203;</strong>');\n          editor.cmd.do('insertElem', $elem);\n          this.createRangeByElem($elem, true);\n        }\n      } catch (ex) {// 部分情况下会报错，兼容一下\n      }\n    },\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n      // $elem - 经过封装的 elem\n      // toStart - true 开始位置，false 结束位置\n      // isContent - 是否选中Elem的内容\n      if (!$elem.length) {\n        return;\n      }\n\n      var elem = $elem[0];\n      var range = document.createRange();\n\n      if (isContent) {\n        range.selectNodeContents(elem);\n      } else {\n        range.selectNode(elem);\n      }\n\n      if (typeof toStart === 'boolean') {\n        range.collapse(toStart);\n      } // 存储 range\n\n\n      this.saveRange(range);\n    }\n  };\n  /*\n      上传进度条\n  */\n\n  function Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n  }\n\n  Progress.prototype = {\n    constructor: Progress,\n    show: function show(progress) {\n      var _this = this; // 状态处理\n\n\n      if (this._isShow) {\n        return;\n      }\n\n      this._isShow = true; // 渲染\n\n      var $bar = this.$bar;\n\n      if (!this._isRender) {\n        var $textContainer = this.$textContainer;\n        $textContainer.append($bar);\n      } else {\n        this._isRender = true;\n      } // 改变进度（节流，100ms 渲染一次）\n\n\n      if (Date.now() - this._time > 100) {\n        if (progress <= 1) {\n          $bar.css('width', progress * 100 + '%');\n          this._time = Date.now();\n        }\n      } // 隐藏\n\n\n      var timeoutId = this._timeoutId;\n\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(function () {\n        _this._hide();\n      }, 500);\n    },\n    _hide: function _hide() {\n      var $bar = this.$bar;\n      $bar.remove(); // 修改状态\n\n      this._time = 0;\n      this._isShow = false;\n      this._isRender = false;\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /*\n      上传图片\n  */\n  // 构造函数\n\n\n  function UploadImg(editor) {\n    this.editor = editor;\n  } // 原型\n\n\n  UploadImg.prototype = {\n    constructor: UploadImg,\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n      var editor = this.editor;\n      var debug = editor.config.debug;\n      var customAlert = editor.config.customAlert;\n\n      if (debug) {\n        throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n      } else {\n        if (customAlert && typeof customAlert === 'function') {\n          customAlert(alertInfo);\n        } else {\n          alert(alertInfo);\n        }\n      }\n    },\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n      var _this2 = this;\n\n      if (!link) {\n        return;\n      }\n\n      var editor = this.editor;\n      var config = editor.config; // 校验格式\n\n      var linkImgCheck = config.linkImgCheck;\n      var checkResult = void 0;\n\n      if (linkImgCheck && typeof linkImgCheck === 'function') {\n        checkResult = linkImgCheck(link);\n\n        if (typeof checkResult === 'string') {\n          // 校验失败，提示信息\n          alert(checkResult);\n          return;\n        }\n      }\n\n      editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>'); // 验证图片 url 是否有效，无效的话给出提示\n\n      var img = document.createElement('img');\n\n      img.onload = function () {\n        var callback = config.linkImgCallback;\n\n        if (callback && typeof callback === 'function') {\n          callback(link);\n        }\n\n        img = null;\n      };\n\n      img.onerror = function () {\n        img = null; // 无法成功下载图片\n\n        _this2._alert('插入图片错误', \"wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \\\"\" + link + \"\\\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25\");\n\n        return;\n      };\n\n      img.onabort = function () {\n        img = null;\n      };\n\n      img.src = link;\n    },\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n      var _this3 = this;\n\n      if (!files || !files.length) {\n        return;\n      } // ------------------------------ 获取配置信息 ------------------------------\n\n\n      var editor = this.editor;\n      var config = editor.config;\n      var uploadImgServer = config.uploadImgServer;\n      var uploadImgShowBase64 = config.uploadImgShowBase64;\n      var maxSize = config.uploadImgMaxSize;\n      var maxSizeM = maxSize / 1024 / 1024;\n      var maxLength = config.uploadImgMaxLength || 10000;\n      var uploadFileName = config.uploadFileName || '';\n      var uploadImgParams = config.uploadImgParams || {};\n      var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n      var uploadImgHeaders = config.uploadImgHeaders || {};\n      var hooks = config.uploadImgHooks || {};\n      var timeout = config.uploadImgTimeout || 3000;\n      var withCredentials = config.withCredentials;\n\n      if (withCredentials == null) {\n        withCredentials = false;\n      }\n\n      var customUploadImg = config.customUploadImg;\n\n      if (!customUploadImg) {\n        // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n        if (!uploadImgServer && !uploadImgShowBase64) {\n          return;\n        }\n      } // ------------------------------ 验证文件信息 ------------------------------\n\n\n      var resultFiles = [];\n      var errInfo = [];\n      arrForEach(files, function (file) {\n        var name = file.name;\n        var size = file.size; // chrome 低版本 name === undefined\n\n        if (!name || !size) {\n          return;\n        }\n\n        if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n          // 后缀名不合法，不是图片\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u4E0D\\u662F\\u56FE\\u7247\");\n          return;\n        }\n\n        if (maxSize < size) {\n          // 上传图片过大\n          errInfo.push(\"\\u3010\" + name + \"\\u3011\\u5927\\u4E8E \" + maxSizeM + 'M');\n          return;\n        } // 验证通过的加入结果列表\n\n\n        resultFiles.push(file);\n      }); // 抛出验证信息\n\n      if (errInfo.length) {\n        this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n\n        return;\n      }\n\n      if (resultFiles.length > maxLength) {\n        this._alert('一次最多上传' + maxLength + '张图片');\n\n        return;\n      } // ------------------------------ 自定义上传 ------------------------------\n\n\n      if (customUploadImg && typeof customUploadImg === 'function') {\n        customUploadImg(resultFiles, this.insertLinkImg.bind(this)); // 阻止以下代码执行\n\n        return;\n      } // 添加图片数据\n\n\n      var formdata = new FormData();\n      arrForEach(resultFiles, function (file) {\n        var name = uploadFileName || file.name;\n        formdata.append(name, file);\n      }); // ------------------------------ 上传图片 ------------------------------\n\n      if (uploadImgServer && typeof uploadImgServer === 'string') {\n        // 添加参数\n        var uploadImgServerArr = uploadImgServer.split('#');\n        uploadImgServer = uploadImgServerArr[0];\n        var uploadImgServerHash = uploadImgServerArr[1] || '';\n        objForEach(uploadImgParams, function (key, val) {\n          // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n          // val = encodeURIComponent(val)\n          // 第一，将参数拼接到 url 中\n          if (uploadImgParamsWithUrl) {\n            if (uploadImgServer.indexOf('?') > 0) {\n              uploadImgServer += '&';\n            } else {\n              uploadImgServer += '?';\n            }\n\n            uploadImgServer = uploadImgServer + key + '=' + val;\n          } // 第二，将参数添加到 formdata 中\n\n\n          formdata.append(key, val);\n        });\n\n        if (uploadImgServerHash) {\n          uploadImgServer += '#' + uploadImgServerHash;\n        } // 定义 xhr\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', uploadImgServer); // 设置超时\n\n        xhr.timeout = timeout;\n\n        xhr.ontimeout = function () {\n          // hook - timeout\n          if (hooks.timeout && typeof hooks.timeout === 'function') {\n            hooks.timeout(xhr, editor);\n          }\n\n          _this3._alert('上传图片超时');\n        }; // 监控 progress\n\n\n        if (xhr.upload) {\n          xhr.upload.onprogress = function (e) {\n            var percent = void 0; // 进度条\n\n            var progressBar = new Progress(editor);\n\n            if (e.lengthComputable) {\n              percent = e.loaded / e.total;\n              progressBar.show(percent);\n            }\n          };\n        } // 返回数据\n\n\n        xhr.onreadystatechange = function () {\n          var result = void 0;\n\n          if (xhr.readyState === 4) {\n            if (xhr.status < 200 || xhr.status >= 300) {\n              // hook - error\n              if (hooks.error && typeof hooks.error === 'function') {\n                hooks.error(xhr, editor);\n              } // xhr 返回状态错误\n\n\n              _this3._alert('上传图片发生错误', \"\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F \" + xhr.status);\n\n              return;\n            }\n\n            result = xhr.responseText;\n\n            if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n              try {\n                result = JSON.parse(result);\n              } catch (ex) {\n                // hook - fail\n                if (hooks.fail && typeof hooks.fail === 'function') {\n                  hooks.fail(xhr, editor, result);\n                }\n\n                _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n\n                return;\n              }\n            }\n\n            if (!hooks.customInsert && result.errno != '0') {\n              // hook - fail\n              if (hooks.fail && typeof hooks.fail === 'function') {\n                hooks.fail(xhr, editor, result);\n              } // 数据错误\n\n\n              _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n            } else {\n              if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                // 使用者自定义插入方法\n                hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n              } else {\n                // 将图片插入编辑器\n                var data = result.data || [];\n                data.forEach(function (link) {\n                  _this3.insertLinkImg(link);\n                });\n              } // hook - success\n\n\n              if (hooks.success && typeof hooks.success === 'function') {\n                hooks.success(xhr, editor, result);\n              }\n            }\n          }\n        }; // hook - before\n\n\n        if (hooks.before && typeof hooks.before === 'function') {\n          var beforeResult = hooks.before(xhr, editor, resultFiles);\n\n          if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n            if (beforeResult.prevent) {\n              // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n              this._alert(beforeResult.msg);\n\n              return;\n            }\n          }\n        } // 自定义 headers\n\n\n        objForEach(uploadImgHeaders, function (key, val) {\n          xhr.setRequestHeader(key, val);\n        }); // 跨域传 cookie\n\n        xhr.withCredentials = withCredentials; // 发送请求\n\n        xhr.send(formdata); // 注意，要 return 。不去操作接下来的 base64 显示方式\n\n        return;\n      } // ------------------------------ 显示 base64 格式 ------------------------------\n\n\n      if (uploadImgShowBase64) {\n        arrForEach(files, function (file) {\n          var _this = _this3;\n          var reader = new FileReader();\n          reader.readAsDataURL(file);\n\n          reader.onload = function () {\n            _this.insertLinkImg(this.result);\n          };\n        });\n      }\n    }\n  };\n  /*\n      编辑器构造函数\n  */\n  // id，累加\n\n  var editorId = 1; // 构造函数\n\n  function Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n      // 没有传入任何参数，报错\n      throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    } // id，用以区分单个页面不同的编辑器对象\n\n\n    this.id = 'wangEditor-' + editorId++;\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector; // 自定义配置\n\n    this.customConfig = {};\n  } // 修改原型\n\n\n  Editor.prototype = {\n    constructor: Editor,\n    // 初始化配置\n    _initConfig: function _initConfig() {\n      // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n      var target = {};\n      this.config = Object.assign(target, config, this.customConfig); // 将语言配置，生成正则表达式\n\n      var langConfig = this.config.lang || {};\n      var langArgs = [];\n      objForEach(langConfig, function (key, val) {\n        // key 即需要生成正则表达式的规则，如“插入链接”\n        // val 即需要被替换成的语言，如“insert link”\n        langArgs.push({\n          reg: new RegExp(key, 'img'),\n          val: val\n        });\n      });\n      this.config.langArgs = langArgs;\n    },\n    // 初始化 DOM\n    _initDom: function _initDom() {\n      var _this = this;\n\n      var toolbarSelector = this.toolbarSelector;\n      var $toolbarSelector = $(toolbarSelector);\n      var textSelector = this.textSelector;\n      var config$$1 = this.config;\n      var zIndex = config$$1.zIndex; // 定义变量\n\n      var $toolbarElem = void 0,\n          $textContainerElem = void 0,\n          $textElem = void 0,\n          $children = void 0;\n\n      if (textSelector == null) {\n        // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n        $toolbarElem = $('<div></div>');\n        $textContainerElem = $('<div></div>'); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $toolbarSelector.children(); // 添加到 DOM 结构中\n\n        $toolbarSelector.append($toolbarElem).append($textContainerElem); // 自行创建的，需要配置默认的样式\n\n        $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n        $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n      } else {\n        // toolbar 和 text 的选择器都有值，记录属性\n        $toolbarElem = $toolbarSelector;\n        $textContainerElem = $(textSelector); // 将编辑器区域原有的内容，暂存起来\n\n        $children = $textContainerElem.children();\n      } // 编辑区域\n\n\n      $textElem = $('<div></div>');\n      $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%'); // 初始化编辑区域内容\n\n      if ($children && $children.length) {\n        $textElem.append($children);\n      } else {\n        $textElem.append($('<p><br></p>'));\n      } // 编辑区域加入DOM\n\n\n      $textContainerElem.append($textElem); // 设置通用的 class\n\n      $toolbarElem.addClass('w-e-toolbar');\n      $textContainerElem.addClass('w-e-text-container');\n      $textContainerElem.css('z-index', zIndex);\n      $textElem.addClass('w-e-text'); // 添加 ID\n\n      var toolbarElemId = getRandom('toolbar-elem');\n      $toolbarElem.attr('id', toolbarElemId);\n      var textElemId = getRandom('text-elem');\n      $textElem.attr('id', textElemId); // 记录属性\n\n      this.$toolbarElem = $toolbarElem;\n      this.$textContainerElem = $textContainerElem;\n      this.$textElem = $textElem;\n      this.toolbarElemId = toolbarElemId;\n      this.textElemId = textElemId; // 记录输入法的开始和结束\n\n      var compositionEnd = true;\n      $textContainerElem.on('compositionstart', function () {\n        // 输入法开始输入\n        compositionEnd = false;\n      });\n      $textContainerElem.on('compositionend', function () {\n        // 输入法结束输入\n        compositionEnd = true;\n      }); // 绑定 onchange\n\n      $textContainerElem.on('click keyup', function () {\n        // 输入法结束才出发 onchange\n        compositionEnd && _this.change && _this.change();\n      });\n      $toolbarElem.on('click', function () {\n        this.change && this.change();\n      }); //绑定 onfocus 与 onblur 事件\n\n      if (config$$1.onfocus || config$$1.onblur) {\n        // 当前编辑器是否是焦点状态\n        this.isFocus = false;\n        $(document).on('click', function (e) {\n          //判断当前点击元素是否在编辑器内\n          var isChild = $textElem.isContain($(e.target)); //判断当前点击元素是否为工具栏\n\n          var isToolbar = $toolbarElem.isContain($(e.target));\n          var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n          if (!isChild) {\n            //若为选择工具栏中的功能，则不视为成blur操作\n            if (isToolbar && !isMenu) {\n              return;\n            }\n\n            if (_this.isFocus) {\n              _this.onblur && _this.onblur();\n            }\n\n            _this.isFocus = false;\n          } else {\n            if (!_this.isFocus) {\n              _this.onfocus && _this.onfocus();\n            }\n\n            _this.isFocus = true;\n          }\n        });\n      }\n    },\n    // 封装 command\n    _initCommand: function _initCommand() {\n      this.cmd = new Command(this);\n    },\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n      this.selection = new API(this);\n    },\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n      this.uploadImg = new UploadImg(this);\n    },\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n      this.menus = new Menus(this);\n      this.menus.init();\n    },\n    // 添加 text 区域\n    _initText: function _initText() {\n      this.txt = new Text(this);\n      this.txt.init();\n    },\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n      var $textElem = this.$textElem;\n      var $children = $textElem.children();\n\n      if (!$children.length) {\n        // 如果编辑器区域无内容，添加一个空行，重新设置选区\n        $textElem.append($('<p><br></p>'));\n        this.initSelection();\n        return;\n      }\n\n      var $last = $children.last();\n\n      if (newLine) {\n        // 新增一个空行\n        var html = $last.html().toLowerCase();\n        var nodeName = $last.getNodeName();\n\n        if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n          // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n          $textElem.append($('<p><br></p>'));\n          this.initSelection();\n          return;\n        }\n      }\n\n      this.selection.createRangeByElem($last, false, true);\n      this.selection.restoreSelection();\n    },\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n      // -------- 绑定 onchange 事件 --------\n      var onChangeTimeoutId = 0;\n      var beforeChangeHtml = this.txt.html();\n      var config$$1 = this.config; // onchange 触发延迟时间\n\n      var onchangeTimeout = config$$1.onchangeTimeout;\n      onchangeTimeout = parseInt(onchangeTimeout, 10);\n\n      if (!onchangeTimeout || onchangeTimeout <= 0) {\n        onchangeTimeout = 200;\n      }\n\n      var onchange = config$$1.onchange;\n\n      if (onchange && typeof onchange === 'function') {\n        // 触发 change 的有三个场景：\n        // 1. $textContainerElem.on('click keyup')\n        // 2. $toolbarElem.on('click')\n        // 3. editor.cmd.do()\n        this.change = function () {\n          // 判断是否有变化\n          var currentHtml = this.txt.html();\n\n          if (currentHtml.length === beforeChangeHtml.length) {\n            // 需要比较每一个字符\n            if (currentHtml === beforeChangeHtml) {\n              return;\n            }\n          } // 执行，使用节流\n\n\n          if (onChangeTimeoutId) {\n            clearTimeout(onChangeTimeoutId);\n          }\n\n          onChangeTimeoutId = setTimeout(function () {\n            // 触发配置的 onchange 函数\n            onchange(currentHtml);\n            beforeChangeHtml = currentHtml;\n          }, onchangeTimeout);\n        };\n      } // -------- 绑定 onblur 事件 --------\n\n\n      var onblur = config$$1.onblur;\n\n      if (onblur && typeof onblur === 'function') {\n        this.onblur = function () {\n          var currentHtml = this.txt.html();\n          onblur(currentHtml);\n        };\n      } // -------- 绑定 onfocus 事件 --------\n\n\n      var onfocus = config$$1.onfocus;\n\n      if (onfocus && typeof onfocus === 'function') {\n        this.onfocus = function () {\n          onfocus();\n        };\n      }\n    },\n    // 创建编辑器\n    create: function create() {\n      // 初始化配置信息\n      this._initConfig(); // 初始化 DOM\n\n\n      this._initDom(); // 封装 command API\n\n\n      this._initCommand(); // 封装 selection range API\n\n\n      this._initSelectionAPI(); // 添加 text\n\n\n      this._initText(); // 初始化菜单\n\n\n      this._initMenus(); // 添加 图片上传\n\n\n      this._initUploadImg(); // 初始化选区，将光标定位到内容尾部\n\n\n      this.initSelection(true); // 绑定事件\n\n      this._bindEvent();\n    },\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n      $.offAll();\n    }\n  }; // 检验是否浏览器环境\n\n  try {\n    document;\n  } catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n  } // polyfill\n\n\n  polyfill(); // 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\n\n  var inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}'; // 将 css 代码添加到 <style> 中\n\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  style.innerHTML = inlinecss;\n  document.getElementsByTagName('HEAD').item(0).appendChild(style); // 返回\n\n  var index = window.wangEditor || Editor;\n  return index;\n});","import React, { Component } from 'react';\r\nimport Nav from '../../public/nav/nav';\r\nimport { Button, Input, message } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { ADDBlogImg } from '../../store/action';\r\nimport E from 'wangeditor';\r\nimport './addBlog.css';\r\nimport Ajax from '../../component/ajax';\r\n\r\nclass AddBlog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            Blog: '',\r\n            title: ''\r\n        }\r\n        this.submit = this.submit.bind(this);\r\n        this.inputChange = this.inputChange.bind(this);\r\n    }\r\n    submit(e) {\r\n        let _self = this;\r\n        console.log(this.state.title + '\\n' + this.state.Blog);\r\n        if (this.state.title) {\r\n            Ajax.post('/addBlog', {\r\n                title: _self.state.title,\r\n                content: _self.state.Blog\r\n            }).then(res => {\r\n                if (res.data.msg === 200) {\r\n                    message.success(res.data.data);\r\n                } else {\r\n                    message.info(res.data.data);\r\n                }\r\n            }).catch(err => { console.log(err) });\r\n        } else {\r\n            message.info('请填写文章标题');\r\n        }\r\n    }\r\n    inputChange(e) {\r\n        let val = e.target.value;\r\n        this.setState(() => ({\r\n            title: val\r\n        }));\r\n    }\r\n    componentDidMount() {\r\n        this.initEditor();\r\n    }\r\n    initEditor() {\r\n        const elem = this.refs.editorElem;\r\n        const editor = new E(elem);\r\n        let _self = this;\r\n\r\n        this.editor = editor;\r\n\r\n        editor.customConfig.zIndex = 100;\r\n        // 限制一次最多上传 1 张图片\r\n        editor.customConfig.uploadImgMaxLength = 1;\r\n        editor.customConfig.uploadImgServer = 'http://localhost:8080/uploadBlogImg';\r\n\r\n        editor.customConfig.customUploadImg = function (files, insert) {\r\n            if (files[0]) {\r\n                const formData = new window.FormData();\r\n                formData.append('myBlog', files[0]);\r\n                Ajax({\r\n                    method: 'post',\r\n                    url: '/uploadBlogImg',\r\n                    data: formData,\r\n                    headers: { \"Content-Type\": \"multipart/form-data\" }\r\n                }).then(res => {\r\n                    if (res.data.msg === 200) {\r\n                        let src = 'http://localhost:8080/myBlog/' + res.data.filename;\r\n                        insert(src);\r\n                        _self.props.ADDBlogImg(src);\r\n                    } else {\r\n                        message.error('上传图片失败');\r\n                    }\r\n                }).catch(err => { console.log(err) });\r\n            }\r\n        }\r\n        editor.customConfig.menus = [\r\n            'head', // 标题\r\n            'bold', // 粗体\r\n            'fontSize', // 字号\r\n            // 'fontName', // 字体\r\n            'italic', // 斜体\r\n            'underline', // 下划线\r\n            'strikeThrough', // 删除线\r\n            'foreColor', // 文字颜色\r\n            // 'backColor', // 背景颜色\r\n            'link', // 插入链接\r\n            'list', // 列表\r\n            'justify', // 对齐方式\r\n            'quote', // 引用\r\n            // 'emoticon', // 表情\r\n            'image', // 插入图片\r\n            // 'table', // 表格\r\n            // 'video', // 插入视频\r\n            'code', // 插入代码\r\n            'undo', // 撤销\r\n            'redo' // 重复\r\n        ];\r\n        editor.customConfig.lang = {\r\n            '设置标题': 'Title',\r\n            '字号': 'Size',\r\n            '文字颜色': 'Color',\r\n            '设置列表': 'List',\r\n            '有序列表': '',\r\n            '无序列表': '',\r\n            '对齐方式': 'Align',\r\n            '靠左': '',\r\n            '居中': '',\r\n            '靠右': '',\r\n            '正文': 'p',\r\n            '链接文字': 'link text',\r\n            '链接': 'link',\r\n            '上传图片': 'Upload',\r\n            '网络图片': 'Web',\r\n            '图片link': 'image url',\r\n            '插入视频': 'Video',\r\n            '格式如': 'format',\r\n            '上传': 'Upload',\r\n            '创建': 'init'\r\n        };\r\n        editor.customConfig.onchange = function (html) {\r\n            // html 即变化之后的内容\r\n            _self.setState(() => ({\r\n                Blog: html\r\n            }));\r\n        }\r\n        editor.create();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"addBlog-page\">\r\n                <Nav />\r\n                <h2 className=\"addBlog-title\">添加文章</h2>\r\n                <Input onChange={this.inputChange} style={{\r\n                    marginLeft: '2.5%',\r\n                    marginBottom: 30,\r\n                    width: '25%'\r\n                }} addonBefore=\"文章标题:\" defaultValue='' />\r\n                <div ref='editorElem' style={{\r\n                    position: 'relative',\r\n                    width: '95%',\r\n                    textAlign: 'left',\r\n                    margin: 'auto',\r\n                }} />\r\n                <Button onClick={this.submit} style={{\r\n                    marginLeft: '2.5%',\r\n                    marginTop: 25,\r\n                    width: 100\r\n                }} size=\"large\" type='primary'>确认</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {\r\n    ADDBlogImg\r\n})(AddBlog);"],"sourceRoot":""}