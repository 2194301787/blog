{"version":3,"sources":["page/login/login.js"],"names":["Login","handleSubmit","e","preventDefault","_self","Object","G_react_react_own_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_16__","_this","encrypt","JSEncrypt","setPublicKey","props","publicPem","form","validateFields","err","values","Ajax","post","username","userName","password","then","res","data","msg","userObj","phone","birthday","email","myAvatar","status","antd_lib_message__WEBPACK_IMPORTED_MODULE_11___default","a","success","concat","getUser","from","location","state","pathname","history","push","error","catch","console","log","getFieldDecorator","this","react__WEBPACK_IMPORTED_MODULE_18___default","createElement","className","antd_lib_form__WEBPACK_IMPORTED_MODULE_5___default","onSubmit","Item","rules","required","message","antd_lib_input__WEBPACK_IMPORTED_MODULE_7___default","prefix","antd_lib_icon__WEBPACK_IMPORTED_MODULE_9___default","type","style","color","placeholder","Password","valuePropName","initialValue","antd_lib_checkbox__WEBPACK_IMPORTED_MODULE_3___default","react_router_dom__WEBPACK_IMPORTED_MODULE_19__","to","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","htmlType","Component","ProTypes","func","isRequired","connect","user","create"],"mappings":"kZAaMA,qNACFC,aAAe,SAACC,GACZA,EAAEC,iBACF,IAAIC,EAAKC,OAAAC,EAAA,EAAAD,CAAAE,GACLC,EAAU,IAAIC,YAClBD,EAAQE,aAAaN,EAAMO,MAAMC,WACjCL,EAAKI,MAAME,KAAKC,eAAe,SAACC,EAAKC,GAC5BD,GACDE,IAAKC,KAAK,SAAU,CAChBC,SAAUH,EAAOI,SACjBC,SAAUb,EAAQA,QAAQQ,EAAOK,YAClCC,KAAK,SAACC,GACL,GAAqB,MAAjBA,EAAIC,KAAKC,IAAa,CACtB,IAAIC,EAAU,CACVP,SAAUI,EAAIC,KAAKA,KAAKL,SACxBQ,MAAOJ,EAAIC,KAAKA,KAAKG,MACrBC,SAAUL,EAAIC,KAAKA,KAAKI,SACxBC,MAAON,EAAIC,KAAKA,KAAKK,MACrBC,SAAUP,EAAIC,KAAKA,KAAKM,SACxBC,QAAQ,GAEZC,EAAAC,EAAQC,QAAR,qBAAAC,OAAsBT,EAAQP,WAC9Bf,EAAMO,MAAMyB,QAAQV,GAVE,IAWdW,GAASjC,EAAMO,MAAM2B,SAASC,OAAS,CAAEF,KAAM,CAAEG,SAAU,OAA3DH,KACJjC,EAAMO,MAAMoB,QACZ3B,EAAMO,MAAM8B,QAAQC,KAAKL,QAEtBd,EAAIC,KAAKC,IAChBO,EAAAC,EAAQU,MAAMpB,EAAIC,KAAKA,QAI5BoB,MAAM,SAAA7B,GACL8B,QAAQC,IAAI/B,gFAKnB,IACGgC,EAAsBC,KAAKrC,MAAME,KAAjCkC,kBACR,OACIE,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,SACXF,EAAAhB,EAAAiB,cAAA,OAAKC,UAAU,cACXF,EAAAhB,EAAAiB,cAAA,0BACAD,EAAAhB,EAAAiB,cAAAE,EAAAnB,EAAA,CAAMoB,SAAUL,KAAK/C,aAAckD,UAAU,cACzCF,EAAAhB,EAAAiB,cAAAE,EAAAnB,EAAMqB,KAAN,KACKP,EAAkB,WAAY,CAC3BQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCADtCV,CAGGE,EAAAhB,EAAAiB,cAAAQ,EAAAzB,EAAA,CAAO0B,OAAQV,EAAAhB,EAAAiB,cAAAU,EAAA3B,EAAA,CAAM4B,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBC,YAAY,yBAG9Ff,EAAAhB,EAAAiB,cAAAE,EAAAnB,EAAMqB,KAAN,KACKP,EAAkB,WAAY,CAC3BQ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCADtCV,CAGGE,EAAAhB,EAAAiB,cAAAQ,EAAAzB,EAAOgC,SAAP,CAAgBN,OAAQV,EAAAhB,EAAAiB,cAAAU,EAAA3B,EAAA,CAAM4B,KAAK,OAAOC,MAAO,CAAEC,MAAO,qBAAyBF,KAAK,WAAWG,YAAY,mBAGvHf,EAAAhB,EAAAiB,cAAAE,EAAAnB,EAAMqB,KAAN,KACKP,EAAkB,WAAY,CAC3BmB,cAAe,UACfC,cAAc,GAFjBpB,CAIGE,EAAAhB,EAAAiB,cAAAkB,EAAAnC,EAAA,kCAEJgB,EAAAhB,EAAAiB,cAACmB,EAAA,EAAD,CAAMC,GAAG,IAAInB,UAAU,qBAAvB,4BACAF,EAAAhB,EAAAiB,cAAAqB,EAAAtC,EAAA,CAAQ4B,KAAK,UAAUW,SAAS,SAASrB,UAAU,qBAAnD,gBARJ,UAWaF,EAAAhB,EAAAiB,cAACmB,EAAA,EAAD,CAAMC,GAAG,aAAT,2BAtEjBG,cA+EpBzE,EAAM0E,SAAW,CACbtC,QAASsC,IAASC,KAAKC,YASZC,sBANS,SAACtC,GAAD,MAAY,CAChCR,OAAQQ,EAAMuC,KAAK/C,OACnBnB,UAAW2B,EAAM3B,YAImB,CAAEwB,aAA3ByC,CAAsCzB,EAAAnB,EAAK8C,QAAL3B,CAAcpD","file":"static/js/16.07aab2d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Form, Icon, Input, Button, Checkbox, message\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport ProTypes from 'prop-types';\r\nimport { getUser } from '../../store/action';\r\nimport { connect } from 'react-redux';\r\nimport Ajax from '../../component/ajax';\r\nimport { JSEncrypt } from 'jsencrypt'\r\nimport './login.css';\r\n\r\n\r\nclass Login extends Component {\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let _self = this;\r\n        let encrypt = new JSEncrypt();\r\n        encrypt.setPublicKey(_self.props.publicPem);\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                Ajax.post('/login', {\r\n                    username: values.userName,\r\n                    password: encrypt.encrypt(values.password)\r\n                }).then((res) => {\r\n                    if (res.data.msg === 200) {\r\n                        let userObj = {\r\n                            username: res.data.data.username,\r\n                            phone: res.data.data.phone,\r\n                            birthday: res.data.data.birthday,\r\n                            email: res.data.data.email,\r\n                            myAvatar: res.data.data.myAvatar,\r\n                            status: true\r\n                        }\r\n                        message.success(`欢迎您${userObj.username}`);\r\n                        _self.props.getUser(userObj);\r\n                        const { from } = _self.props.location.state || { from: { pathname: \"/\" } };\r\n                        if (_self.props.status) {\r\n                            _self.props.history.push(from);\r\n                        }\r\n                    } else if (res.data.msg === 1) {\r\n                        message.error(res.data.data);\r\n                    } else {\r\n                        message.error(res.data.data);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className='login'>\r\n                <div className=\"login-page\">\r\n                    <h3>登陆</h3>\r\n                    <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                        <Form.Item>\r\n                            {getFieldDecorator('userName', {\r\n                                rules: [{ required: true, message: '请输入姓名' }],\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('password', {\r\n                                rules: [{ required: true, message: '请输入密码' }],\r\n                            })(\r\n                                <Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\r\n                            )}\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            {getFieldDecorator('remember', {\r\n                                valuePropName: 'checked',\r\n                                initialValue: true,\r\n                            })(\r\n                                <Checkbox>记住密码</Checkbox>\r\n                            )}\r\n                            <Link to='/' className=\"login-form-forgot\">忘记密码</Link>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                登陆\r\n                        </Button>\r\n                            Or &nbsp;<Link to='/register'>注册</Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.ProTypes = {\r\n    getUser: ProTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    status: state.user.status,\r\n    publicPem: state.publicPem\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { getUser })(Form.create()(Login));"],"sourceRoot":""}